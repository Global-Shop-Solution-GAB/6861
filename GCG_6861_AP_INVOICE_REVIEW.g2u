Program.Sub.ScreenSU.Start
Gui.frmAPAutomationIndex..Create(DashForm)
Gui.frmAPAutomationIndex..Caption("AP Invoice Review")
Gui.frmAPAutomationIndex..Size(1390,864)
Gui.frmAPAutomationIndex..MinX(0)
Gui.frmAPAutomationIndex..MinY(0)
Gui.frmAPAutomationIndex..Position(0,0)
Gui.frmAPAutomationIndex..AlwaysOnTop(False)
Gui.frmAPAutomationIndex..FontName("Tahoma")
Gui.frmAPAutomationIndex..FontSize(8.25)
Gui.frmAPAutomationIndex..ControlBox(True)
Gui.frmAPAutomationIndex..MaxButton(True)
Gui.frmAPAutomationIndex..MinButton(True)
Gui.frmAPAutomationIndex..MousePointer(0)
Gui.frmAPAutomationIndex..Moveable(True)
Gui.frmAPAutomationIndex..Sizeable(True)
Gui.frmAPAutomationIndex..ShowInTaskBar(True)
Gui.frmAPAutomationIndex..TitleBar(True)
Gui.frmAPAutomationIndex..BarSaveButton(True,False)
Gui.frmAPAutomationIndex..Event(SaveButtonClick,frmProcessAPConformationOpenGUI)
Gui.frmAPAutomationIndex..Event(UnLoad,frmUnload)
Gui.frmAPAutomationIndex..Event(UserButtonClicked,frmAPAutomationIndex_UserButtonClicked)
Gui.frmAPAutomationIndex.SplitContainer1.Create(SplitContainer)
Gui.frmAPAutomationIndex.SplitContainer1.Enabled(True)
Gui.frmAPAutomationIndex.SplitContainer1.Visible(True)
Gui.frmAPAutomationIndex.SplitContainer1.Zorder(0)
Gui.frmAPAutomationIndex.SplitContainer1.Size(1390,798)
Gui.frmAPAutomationIndex.SplitContainer1.Position(0,0)
Gui.frmAPAutomationIndex.SplitContainer1.Orientation(0)
Gui.frmAPAutomationIndex.SplitContainer1.SplitterPosition(890)
Gui.frmAPAutomationIndex.SplitContainer1.Collapsed(False)
Gui.frmAPAutomationIndex.SplitContainer1.Dock(5)
Gui.frmAPAutomationIndex.SplitContainer1.CollapsiblePanel(1)
Gui.frmAPAutomationIndex.SplitContainer1.Event(SplitterMoved,SplitContainer1_SplitterMoved)
Gui.frmAPAutomationIndex.lblNotes.Create(Label,"Notes:",True,32,13,0,349,223,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblNotes.BorderStyle(0)
Gui.frmAPAutomationIndex.lblNotes.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblCreatePO.Create(Label,"Create PO",False,50,13,0,592,126,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblCreatePO.BorderStyle(0)
Gui.frmAPAutomationIndex.lblCreatePO.ForeColor(255)
Gui.frmAPAutomationIndex.lblCreatePO.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblEPart.Create(Label,"Part",True,20,13,0,351,296,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEPart.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEPart.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.cmdETaxCode.Create(Button)
Gui.frmAPAutomationIndex.cmdETaxCode.Enabled(True)
Gui.frmAPAutomationIndex.cmdETaxCode.Visible(True)
Gui.frmAPAutomationIndex.cmdETaxCode.Zorder(0)
Gui.frmAPAutomationIndex.cmdETaxCode.Size(34,20)
Gui.frmAPAutomationIndex.cmdETaxCode.Position(411,386)
Gui.frmAPAutomationIndex.cmdETaxCode.Caption("^")
Gui.frmAPAutomationIndex.cmdETaxCode.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdETaxCode.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdETaxCode.Event(Click,cmdETaxCode_Click)
Gui.frmAPAutomationIndex.cmdETaxCode.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtGrantTotalCheck.Create(Label,"",True,1,13,0,591,172,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.txtGrantTotalCheck.BorderStyle(0)
Gui.frmAPAutomationIndex.txtGrantTotalCheck.ForeColor(255)
Gui.frmAPAutomationIndex.txtGrantTotalCheck.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblEQty.Create(Label,"Qty",True,18,13,0,831,296,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEQty.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEQty.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtETaxCode.Create(TextBox,"",True,59,20,0,351,386,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtETaxCode.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtPOReF.Create(TextBox,"",True,150,22,0,435,100,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtPOReF.FlowBreak(True)
Gui.frmAPAutomationIndex.txtPOReF.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtPOReF.Event(LostFocus,txtPORef_LostFocus)
Gui.frmAPAutomationIndex.cmdEVAT.Create(Button)
Gui.frmAPAutomationIndex.cmdEVAT.Enabled(True)
Gui.frmAPAutomationIndex.cmdEVAT.Visible(True)
Gui.frmAPAutomationIndex.cmdEVAT.Zorder(0)
Gui.frmAPAutomationIndex.cmdEVAT.Size(34,20)
Gui.frmAPAutomationIndex.cmdEVAT.Position(483,386)
Gui.frmAPAutomationIndex.cmdEVAT.Caption("^")
Gui.frmAPAutomationIndex.cmdEVAT.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEVAT.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEVAT.Event(Click,cmdEVAT_Click)
Gui.frmAPAutomationIndex.cmdEVAT.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblEDesc.Create(Label,"Description",True,53,13,0,511,296,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEDesc.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEDesc.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Create(Button)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(False)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Visible(True)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Zorder(0)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Size(67,15)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Position(814,36)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Caption("Link XRef")
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Event(Click,cmdSupplierXRefSearch_Click)
Gui.frmAPAutomationIndex.cmdSupplierXRefSearch.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtEWO.Create(TextBox,"",True,67,20,0,352,349,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEWO.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.cmdEAddLine.Create(Button)
Gui.frmAPAutomationIndex.cmdEAddLine.Enabled(True)
Gui.frmAPAutomationIndex.cmdEAddLine.Visible(True)
Gui.frmAPAutomationIndex.cmdEAddLine.Zorder(0)
Gui.frmAPAutomationIndex.cmdEAddLine.Size(75,23)
Gui.frmAPAutomationIndex.cmdEAddLine.Position(806,384)
Gui.frmAPAutomationIndex.cmdEAddLine.Caption("Add Line")
Gui.frmAPAutomationIndex.cmdEAddLine.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEAddLine.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEAddLine.Event(Click,cmdEAddLine_Click)
Gui.frmAPAutomationIndex.cmdEAddLine.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblETaxAmt.Create(Label,"Amount (No Tax)",True,82,13,0,521,372,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblETaxAmt.BorderStyle(0)
Gui.frmAPAutomationIndex.lblETaxAmt.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtVendorName.Create(TextBox,"",True,170,20,0,641,34,False,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtVendorName.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblSubtotal.Create(Label,"Subtotal",True,47,16,0,349,128,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblSubtotal.BorderStyle(0)
Gui.frmAPAutomationIndex.lblSubtotal.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtVendCode.Create(TextBox,"",True,51,20,0,588,34,False,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtVendCode.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.optInvoice.Create(Option)
Gui.frmAPAutomationIndex.optInvoice.Enabled(True)
Gui.frmAPAutomationIndex.optInvoice.Visible(False)
Gui.frmAPAutomationIndex.optInvoice.Zorder(0)
Gui.frmAPAutomationIndex.optInvoice.Size(104,24)
Gui.frmAPAutomationIndex.optInvoice.Position(781,83)
Gui.frmAPAutomationIndex.optInvoice.Caption("Invoice")
Gui.frmAPAutomationIndex.optInvoice.FontName("Tahoma")
Gui.frmAPAutomationIndex.optInvoice.FontSize(8.25)
Gui.frmAPAutomationIndex.optInvoice.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblETaxCode.Create(Label,"Tax Code",True,46,13,0,351,372,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblETaxCode.BorderStyle(0)
Gui.frmAPAutomationIndex.lblETaxCode.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtGST.Create(TextBox,"",True,150,20,0,435,144,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtGST.FlowBreak(True)
Gui.frmAPAutomationIndex.txtGST.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtGST.Event(LostFocus,txtGST_LostFocus)
Gui.frmAPAutomationIndex.lblCreateVendor.Create(Label,"Create Vendor",False,70,13,0,592,113,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblCreateVendor.BorderStyle(0)
Gui.frmAPAutomationIndex.lblCreateVendor.ForeColor(255)
Gui.frmAPAutomationIndex.lblCreateVendor.FlowBreak(True)
Gui.frmAPAutomationIndex.lblCreateVendor.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblEWO.Create(Label,"Work Order",True,56,13,0,352,335,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEWO.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEWO.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.tabs.Create(Tab)
Gui.frmAPAutomationIndex.tabs.Enabled(True)
Gui.frmAPAutomationIndex.tabs.Visible(True)
Gui.frmAPAutomationIndex.tabs.Zorder(0)
Gui.frmAPAutomationIndex.tabs.Size(335,757)
Gui.frmAPAutomationIndex.tabs.Position(0,0)
Gui.frmAPAutomationIndex.tabs.FontName("Tahoma")
Gui.frmAPAutomationIndex.tabs.FontSize(9)
Gui.frmAPAutomationIndex.tabs.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.tabs.Anchor(7)
Gui.frmAPAutomationIndex.tabs.Dock(3)
Gui.frmAPAutomationIndex.tabs.Event(Click,tabs_Click)
Gui.frmAPAutomationIndex.tabs.Tabs(5)
Gui.frmAPAutomationIndex.tabs.SetTab(0)
Gui.frmAPAutomationIndex.tabs.Caption("Queue")
Gui.frmAPAutomationIndex.tabs.SetTab(1)
Gui.frmAPAutomationIndex.tabs.Caption("Saved")
Gui.frmAPAutomationIndex.tabs.SetTab(2)
Gui.frmAPAutomationIndex.tabs.Caption("Approved")
Gui.frmAPAutomationIndex.tabs.SetTab(3)
Gui.frmAPAutomationIndex.tabs.Caption("Processed")
Gui.frmAPAutomationIndex.tabs.SetTab(4)
Gui.frmAPAutomationIndex.tabs.Caption("Rejected")
Gui.frmAPAutomationIndex.gsgcQueue.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcQueue.Enabled(True)
Gui.frmAPAutomationIndex.gsgcQueue.Visible(True)
Gui.frmAPAutomationIndex.gsgcQueue.Zorder(0)
Gui.frmAPAutomationIndex.gsgcQueue.Size(338,261)
Gui.frmAPAutomationIndex.gsgcQueue.Position(0,0)
Gui.frmAPAutomationIndex.gsgcQueue.Parent("tabs",0)
Gui.frmAPAutomationIndex.gsgcQueue.Anchor(15)
Gui.frmAPAutomationIndex.gsgcQueue.Dock(5)
Gui.frmAPAutomationIndex.gsgcQueue.Event(RowCellClick,gsgcQueue_RowCellClick)
Gui.frmAPAutomationIndex.gsgcSaved.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcSaved.Enabled(True)
Gui.frmAPAutomationIndex.gsgcSaved.Visible(True)
Gui.frmAPAutomationIndex.gsgcSaved.Zorder(0)
Gui.frmAPAutomationIndex.gsgcSaved.Size(259,742)
Gui.frmAPAutomationIndex.gsgcSaved.Position(0,0)
Gui.frmAPAutomationIndex.gsgcSaved.Anchor(15)
Gui.frmAPAutomationIndex.gsgcSaved.Parent("tabs",1)
Gui.frmAPAutomationIndex.gsgcSaved.FlowBreak(True)
Gui.frmAPAutomationIndex.gsgcSaved.Dock(5)
Gui.frmAPAutomationIndex.gsgcSaved.Event(RowCellClick,gsgcSaved_RowCellClick)
Gui.frmAPAutomationIndex.gsgcApproved.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcApproved.Enabled(True)
Gui.frmAPAutomationIndex.gsgcApproved.Visible(True)
Gui.frmAPAutomationIndex.gsgcApproved.Zorder(0)
Gui.frmAPAutomationIndex.gsgcApproved.Size(333,385)
Gui.frmAPAutomationIndex.gsgcApproved.Position(0,0)
Gui.frmAPAutomationIndex.gsgcApproved.Anchor(15)
Gui.frmAPAutomationIndex.gsgcApproved.Parent("tabs",2)
Gui.frmAPAutomationIndex.gsgcApproved.FlowBreak(True)
Gui.frmAPAutomationIndex.gsgcApproved.Dock(5)
Gui.frmAPAutomationIndex.gsgcApproved.Event(RowCellClick,gsgcApproved_RowCellClick)
Gui.frmAPAutomationIndex.gsgcProcessed.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcProcessed.Enabled(True)
Gui.frmAPAutomationIndex.gsgcProcessed.Visible(True)
Gui.frmAPAutomationIndex.gsgcProcessed.Zorder(0)
Gui.frmAPAutomationIndex.gsgcProcessed.Size(286,763)
Gui.frmAPAutomationIndex.gsgcProcessed.Position(0,0)
Gui.frmAPAutomationIndex.gsgcProcessed.Parent("tabs",3)
Gui.frmAPAutomationIndex.gsgcProcessed.Anchor(15)
Gui.frmAPAutomationIndex.gsgcProcessed.Dock(5)
Gui.frmAPAutomationIndex.gsgcReject.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcReject.Enabled(True)
Gui.frmAPAutomationIndex.gsgcReject.Visible(True)
Gui.frmAPAutomationIndex.gsgcReject.Zorder(0)
Gui.frmAPAutomationIndex.gsgcReject.Size(333,768)
Gui.frmAPAutomationIndex.gsgcReject.Position(0,0)
Gui.frmAPAutomationIndex.gsgcReject.Parent("tabs",4)
Gui.frmAPAutomationIndex.gsgcReject.Anchor(15)
Gui.frmAPAutomationIndex.gsgcReject.Dock(5)
Gui.frmAPAutomationIndex.gsgcReject.FlowBreak(True)
Gui.frmAPAutomationIndex.gsgcReject.Event(RowCellClick,gsgcReject_RowCellClick)
Gui.frmAPAutomationIndex.lblVendorMismatch.Create(Label,"PO / Vendor Mismatch",False,105,13,0,592,100,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblVendorMismatch.BorderStyle(0)
Gui.frmAPAutomationIndex.lblVendorMismatch.FlowBreak(True)
Gui.frmAPAutomationIndex.lblVendorMismatch.ForeColor(255)
Gui.frmAPAutomationIndex.lblVendorMismatch.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtELoc.Create(TextBox,"",True,28,20,0,447,310,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtELoc.Create(TextBox,"",True,28,20,0,446,310,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtELoc.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblInvoiceExists.Create(Label,"Invoice Exist",False,61,13,0,592,152,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblInvoiceExists.BorderStyle(0)
Gui.frmAPAutomationIndex.lblInvoiceExists.ForeColor(255)
Gui.frmAPAutomationIndex.lblInvoiceExists.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtDocID.Create(TextBox,"",False,24,20,0,857,61,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtDocID.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblEVat.Create(Label,"VAT",True,19,13,0,451,372,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEVat.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEVat.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblInvoiceNum.Create(Label,"Invoice Number",True,89,16,0,349,59,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblInvoiceNum.BorderStyle(0)
Gui.frmAPAutomationIndex.lblInvoiceNum.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtSubTotal.Create(TextBox,"",True,150,22,0,435,122,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtSubTotal.FlowBreak(True)
Gui.frmAPAutomationIndex.txtSubTotal.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtSubTotal.Event(LostFocus,txtSubtotal_LostFocus)
Gui.frmAPAutomationIndex.txtInvdate.Create(TextBox,"",True,150,22,0,435,78,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtInvdate.FlowBreak(True)
Gui.frmAPAutomationIndex.txtInvdate.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtInvdate.Event(LostFocus,txtInvoiceDate_LostFocus)
Gui.frmAPAutomationIndex.lblESuffix.Create(Label,"Suffix",True,28,13,0,420,335,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblESuffix.BorderStyle(0)
Gui.frmAPAutomationIndex.lblESuffix.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtInvNum.Create(TextBox,"",True,150,22,0,435,56,True,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtInvNum.FlowBreak(True)
Gui.frmAPAutomationIndex.txtInvNum.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtInvNum.Event(LostFocus,txtInvoiceNumber_LostFocus)
Gui.frmAPAutomationIndex.txtETaxAmt.Create(TextBox,"",True,100,20,0,521,386,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtETaxAmt.NumericOnly(1)
Gui.frmAPAutomationIndex.txtETaxAmt.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtNotes.Create(TextboxM)
Gui.frmAPAutomationIndex.txtNotes.Enabled(True)
Gui.frmAPAutomationIndex.txtNotes.Visible(True)
Gui.frmAPAutomationIndex.txtNotes.Zorder(0)
Gui.frmAPAutomationIndex.txtNotes.Size(150,80)
Gui.frmAPAutomationIndex.txtNotes.Position(435,189)
Gui.frmAPAutomationIndex.txtNotes.FontName("Tahoma")
Gui.frmAPAutomationIndex.txtNotes.FontSize(8.25)
Gui.frmAPAutomationIndex.txtNotes.Enabled(False)
Gui.frmAPAutomationIndex.txtNotes.Event(LostFocus,txtNotes_LostFocus)
Gui.frmAPAutomationIndex.txtNotes.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtGTotal.Create(TextBox,"",True,150,20,0,435,167,False,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtGTotal.FlowBreak(True)
Gui.frmAPAutomationIndex.txtGTotal.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblSupplierName.Create(Label,"Supplier Name",True,68,13,0,349,36,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblSupplierName.BorderStyle(0)
Gui.frmAPAutomationIndex.lblSupplierName.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblAPInvDtl.Create(Label,"AP Invoice Details",True,148,23,0,349,0,True,0,"Tahoma",14,,0,0)
Gui.frmAPAutomationIndex.lblAPInvDtl.BorderStyle(0)
Gui.frmAPAutomationIndex.lblAPInvDtl.FlowBreak(True)
Gui.frmAPAutomationIndex.lblAPInvDtl.Event(DblClick,lblAPInvDtl_DblClick)
Gui.frmAPAutomationIndex.lblAPInvDtl.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtESeq.Create(TextBox,"",True,65,20,0,457,349,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtESeq.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblInvoiceDate.Create(Label,"Invoice Date",True,70,16,0,349,82,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblInvoiceDate.BorderStyle(0)
Gui.frmAPAutomationIndex.lblInvoiceDate.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Enabled(True)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Visible(True)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Zorder(0)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Size(558,328)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Position(335,411)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Dock(0)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Event(CellValueChanged,gsgcRecLineItems_CellValueChanged)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Event(LostFocus,gsgcRecLineItems_LostFocus)
Gui.frmAPAutomationIndex.gsgcRecLineItems.Anchor(15)
Gui.frmAPAutomationIndex.lblGST.Create(Label,"Tax",True,18,13,0,349,150,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblGST.BorderStyle(0)
Gui.frmAPAutomationIndex.lblGST.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblTotal.Create(Label,"Total",True,24,13,0,349,174,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblTotal.BorderStyle(0)
Gui.frmAPAutomationIndex.lblTotal.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.optAccrual.Create(Option)
Gui.frmAPAutomationIndex.optAccrual.Enabled(True)
Gui.frmAPAutomationIndex.optAccrual.Visible(False)
Gui.frmAPAutomationIndex.optAccrual.Zorder(0)
Gui.frmAPAutomationIndex.optAccrual.Size(104,24)
Gui.frmAPAutomationIndex.optAccrual.Position(781,110)
Gui.frmAPAutomationIndex.optAccrual.Caption("Accrual")
Gui.frmAPAutomationIndex.optAccrual.FontName("Tahoma")
Gui.frmAPAutomationIndex.optAccrual.FontSize(8.25)
Gui.frmAPAutomationIndex.optAccrual.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtSupplierName.Create(TextBox,"",True,150,20,0,435,34,False,0,"Tahoma",8,,1)
Gui.frmAPAutomationIndex.txtSupplierName.FlowBreak(True)
Gui.frmAPAutomationIndex.txtSupplierName.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtSupplierName.Event(LostFocus,txtSupplierName_LostFocus)
Gui.frmAPAutomationIndex.lblInvoiceExistsSA.Create(Label,"                     ",True,63,13,0,592,71,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblInvoiceExistsSA.BorderStyle(0)
Gui.frmAPAutomationIndex.lblInvoiceExistsSA.ForeColor(255)
Gui.frmAPAutomationIndex.lblInvoiceExistsSA.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.cmdLearn.Create(Button)
Gui.frmAPAutomationIndex.cmdLearn.Enabled(False)
Gui.frmAPAutomationIndex.cmdLearn.Visible(True)
Gui.frmAPAutomationIndex.cmdLearn.Zorder(0)
Gui.frmAPAutomationIndex.cmdLearn.Size(45,20)
Gui.frmAPAutomationIndex.cmdLearn.Position(503,2)
Gui.frmAPAutomationIndex.cmdLearn.Caption("Learn")
Gui.frmAPAutomationIndex.cmdLearn.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdLearn.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdLearn.Event(Click,cmdLearn_Click)
Gui.frmAPAutomationIndex.cmdLearn.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblEGLAcct.Create(Label,"GL Account",True,54,13,0,691,296,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEGLAcct.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEGLAcct.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.cmdEGLAccount.Create(Button)
Gui.frmAPAutomationIndex.cmdEGLAccount.Enabled(True)
Gui.frmAPAutomationIndex.cmdEGLAccount.Visible(True)
Gui.frmAPAutomationIndex.cmdEGLAccount.Zorder(0)
Gui.frmAPAutomationIndex.cmdEGLAccount.Size(35,20)
Gui.frmAPAutomationIndex.cmdEGLAccount.Position(794,310)
Gui.frmAPAutomationIndex.cmdEGLAccount.Caption("^")
Gui.frmAPAutomationIndex.cmdEGLAccount.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEGLAccount.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEGLAccount.Event(Click,cmdEGLAccount_Click)
Gui.frmAPAutomationIndex.cmdEGLAccount.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblRowID.Create(Label,"",False,1,13,0,0,0,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblRowID.BorderStyle(0)
Gui.frmAPAutomationIndex.lblRowID.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblESeq.Create(Label,"Seq",True,18,13,0,457,335,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblESeq.BorderStyle(0)
Gui.frmAPAutomationIndex.lblESeq.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblReceivePO.Create(Label,"Receive PO",False,55,13,0,592,140,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblReceivePO.BorderStyle(0)
Gui.frmAPAutomationIndex.lblReceivePO.ForeColor(255)
Gui.frmAPAutomationIndex.lblReceivePO.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.frameDocumentCount.Create(Frame)
Gui.frmAPAutomationIndex.frameDocumentCount.Enabled(False)
Gui.frmAPAutomationIndex.frameDocumentCount.Visible(True)
Gui.frmAPAutomationIndex.frameDocumentCount.Zorder(0)
Gui.frmAPAutomationIndex.frameDocumentCount.Size(179,30)
Gui.frmAPAutomationIndex.frameDocumentCount.Position(711,2)
Gui.frmAPAutomationIndex.frameDocumentCount.Caption("")
Gui.frmAPAutomationIndex.frameDocumentCount.FontName("Tahoma")
Gui.frmAPAutomationIndex.frameDocumentCount.FontSize(8.25)
Gui.frmAPAutomationIndex.frameDocumentCount.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.frameDocumentCount.Anchor(9)
Gui.frmAPAutomationIndex.frameDocumentCount.BorderStyle(0)
Gui.frmAPAutomationIndex.lblDocumentCount.Create(Label,"X/X Documents This Month",True,127,13,0,5,0,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblDocumentCount.BorderStyle(0)
Gui.frmAPAutomationIndex.lblDocumentCount.Parent("frameDocumentCount")
Gui.frmAPAutomationIndex.lblResetDate.Create(Label,"Count resets on XX/XX/XX",True,124,13,0,5,14,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblResetDate.BorderStyle(0)
Gui.frmAPAutomationIndex.lblResetDate.Parent("frameDocumentCount")
Gui.frmAPAutomationIndex.tabDetails.Create(Tab)
Gui.frmAPAutomationIndex.tabDetails.Enabled(True)
Gui.frmAPAutomationIndex.tabDetails.Visible(True)
Gui.frmAPAutomationIndex.tabDetails.Zorder(0)
Gui.frmAPAutomationIndex.tabDetails.Size(488,798)
Gui.frmAPAutomationIndex.tabDetails.Position(0,0)
Gui.frmAPAutomationIndex.tabDetails.FontName("Tahoma")
Gui.frmAPAutomationIndex.tabDetails.FontSize(8.25)
Gui.frmAPAutomationIndex.tabDetails.Parent("SplitContainer1",1)
Gui.frmAPAutomationIndex.tabDetails.Dock(5)
Gui.frmAPAutomationIndex.tabDetails.Anchor(15)
Gui.frmAPAutomationIndex.tabDetails.Tabs(3)
Gui.frmAPAutomationIndex.tabDetails.SetTab(0)
Gui.frmAPAutomationIndex.tabDetails.Caption("Document")
Gui.frmAPAutomationIndex.tabDetails.SetTab(1)
Gui.frmAPAutomationIndex.tabDetails.Caption("Open Purchase Orders")
Gui.frmAPAutomationIndex.tabDetails.SetTab(2)
Gui.frmAPAutomationIndex.tabDetails.Caption("Open Invoices/Accruals")
Gui.frmAPAutomationIndex.gsgcAPInvoices.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Enabled(True)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Visible(True)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Zorder(0)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Size(486,769)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Position(0,0)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Parent("tabDetails",2)
Gui.frmAPAutomationIndex.gsgcAPInvoices.Dock(5)
Gui.frmAPAutomationIndex.htmlContainer1.Create(GSWebBrowser)
Gui.frmAPAutomationIndex.htmlContainer1.Visible(True)
Gui.frmAPAutomationIndex.htmlContainer1.Zorder(0)
Gui.frmAPAutomationIndex.htmlContainer1.Size(486,769)
Gui.frmAPAutomationIndex.htmlContainer1.Position(0,0)
Gui.frmAPAutomationIndex.htmlContainer1.Parent("tabDetails",0)
Gui.frmAPAutomationIndex.htmlContainer1.Dock(5)
Gui.frmAPAutomationIndex.htmlContainer1.Enabled(True)
Gui.frmAPAutomationIndex.gsgcPOLines.Create(GsGridControl)
Gui.frmAPAutomationIndex.gsgcPOLines.Enabled(True)
Gui.frmAPAutomationIndex.gsgcPOLines.Visible(True)
Gui.frmAPAutomationIndex.gsgcPOLines.Zorder(0)
Gui.frmAPAutomationIndex.gsgcPOLines.Size(486,769)
Gui.frmAPAutomationIndex.gsgcPOLines.Position(0,0)
Gui.frmAPAutomationIndex.gsgcPOLines.Parent("tabDetails",1)
Gui.frmAPAutomationIndex.gsgcPOLines.Dock(5)
Gui.frmAPAutomationIndex.gsgcPOLines.Event(RowCellClick,gsgcPOLines_RowCellClick)
Gui.frmAPAutomationIndex.lblXRefConnect.Create(Label,"                            ",True,84,13,0,592,86,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblXRefConnect.BorderStyle(0)
Gui.frmAPAutomationIndex.lblXRefConnect.ForeColor(255)
Gui.frmAPAutomationIndex.lblXRefConnect.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.flow1.Create(FlowFrame)
Gui.frmAPAutomationIndex.flow1.Enabled(True)
Gui.frmAPAutomationIndex.flow1.Visible(True)
Gui.frmAPAutomationIndex.flow1.Zorder(0)
Gui.frmAPAutomationIndex.flow1.Size(557,57)
Gui.frmAPAutomationIndex.flow1.Position(335,741)
Gui.frmAPAutomationIndex.flow1.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.flow1.Dock(0)
Gui.frmAPAutomationIndex.flow1.Anchor(14)
Gui.frmAPAutomationIndex.flow1.WrapContents(False)
Gui.frmAPAutomationIndex.flow1.AutoScroll(True)
Gui.frmAPAutomationIndex.cmdSave.Create(Button)
Gui.frmAPAutomationIndex.cmdSave.Enabled(True)
Gui.frmAPAutomationIndex.cmdSave.Visible(True)
Gui.frmAPAutomationIndex.cmdSave.Zorder(0)
Gui.frmAPAutomationIndex.cmdSave.Size(112,34)
Gui.frmAPAutomationIndex.cmdSave.Position(628,138)
Gui.frmAPAutomationIndex.cmdSave.Caption("Save")
Gui.frmAPAutomationIndex.cmdSave.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdSave.FontSize(8)
Gui.frmAPAutomationIndex.cmdSave.BackColor(12648384)
Gui.frmAPAutomationIndex.cmdSave.Event(Click,cmdSave_click)
Gui.frmAPAutomationIndex.cmdSave.Parent("flow1")
Gui.frmAPAutomationIndex.cmdSaveApprove.Create(Button)
Gui.frmAPAutomationIndex.cmdSaveApprove.Enabled(True)
Gui.frmAPAutomationIndex.cmdSaveApprove.Visible(True)
Gui.frmAPAutomationIndex.cmdSaveApprove.Zorder(0)
Gui.frmAPAutomationIndex.cmdSaveApprove.Size(112,34)
Gui.frmAPAutomationIndex.cmdSaveApprove.Position(624,23)
Gui.frmAPAutomationIndex.cmdSaveApprove.Caption("Save and Approve")
Gui.frmAPAutomationIndex.cmdSaveApprove.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdSaveApprove.FontSize(8)
Gui.frmAPAutomationIndex.cmdSaveApprove.BackColor(12648384)
Gui.frmAPAutomationIndex.cmdSaveApprove.Event(Click,cmdSaveApprove_Click)
Gui.frmAPAutomationIndex.cmdSaveApprove.Parent("flow1")
Gui.frmAPAutomationIndex.cmdReject.Create(Button)
Gui.frmAPAutomationIndex.cmdReject.Enabled(True)
Gui.frmAPAutomationIndex.cmdReject.Visible(True)
Gui.frmAPAutomationIndex.cmdReject.Zorder(0)
Gui.frmAPAutomationIndex.cmdReject.Size(112,34)
Gui.frmAPAutomationIndex.cmdReject.Position(627,65)
Gui.frmAPAutomationIndex.cmdReject.Caption("Reject")
Gui.frmAPAutomationIndex.cmdReject.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdReject.FontSize(8)
Gui.frmAPAutomationIndex.cmdReject.BackColor(12632319)
Gui.frmAPAutomationIndex.cmdReject.Event(Click,cmdReject_Click)
Gui.frmAPAutomationIndex.cmdReject.Parent("flow1")
Gui.frmAPAutomationIndex.cmdSkipNext.Create(Button)
Gui.frmAPAutomationIndex.cmdSkipNext.Enabled(True)
Gui.frmAPAutomationIndex.cmdSkipNext.Visible(True)
Gui.frmAPAutomationIndex.cmdSkipNext.Zorder(0)
Gui.frmAPAutomationIndex.cmdSkipNext.Size(112,34)
Gui.frmAPAutomationIndex.cmdSkipNext.Position(357,3)
Gui.frmAPAutomationIndex.cmdSkipNext.Caption("Skip Next")
Gui.frmAPAutomationIndex.cmdSkipNext.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdSkipNext.FontSize(8)
Gui.frmAPAutomationIndex.cmdSkipNext.BackColor(16761024)
Gui.frmAPAutomationIndex.cmdSkipNext.Event(Click,cmdSkipNext_Click)
Gui.frmAPAutomationIndex.cmdSkipNext.Parent("flow1")
Gui.frmAPAutomationIndex.cmdQueue.Create(Button)
Gui.frmAPAutomationIndex.cmdQueue.Enabled(True)
Gui.frmAPAutomationIndex.cmdQueue.Visible(False)
Gui.frmAPAutomationIndex.cmdQueue.Zorder(0)
Gui.frmAPAutomationIndex.cmdQueue.Size(112,34)
Gui.frmAPAutomationIndex.cmdQueue.Position(624,99)
Gui.frmAPAutomationIndex.cmdQueue.Caption("Queue")
Gui.frmAPAutomationIndex.cmdQueue.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdQueue.FontSize(8)
Gui.frmAPAutomationIndex.cmdQueue.DisableOnClick(20)
Gui.frmAPAutomationIndex.cmdQueue.BackColor(8454143)
Gui.frmAPAutomationIndex.cmdQueue.Parent("flow1")
Gui.frmAPAutomationIndex.cmdQueue.Event(Click,cmdQueue_Click)
Gui.frmAPAutomationIndex.cmdEWO.Create(Button)
Gui.frmAPAutomationIndex.cmdEWO.Enabled(True)
Gui.frmAPAutomationIndex.cmdEWO.Visible(True)
Gui.frmAPAutomationIndex.cmdEWO.Zorder(0)
Gui.frmAPAutomationIndex.cmdEWO.Size(35,20)
Gui.frmAPAutomationIndex.cmdEWO.Position(525,349)
Gui.frmAPAutomationIndex.cmdEWO.Caption("^")
Gui.frmAPAutomationIndex.cmdEWO.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEWO.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEWO.Event(Click,cmdEWO_Click)
Gui.frmAPAutomationIndex.cmdEWO.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblGSTCheck.Create(Label,"Set Tax",False,37,13,0,592,167,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblGSTCheck.Create(Label,"",True,1,13,0,591,173,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblGSTCheck.BorderStyle(0)
Gui.frmAPAutomationIndex.lblGSTCheck.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lblGSTCheck.BorderStyle(0)
Gui.frmAPAutomationIndex.lblGSTCheck.ForeColor(255)
Gui.frmAPAutomationIndex.lblGSTCheck.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtEQty.Create(TextBox,"",True,50,20,0,831,310,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEQty.NumericOnly(1)
Gui.frmAPAutomationIndex.txtEQty.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.cmdEPart.Create(Button)
Gui.frmAPAutomationIndex.cmdEPart.Enabled(True)
Gui.frmAPAutomationIndex.cmdEPart.Visible(True)
Gui.frmAPAutomationIndex.cmdEPart.Zorder(0)
Gui.frmAPAutomationIndex.cmdEPart.Size(34,20)
Gui.frmAPAutomationIndex.cmdEPart.Position(476,310)
Gui.frmAPAutomationIndex.cmdEPart.Caption("^")
Gui.frmAPAutomationIndex.cmdEPart.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEPart.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEPart.Event(Click,cmdEPart_Click)
Gui.frmAPAutomationIndex.cmdEPart.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.chkETaxable.Create(CheckBox)
Gui.frmAPAutomationIndex.chkETaxable.Enabled(True)
Gui.frmAPAutomationIndex.chkETaxable.Visible(True)
Gui.frmAPAutomationIndex.chkETaxable.Zorder(0)
Gui.frmAPAutomationIndex.chkETaxable.Size(67,20)
Gui.frmAPAutomationIndex.chkETaxable.Position(628,386)
Gui.frmAPAutomationIndex.chkETaxable.Caption("Taxable")
Gui.frmAPAutomationIndex.chkETaxable.FontName("Tahoma")
Gui.frmAPAutomationIndex.chkETaxable.FontSize(8.25)
Gui.frmAPAutomationIndex.chkETaxable.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtESuffix.Create(TextBox,"",True,36,20,0,420,349,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtESuffix.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtEDesc.Create(TextBox,"",True,178,20,0,511,310,False,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEDesc.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtEGLAccount.Create(TextBox,"",True,102,20,0,691,310,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEGLAccount.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtEPart.Create(TextBox,"",True,94,20,0,351,310,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEPart.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.txtEVat.Create(TextBox,"",True,31,20,0,451,386,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEVat.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.frameVariance.Create(Frame)
Gui.frmAPAutomationIndex.frameVariance.Enabled(True)
Gui.frmAPAutomationIndex.frameVariance.Visible(True)
Gui.frmAPAutomationIndex.frameVariance.Zorder(0)
Gui.frmAPAutomationIndex.frameVariance.Size(210,61)
Gui.frmAPAutomationIndex.frameVariance.Position(671,208)
Gui.frmAPAutomationIndex.frameVariance.Caption("")
Gui.frmAPAutomationIndex.frameVariance.FontName("Tahoma")
Gui.frmAPAutomationIndex.frameVariance.FontSize(8.25)
Gui.frmAPAutomationIndex.frameVariance.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.frameVariance.BorderStyle(2)
Gui.frmAPAutomationIndex.lblEVarianceAcct.Create(Label,"Variance Acct",True,65,13,0,89,2,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEVarianceAcct.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEVarianceAcct.Parent("frameVariance")
Gui.frmAPAutomationIndex.lblEVarianceAcct.Anchor(9)
Gui.frmAPAutomationIndex.cmdEVarAdd.Create(Button)
Gui.frmAPAutomationIndex.cmdEVarAdd.Enabled(False)
Gui.frmAPAutomationIndex.cmdEVarAdd.Visible(True)
Gui.frmAPAutomationIndex.cmdEVarAdd.Zorder(0)
Gui.frmAPAutomationIndex.cmdEVarAdd.Size(203,20)
Gui.frmAPAutomationIndex.cmdEVarAdd.Position(4,38)
Gui.frmAPAutomationIndex.cmdEVarAdd.Caption("Add Variance")
Gui.frmAPAutomationIndex.cmdEVarAdd.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEVarAdd.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEVarAdd.Event(Click,cmdEVarAdd_Click)
Gui.frmAPAutomationIndex.cmdEVarAdd.Parent("frameVariance")
Gui.frmAPAutomationIndex.cmdEVarAdd.Anchor(14)
Gui.frmAPAutomationIndex.txtEVarianceAmt.Create(TextBox,"",True,83,20,0,4,16,False,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEVarianceAmt.Parent("frameVariance")
Gui.frmAPAutomationIndex.txtEVarianceAmt.Anchor(13)
Gui.frmAPAutomationIndex.txtEVarianceAcct.Create(TextBox,"",True,83,20,0,89,16,True,0,"Tahoma",8.25,,1)
Gui.frmAPAutomationIndex.txtEVarianceAcct.Parent("frameVariance")
Gui.frmAPAutomationIndex.txtEVarianceAcct.Anchor(9)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Create(Button)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Enabled(True)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Visible(True)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Zorder(0)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Size(34,20)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Position(173,16)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Caption("^")
Gui.frmAPAutomationIndex.cmdEVarBrowse.FontName("Tahoma")
Gui.frmAPAutomationIndex.cmdEVarBrowse.FontSize(8.25)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Event(Click,cmdEVarBrowse_Click)
Gui.frmAPAutomationIndex.cmdEVarBrowse.Parent("frameVariance")
Gui.frmAPAutomationIndex.cmdEVarBrowse.Anchor(9)
Gui.frmAPAutomationIndex.lblEVarianceAmt.Create(Label,"Variance Amt",True,63,13,0,4,2,True,0,"Tahoma",8.25,,0,0)
Gui.frmAPAutomationIndex.lblEVarianceAmt.BorderStyle(0)
Gui.frmAPAutomationIndex.lblEVarianceAmt.Parent("frameVariance")
Gui.frmAPAutomationIndex.lblEVarianceAmt.Anchor(13)
Gui.frmAPAutomationIndex.lblPOReference.Create(Label,"PO Reference",True,71,16,0,349,105,True,0,"Tahoma",8,,0,0)
Gui.frmAPAutomationIndex.lblPOReference.BorderStyle(0)
Gui.frmAPAutomationIndex.lblPOReference.Parent("SplitContainer1",0)
Gui.frmAPAutomationIndex.lookupGL.Create(Lookup)
Gui.frmAPAutomationIndex.lookupGL.Enabled(True)
Gui.frmAPAutomationIndex.lookupGL.PopulateMode(4)
Gui.frmAPAutomationIndex.lookupGL.Title("Account Lookup")
Gui.frmAPAutomationIndex.lookupGL.StringBasis("")
Gui.frmAPAutomationIndex.lookupGL.FileBasis("")
Gui.frmAPAutomationIndex.lookupGL.ColumnDelim("")
Gui.frmAPAutomationIndex.lookupGL.RowDelim("")
Gui.frmAPAutomationIndex.lookupGL.PreferredStyle(0)
Gui.frmAPAutomationIndex.lookupGL.AssociatedControl("txtEGLAccount")
Gui.frmAPAutomationIndex.lookupGL.Event(SelectionMade,lookupGL_SelectionMade)
Gui.frmAPAutomationIndex.lookupGL.LookupMode(10)
Gui.RejectConformation..Create(BaseForm)
Gui.RejectConformation..Caption("Reject Conformation")
Gui.RejectConformation..Size(328,225)
Gui.RejectConformation..MinX(0)
Gui.RejectConformation..MinY(0)
Gui.RejectConformation..Position(0,0)
Gui.RejectConformation..AlwaysOnTop(True)
Gui.RejectConformation..FontName("Tahoma")
Gui.RejectConformation..FontSize(8.25)
Gui.RejectConformation..ControlBox(True)
Gui.RejectConformation..MaxButton(False)
Gui.RejectConformation..MinButton(True)
Gui.RejectConformation..MousePointer(0)
Gui.RejectConformation..Moveable(True)
Gui.RejectConformation..Sizeable(False)
Gui.RejectConformation..ShowInTaskBar(True)
Gui.RejectConformation..TitleBar(True)
Gui.RejectConformation..Event(UnLoad,cmdRejectCancel_click)
Gui.RejectConformation.lbl1.Create(Label,"Reject Reason",True,99,19,0,22,104,True,0,"Tahoma",8,,0,0)
Gui.RejectConformation.lbl1.BorderStyle(0)
Gui.RejectConformation.txtRejectRejectReason.Create(TextBox,"",True,150,28,0,133,100,True,0,"Tahoma",8,,1)
Gui.RejectConformation.cmdRejectConfirm.Create(Button)
Gui.RejectConformation.cmdRejectConfirm.Enabled(True)
Gui.RejectConformation.cmdRejectConfirm.Visible(True)
Gui.RejectConformation.cmdRejectConfirm.Zorder(0)
Gui.RejectConformation.cmdRejectConfirm.Size(112,34)
Gui.RejectConformation.cmdRejectConfirm.Position(25,139)
Gui.RejectConformation.cmdRejectConfirm.Caption("Reject Document")
Gui.RejectConformation.cmdRejectConfirm.FontName("Tahoma")
Gui.RejectConformation.cmdRejectConfirm.FontSize(8)
Gui.RejectConformation.cmdRejectConfirm.BackColor(12632319)
Gui.RejectConformation.cmdRejectConfirm.Event(Click,cmdRejectConfirm_click)
Gui.RejectConformation.cmdRejectCancel.Create(Button)
Gui.RejectConformation.cmdRejectCancel.Enabled(True)
Gui.RejectConformation.cmdRejectCancel.Visible(True)
Gui.RejectConformation.cmdRejectCancel.Zorder(0)
Gui.RejectConformation.cmdRejectCancel.Size(112,34)
Gui.RejectConformation.cmdRejectCancel.Position(170,139)
Gui.RejectConformation.cmdRejectCancel.Caption("Cancel")
Gui.RejectConformation.cmdRejectCancel.FontName("Tahoma")
Gui.RejectConformation.cmdRejectCancel.FontSize(8)
Gui.RejectConformation.cmdRejectCancel.BackColor(16761024)
Gui.RejectConformation.cmdRejectCancel.Event(Click,cmdRejectCancel_click)
Gui.RejectConformation.lbl2.Create(Label,"Supplier Name",True,104,19,0,19,16,True,0,"Tahoma",8,,0,0)
Gui.RejectConformation.lbl2.BorderStyle(0)
Gui.RejectConformation.lbl3.Create(Label,"Invoice Number",True,113,19,0,13,44,True,0,"Tahoma",8,,0,0)
Gui.RejectConformation.lbl3.BorderStyle(0)
Gui.RejectConformation.lbl4.Create(Label,"Grand Total",True,84,19,0,34,74,True,0,"Tahoma",8,,0,0)
Gui.RejectConformation.lbl4.BorderStyle(0)
Gui.RejectConformation.txtrejectGrandTotal.Create(TextBox,"",True,150,20,0,133,70,True,0,"Tahoma",8,,1)
Gui.RejectConformation.txtrejectGrandTotal.Locked(True)
Gui.RejectConformation.txtRejectInvoiceNumber.Create(TextBox,"",True,150,20,0,133,40,True,0,"Tahoma",8,,1)
Gui.RejectConformation.txtRejectInvoiceNumber.Locked(True)
Gui.RejectConformation.txtRejectSupplierName.Create(TextBox,"",True,150,20,0,133,10,True,0,"Tahoma",8,,1)
Gui.RejectConformation.txtRejectSupplierName.Locked(True)
Gui.ProcessAPConformation..Create(BaseForm)
Gui.ProcessAPConformation..Caption("Process confirmation")
Gui.ProcessAPConformation..Size(300,150)
Gui.ProcessAPConformation..MinX(0)
Gui.ProcessAPConformation..MinY(0)
Gui.ProcessAPConformation..Position(0,0)
Gui.ProcessAPConformation..AlwaysOnTop(False)
Gui.ProcessAPConformation..FontName("Tahoma")
Gui.ProcessAPConformation..FontSize(8.25)
Gui.ProcessAPConformation..ControlBox(True)
Gui.ProcessAPConformation..MaxButton(True)
Gui.ProcessAPConformation..MinButton(True)
Gui.ProcessAPConformation..MousePointer(0)
Gui.ProcessAPConformation..Moveable(True)
Gui.ProcessAPConformation..Sizeable(True)
Gui.ProcessAPConformation..ShowInTaskBar(True)
Gui.ProcessAPConformation..TitleBar(True)
Gui.ProcessAPConformation..Event(UnLoad,frmProcessAPConformationCloseGUI)
Gui.ProcessAPConformation.cmdUpdate.Create(Button)
Gui.ProcessAPConformation.cmdUpdate.Enabled(True)
Gui.ProcessAPConformation.cmdUpdate.Visible(True)
Gui.ProcessAPConformation.cmdUpdate.Zorder(0)
Gui.ProcessAPConformation.cmdUpdate.Size(112,34)
Gui.ProcessAPConformation.cmdUpdate.Position(23,70)
Gui.ProcessAPConformation.cmdUpdate.Caption("Process")
Gui.ProcessAPConformation.cmdUpdate.FontName("Tahoma")
Gui.ProcessAPConformation.cmdUpdate.FontSize(8)
Gui.ProcessAPConformation.cmdUpdate.BackColor(12648384)
Gui.ProcessAPConformation.cmdUpdate.Event(Click,frmAPAutomationIndex_SaveButtonClick)
Gui.ProcessAPConformation.cmdReject.Create(Button)
Gui.ProcessAPConformation.cmdReject.Enabled(True)
Gui.ProcessAPConformation.cmdReject.Visible(True)
Gui.ProcessAPConformation.cmdReject.Zorder(0)
Gui.ProcessAPConformation.cmdReject.Size(112,34)
Gui.ProcessAPConformation.cmdReject.Position(160,70)
Gui.ProcessAPConformation.cmdReject.Caption("Cancel")
Gui.ProcessAPConformation.cmdReject.FontName("Tahoma")
Gui.ProcessAPConformation.cmdReject.FontSize(8)
Gui.ProcessAPConformation.cmdReject.BackColor(16761024)
Gui.ProcessAPConformation.cmdReject.Event(Click,frmProcessAPConformationCloseGUI)
Gui.ProcessAPConformation.lblConfirmation.Create(Label,"Are you sure you want to process into Global Shop?",True,260,19,0,18,20,True,0,"Tahoma",8,,0,0)
Gui.ProcessAPConformation.lblConfirmation.BorderStyle(0)
Gui.ProcessAPConformation.datepicker.Create(DatePicker)
Gui.ProcessAPConformation.datepicker.Enabled(True)
Gui.ProcessAPConformation.datepicker.Visible(True)
Gui.ProcessAPConformation.datepicker.Zorder(0)
Gui.ProcessAPConformation.datepicker.Size(112,34)
Gui.ProcessAPConformation.datepicker.Position(160,40)
Gui.ProcessAPConformation.datepicker.CheckBox(False)
Gui.ProcessAPConformation.datepicker.FontName("Tahoma")
Gui.ProcessAPConformation.datepicker.FontSize(8)
Gui.ProcessAPConformation.lblDateDesc.Create(Label,"Please select your post date:",True,145,19,0,18,45,True,0,"Tahoma",8,,0,0)
Gui.ProcessAPConformation.lblDateDesc.BorderStyle(0)
Gui.FormLearn..Create(BaseForm)
Gui.FormLearn..Caption("AP Automation Learning - After Saving, Close This Window To Return to the Processing Menu")
Gui.FormLearn..Size(1000,800)
Gui.FormLearn..MinX(0)
Gui.FormLearn..MinY(0)
Gui.FormLearn..Position(0,0)
Gui.FormLearn..AlwaysOnTop(False)
Gui.FormLearn..FontName("Tahoma")
Gui.FormLearn..FontSize(8.25)
Gui.FormLearn..ControlBox(True)
Gui.FormLearn..MaxButton(True)
Gui.FormLearn..MinButton(True)
Gui.FormLearn..MousePointer(0)
Gui.FormLearn..Moveable(True)
Gui.FormLearn..Sizeable(True)
Gui.FormLearn..ShowInTaskBar(True)
Gui.FormLearn..TitleBar(True)
Gui.FormLearn..Event(UnLoad,FormLearn_UnLoad)
Gui.FormLearn..Windowstate(2)
Gui.FormLearn.gsWebBrowser.Create(GsWebBrowser)
Gui.FormLearn.gsWebBrowser.Enabled(True)
Gui.FormLearn.gsWebBrowser.Visible(True)
Gui.FormLearn.gsWebBrowser.Zorder(0)
Gui.FormLearn.gsWebBrowser.Size(1000,770)
Gui.FormLearn.gsWebBrowser.Position(0,0)
Gui.FormLearn.gsWebBrowser.Dock(5)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.External.Include.Library("AP043UP1.lib")
Program.External.Include.Library("GCG_6861_2110.lib")
Program.External.Include.Library("GCG_6861_Functions.lib")

'options
V.Global.sCallback.Declare(String, "Unload")
V.Global.sProject.Declare(String, "6861")
V.Global.sProjectTitle.Declare(String, "AP AI Automation - Invoice Processing")

'debug variables
V.Global.bGABLogging.Declare(Boolean, False)
V.Global.bCallWrapperLogging.Declare(Boolean, False)
V.Global.bUploadFileLogging.Declare(Boolean, True)
V.Global.bLogFileLogging.Declare(Boolean, True)

V.Global.sDOCID.Declare
V.Global.iRowIndex.Declare(Long, -1)
V.Global.icountingAPICalls.Declare(Long, 100)
V.Global.sID.Declare
V.Global.sAPIKey.Declare
V.Global.sWorkFlow.Declare
V.Global.sDocumentGroup.Declare
V.Global.sCurrencySymbol.Declare(String)
V.Global.sMoneyFormat.Declare(String)
V.Global.iURLCounter.Declare(Long, 1)
V.Global.sDateFormat.Declare(String)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
	
V.Local.sCaption.Declare(String)
V.Local.bReturn.Declare(Boolean, True)

F.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

F.Intrinsic.Control.CallSub(SetLibraryLoggingVariables, "Project", V.Global.sProject, "ProjectTitle", V.Global.sProjectTitle, "CallBack", V.Global.sCallback, "Unattended", False)

F.Intrinsic.Control.If(V.Global.bGABLogging)
	F.Intrinsic.Debug.EnableLogging
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Global.bCallWrapperLogging)
	F.Intrinsic.Debug.CallWrapperDebugEnable
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Try
	Gui.FormLearn.gsWebBrowser.Event(UrlChanged,gsWebBrowser_UrlChanged)
F.Intrinsic.Control.Catch
	'if they aren't on the latest hotfix, we just don't add this event, don't need to do anything
F.Intrinsic.Control.EndTry

F.Intrinsic.Control.CallSub(LoadContextMenu)
F.Intrinsic.Control.CallSub(SetAPIFile)
F.Intrinsic.Control.CallSub(GetDocumentCount)

'grab the branch code and write in the caption
F.Intrinsic.Control.CallSub(GetBranch)
F.Intrinsic.Control.If(V.Args.Branch.Trim, !=, "NA")
	F.Intrinsic.String.Build("{0} - Branch {1}", V.Screen.frmAPAutomationIndex.Caption, V.Args.Branch, V.Local.sCaption)
	GUI.frmAPAutomationIndex..Caption(V.Local.sCaption)
F.Intrinsic.Control.EndIf

F.Intrinsic.Task.AuxInfoEnable(V.Local.bReturn)
F.Intrinsic.UI.SetBrowserHotTypeAhead(True)
F.ODBC.Connection!con6861.opencompanyconnection(90)

F.Intrinsic.Control.CallSub(LoadCurrencySymbol)
F.Intrinsic.Control.CallSub(CheckDateFormat)

'Step 1, check and verify the core program tables exist
F.Intrinsic.Control.CallSub(checkTable)
'Step 2, download data from xxr

F.Intrinsic.UI.InvokeWaitDialog("Downloading Data")
F.Intrinsic.Control.CallSub(getAppData)    

'Step 3.1, load datatables, queue
F.Intrinsic.UI.ChangeWaitStatus("Loading Queue Data")
F.Intrinsic.Control.CallSub(loadQueues,"Grid","all")
'Step 3.2 Invoice Details (blank on purpose to create grid views and set column properties)
F.Intrinsic.Control.CallSub(loadInvoiceDetail,"InvoiceNumber","","PurchaseOrder","","Status","","Vendor","")

'not using this lookup but it causes issues if we don't do this
F.Intrinsic.Control.CallSub(loadLookups)

'Step 4, apply all column properties
F.Intrinsic.UI.ChangeWaitStatus("Setting Properties")
F.Intrinsic.Control.CallSub(setProperties)

'Step 5, set tabe
GUI.frmAPAutomationIndex.tabs.SetTab(0)
GUI.frmAPAutomationIndex.tabDetails.SetTab(0)
F.Intrinsic.Control.CallSub(tabs_Click)
GUI.frmAPAutomationIndex..SetFocus

'Step 6, Show form
GUI.frmAPAutomationIndex..BarAddButton("ReceivePO","PO Receipt")
GUI.frmAPAutomationIndex..BarAddButton("APBatch","AP Batch from Receipts")
GUI.frmAPAutomationIndex..BarAddButton("Info","AI Details")

F.Intrinsic.Control.CallSub(DisableInput)
F.Intrinsic.Control.CallSub(CheckProcessButtons)
F.Intrinsic.UI.CloseWaitDialog

GUI.frmAPAutomationIndex..Show

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.LoadCurrencySymbol.Start
F.Intrinsic.Control.Try

V.Local.sCountry.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sFormat.Declare(String)

'load currency code
F.Global.General.ReadOption("000000", 1, "USD", V.Local.sCountry)
F.Intrinsic.String.Build("select RTRIM(SYMBOL) from EXCHANGE_CURRENCY where ISO_CODE = '{0}'", V.Local.sCountry, V.Local.sSQL)
F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL, V.Global.sCurrencySymbol)
F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
	V.Global.sCurrencySymbol.Set(V.Global.sCurrencySymbol)
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("{0}#,##0.00", V.Global.sCurrencySymbol, V.Global.sMoneyFormat)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.LoadCurrencySymbol.End

Program.Sub.CheckDateFormat.Start
F.Intrinsic.Control.Try

V.Local.dDate.Declare(Date, "1/2/1900")
V.Local.iDay.Declare(Long)

F.Intrinsic.Date.Day(V.Local.dDate, V.Local.iDay)
F.Intrinsic.Control.If(V.Local.iDay, =, 1)
	V.Global.sDateFormat.Set("DD/MM/YYYY")
F.Intrinsic.Control.Else
	V.Global.sDateFormat.Set("MM/DD/YYYY")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.CheckDateFormat.End

Program.Sub.SetAPIFile.Start
V.Local.sAPIKeyFile.Declare
V.Local.sapikey.Declare
V.Local.sret.Declare

F.Intrinsic.Control.Try

	F.Intrinsic.String.Concat(V.Caller.GasDir,"\",V.Caller.CompanyCode,"_GCG_6861_AP_AUTOMATION_ADMIN_SETTINGS.txt",V.Local.sAPIKeyFile)
	F.Intrinsic.File.File2String(V.Local.sAPIKeyFile,V.Local.sAPIKey)
	F.Intrinsic.String.Split(V.Local.sAPIKey,V.Ambient.NewLine,V.local.sret)
	V.Global.sAPIKey.Set(V.Local.sret(0))
	V.Global.sWorkFlow.Set(V.Local.sret(1))
	V.Global.sDocumentGroup.Set(V.Local.sret(2))
	
	F.Intrinsic.Control.If(V.Global.sDocumentGroup.Long, =, 0)
		V.Global.sDocumentGroup.Set(-1)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.SetAPIFile.End

Program.Sub.GetDocumentCount.Start
'access the Xtracta API to see their document count and remaining

F.Intrinsic.Control.Try

V.Local.sRet.Declare(String)
V.Local.sPostData.Declare(String)
V.Local.iUsed.Declare(Long)
V.Local.iAllowed.Declare(Long)
V.Local.sReset.Declare(String)
V.Local.dReset.Declare(Date)
V.Local.sText.Declare(String)
V.Local.sURL.Declare(String, "https://api-app.xtracta.com/v1/billings/usage")

'build post data
F.Intrinsic.String.Build("{{0}api_key{0}: {0}{1}{0}}", V.Ambient.DblQuote, V.Global.sAPIKey, V.Local.sPostData)

'send API request
F.Communication.REST.SetProperty("ContentType","application/json")
F.Communication.REST.SetProperty("PostData", V.Local.sPostData)
F.Communication.REST.Post(V.Local.sURL)
F.Communication.REST.ReadProperty("TransferredData", V.Local.sRet)

'grab used document count
F.Intrinsic.Control.CallSub(GrabXMLNodeRegEx, "String", V.Local.sRet, "Node", "used_documents", "Index", 0)
V.Local.iUsed.Set(V.Args.XML_REGEX_RETURN.Long)

'grab available document count
F.Intrinsic.Control.CallSub(GrabXMLNodeRegEx, "String", V.Local.sRet, "Node", "allowed_documents", "Index", 0)
V.Local.iAllowed.Set(V.Args.XML_REGEX_RETURN.Long)

'also if they have a pack/secondary plan, grab those
F.Intrinsic.Control.CallSub(GrabXMLNodeRegEx, "String", V.Local.sRet, "Node", "used_documents", "Index", 1)
F.Intrinsic.Math.Add(V.Local.iUsed, V.Args.XML_REGEX_RETURN.Long, V.Local.iUsed)

F.Intrinsic.Control.CallSub(GrabXMLNodeRegEx, "String", V.Local.sRet, "Node", "allowed_documents", "Index", 1)
F.Intrinsic.Math.Add(V.Local.iAllowed, V.Args.XML_REGEX_RETURN.Long, V.Local.iAllowed)

'grab reset date
F.Intrinsic.Control.CallSub(GrabXMLNodeRegEx, "String", V.Local.sRet, "Node", "expiry_date", "Index", 0)
V.Local.sReset.Set(V.Args.XML_REGEX_RETURN)
F.Intrinsic.String.Split(V.Local.sReset, "T", V.Local.sReset)
V.Local.dReset.Set(V.Local.sReset(0))
V.Local.sReset.Redim(0, 0)

F.Intrinsic.String.Build("{0}/{1} Documents This Month", V.Local.iUsed, V.Local.iAllowed, V.Local.sText)
GUI.frmAPAutomationIndex.lblDocumentCount.Caption(V.Local.sText)
F.Intrinsic.String.Build("Count resets on {0}", V.Local.dReset, V.Local.sText)
GUI.frmAPAutomationIndex.lblResetDate.Caption(V.Local.sText)

F.Intrinsic.Control.If(V.Local.iUsed, <, V.Local.iAllowed)
	GUI.frmAPAutomationIndex.lblDocumentCount.ForeColor(V.Enum.ThemeColors!ColorGreen)
F.Intrinsic.Control.Else
	GUI.frmAPAutomationIndex.lblDocumentCount.ForeColor(V.Enum.ThemeColors!ColorRed)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.GetDocumentCount.End

Program.Sub.GrabXMLNodeRegEx.Start
'pass STRING, NODE, INDEX

F.Intrinsic.Control.Try

V.Local.sRegEx.Declare(String)
V.Local.sRegExReturn.Declare(String)
V.Local.sReplace.Declare(String)

F.Intrinsic.String.Build("<{0}>.*?</{0}>", V.Args.Node, V.Local.sRegEx)

F.Intrinsic.String.RegExMatch(V.Args.String, V.Local.sRegEx, True, V.Local.sRegExReturn)
F.Intrinsic.String.Split(V.Local.sRegExReturn, "@!@", V.Local.sRegExReturn)

F.Intrinsic.Control.If(V.Local.sRegExReturn.UBound, >=, V.Args.Index)
	F.Intrinsic.String.Split(V.Local.sRegExReturn(V.Args.Index), "*!*", V.Local.sRegExReturn)
	V.Local.sRegExReturn.RedimPreserve(0, 1)
	F.Intrinsic.Variable.RemoveArrayElementByOrdinal(V.Local.sRegExReturn, 0, V.Local.sRegExReturn)
F.Intrinsic.Control.Else
	V.Local.sRegExReturn.Set("")
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("<{0}>", V.Args.Node, V.Local.sReplace)
F.Intrinsic.String.Replace(V.Local.sRegExReturn, V.Local.sReplace, "", V.Local.sRegExReturn)

F.Intrinsic.String.Build("</{0}>", V.Args.Node, V.Local.sReplace)
F.Intrinsic.String.Replace(V.Local.sRegExReturn, V.Local.sReplace, "", V.Local.sRegExReturn)

F.Intrinsic.Variable.AddRV("XML_REGEX_RETURN", V.Local.sRegExReturn)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.GrabXMLNodeRegEx.End

Program.Sub.checkFieldsSave.Start
F.Intrinsic.Control.Try

	V.Local.bPassVendor.Declare
	V.Local.bPassVendorXReF.Declare
	V.Local.bPassLineSelected.Declare
	V.Local.bPassGLAccount.Declare
	V.Local.bPassGL.Declare
	V.Local.bInvoiceAccrual.Declare
	V.Local.bPassVariance.Declare
	V.Local.bPassInvoiceExists.Declare
	V.Local.bPassInvoiceExistsSA.Declare
	V.Local.bPassVarianceLines.Declare
	V.Local.fVariance.Declare
	V.Local.sError.Declare
	V.Local.sGLCode.Declare
	V.Local.i.Declare
	V.Local.bAccrual.Declare
	V.Local.bInvoice.Declare
	V.Local.fVarAmount.Declare
	V.Local.sVal.Declare
	V.Local.fVarianceAllowed.Declare
	V.Local.fVarianceAllowedNeg.Declare
	V.Local.bFileCheck.Declare(boolean)
	V.Local.sFileLocat.Declare(string)
	V.Local.sgstOffset.Declare
	V.Local.fGSTAmountVariance.Declare
	V.Local.sSubTotal.Declare
	V.Local.sGSTAmount.Declare
	V.Local.sGTotal.Declare
	V.Local.fSubTotalTimesGstAmount.Declare
	V.Local.bVendorMismatch.Declare(Boolean, True)
	
	V.Local.bPassVarianceLines.Set(FALSE)
	V.Local.bPassInvoiceExistsSA.Set(FALSE)
	V.Local.bPassInvoiceExists.Set(false)
	V.Local.bPassVariance.Set(false)
	V.Local.bInvoiceAccrual.Set(false)
	V.Local.bPassGL.Set(true)
	V.Local.bPassGLAccount.Set(false)
	V.Local.bPassLineSelected.Set(false)
	V.Local.bPassVendorXReF.Set(false)
	V.Local.bPassVendor.Set(false)
	
	V.Local.bAccrual.Set(V.Screen.frmAPAutomationIndex!optAccrual.Value)
	V.Local.bInvoice.Set(V.Screen.frmAPAutomationIndex!optInvoice.Value)
	
	'Check if Vendor is created
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!lblCreateVendor.ForeColor,<>,V.Enum.ThemeColors!ColorRed)
		V.Local.bPassVendor.Set(true)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sError,"Vendor is not created.",V.Ambient.NewLine,V.Local.sError)
	F.Intrinsic.Control.EndIf
	
	'Check if Vendor is linked
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!lblXRefConnect.ForeColor,<>,V.Enum.ThemeColors!ColorRed)
		V.Local.bPassVendorXReF.Set(true)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sError,"Vendor xref is not created.",V.Ambient.NewLine,V.Local.sError)
	F.Intrinsic.Control.EndIf
	
	'Check invoice/accrual radio
	F.Intrinsic.Control.If(V.Local.bAccrual,=,true,"or",V.Local.bInvoice,=,true)
		V.Local.bInvoiceAccrual.Set(true)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sError,"Invoice/Accrual option not selected.",V.Ambient.NewLine,V.Local.sError)
	F.Intrinsic.Control.EndIf

	'Check if variance
	F.Intrinsic.String.Replace(V.Screen.frmAPAutomationIndex!txtSubTotal.text,V.Global.sCurrencySymbol,"",V.Local.sSubTotal)
	F.Intrinsic.String.Replace(V.Screen.frmAPAutomationIndex!txtGST.text,V.Global.sCurrencySymbol,"",V.Local.sGSTAmount)
	F.Intrinsic.String.Replace(V.Screen.frmAPAutomationIndex!txtGTotal.text,V.Global.sCurrencySymbol,"",V.Local.sGTotal)
	
	'Manually calulating what the gst should be
	
	F.Intrinsic.Math.Mult(V.Local.sSubTotal,0.15,V.Local.fSubTotalTimesGstAmount)
	F.Intrinsic.Math.Round(V.Local.fSubTotalTimesGstAmount,2,V.Local.fSubTotalTimesGstAmount)
	'comparing the should be gst amount with the gst amount in the text box.

	F.Intrinsic.Math.Sub(V.Local.fSubTotalTimesGstAmount,V.Local.sGSTAmount,V.Local.fGSTAmountVariance)
	F.Intrinsic.Math.Round(V.Local.fGSTAmountVariance,2,V.Local.fGSTAmountVariance)

	'C:\Apps\Global\PLUGINS\GCG_6861_AP_AUTOMATION_ADMIN_SETTINGS.txt
	F.Intrinsic.String.Concat(V.Caller.GasDir,"\",V.Caller.CompanyCode,"_GCG_6861_AP_AUTOMATION_ADMIN_SETTINGS.txt",V.Local.sFileLocat) 'GCG_6861_AP_AUTOMATION_ADMIN_SETTINGS.txt
	F.Intrinsic.File.Exists(V.Local.sFileLocat,V.Local.bFileCheck)
	F.Intrinsic.Control.If(V.Local.bFileCheck)
		F.Intrinsic.File.File2String(V.Local.sFileLocat,V.Local.sVal)
		F.Intrinsic.String.Split(V.Local.sVal,V.Ambient.NewLine,V.Local.sVal)
		V.Local.fVarianceAllowed.Set(V.Local.sVal(2))
		F.Intrinsic.Math.Mult(V.Local.fVarianceAllowed,-1,V.Local.fVarianceAllowedNeg)
		
	F.Intrinsic.Control.Else
		V.Local.fVarianceAllowed.Set(0)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.Local.fGSTAmountVariance,<=,V.Local.fVarianceAllowed) '+ive
		F.Intrinsic.Control.If(V.Local.fGSTAmountVariance,>=,V.Local.fVarianceAllowedNeg) '-ive
			V.Local.bPassVariance.Set(true)
		F.Intrinsic.Control.Else
				V.Local.bPassVariance.Set(true)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		V.Local.bPassVariance.Set(true)
	F.Intrinsic.Control.EndIf

	'check if variance in line exists
	F.Intrinsic.String.Replace(V.Screen.frmAPAutomationIndex!txtEVarianceAmt.text,V.Global.sCurrencySymbol,"",V.Local.fVarAmount)
	
	F.Intrinsic.Control.If(V.Local.fVarAmount,=,0)
		V.Local.bPassVarianceLines.Set(true)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sError,"Variance Exists. Please Correct.",V.Ambient.NewLine,V.Local.sError)
	F.Intrinsic.Control.EndIf
	
	'Check if Invoice Exists
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!lblInvoiceExists.ForeColor,<>,V.Enum.ThemeColors!ColorRed)
		V.Local.bPassInvoiceExists.Set(true)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sError,"Cannot Upload, invoice Exists for Vendor.",V.Ambient.NewLine,V.Local.sError)
	F.Intrinsic.Control.EndIf
	
	'Check if Invoice Exists
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!lblInvoiceExistsSA.ForeColor,<>,V.Enum.ThemeColors!ColorRed)
		V.Local.bPassInvoiceExistsSA.Set(true)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sError,"Cannot Upload, invoice Exists for Vendor in approve queue.",V.Ambient.NewLine,V.Local.sError)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!lblVendorMismatch.Visible)
		F.Intrinsic.String.Concat(V.Local.sError,"Cannot Upload, PO vendor does not match invoice vendor.",V.Ambient.NewLine,V.Local.sError)
		V.Local.bVendorMismatch.Set(False)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Variable.AddRV("rPassVendor",V.Local.bPassVendor)
	F.Intrinsic.Variable.AddRV("rPassVendorXRef",V.Local.bPassVendorXRef)
	F.Intrinsic.Variable.AddRV("rPassGL",V.Local.bPassGL)
	F.Intrinsic.Variable.AddRV("rPassIA",V.Local.bInvoiceAccrual)
	F.Intrinsic.Variable.AddRV("rPassVariance",V.Local.bPassVariance)
	F.Intrinsic.Variable.AddRV("rPassInvoiceExists",V.Local.bPassInvoiceExists)
	F.Intrinsic.Variable.AddRV("rPassInvoiceExistsSA",V.Local.bPassInvoiceExistsSA)
	F.Intrinsic.Variable.AddRV("rMessage",V.Local.sError)
	F.Intrinsic.Variable.AddRV("rPassVarianceLines",V.Local.bPassVarianceLines)
	F.Intrinsic.Variable.AddRV("rVendorMatch",V.Local.bVendorMismatch)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.checkFieldsSave.End

Program.Sub.checkXrefSuppPORec.Start
'Called by gsgcQueue_RowCellClick
F.Intrinsic.Control.Try

	V.Local.sLink.Declare
	V.Local.sSupplierName.Declare
	V.Local.sInvoiceNumber.Declare
	V.Local.sInvoiceDate.Declare
	V.Local.sPORefrence.Declare
	V.Local.sDOCID.Declare
	V.Local.sVendCode.Declare
	V.Local.sSubTotal.Declare
	V.Local.sGSTTotal.Declare
	V.Local.sSQL.Declare
	V.Local.sXReF.Declare
	V.Local.bVendorCheck.Declare
	V.Local.bPOHead.Declare
	V.Local.bPOreceiver.Declare
	V.Local.bXRefCheck.Declare
	V.Local.inothing.Declare
	V.Local.sLinkTemp.Declare
	V.Local.sSQLUpdatePath.Declare
	V.Local.bXRefCheck1.Declare
	V.Local.bInvoice.Declare
	V.Local.bInvoiceSA.Declare
	V.Local.sVendorName.Declare(String)
	V.Local.bXREFChecking.Declare
	
	V.Local.sSupplierName.Set(V.Screen.frmAPAutomationIndex!txtSupplierName.text)
	V.Local.sInvoiceNumber.Set(V.Screen.frmAPAutomationIndex!txtInvNum.text)
	V.Local.sInvoiceDate.Set(V.Screen.frmAPAutomationIndex!txtInvdate.text)
	V.Local.sPORefrence.Set(V.Screen.frmAPAutomationIndex!txtPOReF.text)
	V.Local.sSubTotal.Set(V.Screen.frmAPAutomationIndex!txtSubTotal.text)
	V.local.sGSTTotal.Set(V.Screen.frmAPAutomationIndex!txtGST.text)
	V.local.sDOCID.Set(V.Global.sDOCID)
	V.Local.sVendCode.Set(V.Screen.frmAPAutomationIndex!txtVendCode.text)
	
	'Checking Xref is created
	F.Intrinsic.String.RTrim(V.Local.sVendCode, V.Local.sVendCode)
	F.Intrinsic.Control.CallSub(CheckXrefVendorExist, "SupplierName", V.Local.sSupplierName, "DOCID", V.Local.sDOCID)
	F.Intrinsic.Variable.ArgToVar("rVendorCheck",V.Local.bXRefCheck) 'IF Xref is created return TRUE ////needs to look up from db
	F.Intrinsic.Variable.ArgToVar("rVendorCode",V.Local.sVendCode) 'return the xref being VULCAN
	F.Intrinsic.Variable.ArgToVar("rxref",V.Local.bXRefCheck1) 'this is what XREF CHECK is shown in the db
	GUI.frmAPAutomationIndex.txtVendCode.Text(V.Local.sVendCode)
	
	'grab the vendor name
	F.Intrinsic.Control.If(V.Local.sVendCode.Trim, =, "")
		GUI.frmAPAutomationIndex.txtVendorName.Text("")
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("select RTRIM(NAME_VENDOR) from V_VENDOR_MASTER where VENDOR = '{0}'", V.Local.sVendCode, V.Local.sSQL)
		F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL, V.Local.sVendorName)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
			GUI.frmAPAutomationIndex.txtVendorName.Text("")
		F.Intrinsic.Control.Else
			GUI.frmAPAutomationIndex.txtVendorName.Text(V.Local.sVendorName)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	V.Local.bXREFChecking.Set(V.Local.bXRefCheck)
	F.Intrinsic.Variable.AddRV("XREFCheck",V.Local.bXREFChecking)
	
	'Call Routines to format colour/linkage
	F.Intrinsic.Control.CallSub(setGSSXRefFormatColourLink,"XRefCheck1",V.Local.bXRefCheck1,"XRefCheck",V.Local.bXRefCheck,"SupplierName",V.Local.sSupplierName.Trim,"DocID",V.Global.sDOCID,"VendCode",V.Local.sVendCode)
	F.Intrinsic.Control.CallSub(setGSSVendorFormatColour,"VendorCheck",V.Local.bXRefCheck)
	
	'Checking Vendor is created
	F.Intrinsic.Control.CallSub(CheckGSSVendorExist, "VendorNo", V.Local.sVendCode)
	F.Intrinsic.Variable.ArgToVar("rVendor",V.Local.bVendorCheck)
	
	'Check Purchase Order is created in the system
	F.Intrinsic.Control.CallSub(CheckPONumberExist, "POHead", V.Local.sPORefrence)
	F.Intrinsic.Variable.ArgToVar("POHead",V.Local.bPOHead)
	F.Intrinsic.Control.If(V.Local.bPOHead,=,True)
		GUI.frmAPAutomationIndex.lblCreatePO.Caption("PO Found")
		GUI.frmAPAutomationIndex.lblCreatePO.Visible(True)
		GUI.frmAPAutomationIndex.lblCreatePO.ForeColor(V.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.lblCreatePO.Caption("PO Not Found")
		GUI.frmAPAutomationIndex.lblCreatePO.Visible(True)
		GUI.frmAPAutomationIndex.lblCreatePO.ForeColor(V.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.CallSub(CheckPOVendor)
	
	'Checking if PO is recived
	F.Intrinsic.Control.CallSub(CheckPOreceiverExist,"POHead",V.Local.sPORefrence)
	F.Intrinsic.Variable.ArgToVar("POreceiver",V.Local.bPOreceiver)
	F.Intrinsic.Control.If(V.Local.bPOreceiver,=,True)
		GUI.frmAPAutomationIndex.lblReceivePO.Caption("PO Received")
		GUI.frmAPAutomationIndex.lblReceivePO.Visible(True)
		GUI.frmAPAutomationIndex.lblReceivePO.ForeColor(V.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.lblReceivePO.Caption("PO Not Received")
		GUI.frmAPAutomationIndex.lblReceivePO.Visible(True)
		GUI.frmAPAutomationIndex.lblReceivePO.ForeColor(V.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf
	
	'checking varables and locking or unlocking the approve buttion
	F.Intrinsic.Control.If(V.Local.bXRefCheck,=,True,"AND",V.Local.bVendorCheck,=,True)
		GUI.frmAPAutomationIndex.cmdSave.Locked(False)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.cmdSave.Locked(True)
	F.Intrinsic.Control.EndIf
	
	'Check Invoice
	F.Intrinsic.Control.CallSub(checkInvoiceExists, "Invoice", V.Local.sInvoiceNumber,"Vendor",V.Local.sVendCode)
	F.Intrinsic.Variable.ArgToVar("rInvoice",V.Local.bInvoice)
	F.Intrinsic.Control.If(V.Local.bInvoice)
		GUI.frmAPAutomationIndex.lblInvoiceExists.Caption("Cannot Upload, Invoice Exist")
		GUI.frmAPAutomationIndex.lblInvoiceExists.ForeColor(V.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.lblInvoiceExists.Caption("Can Upload, Invoice Not Found")
		GUI.frmAPAutomationIndex.lblInvoiceExists.ForeColor(V.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.EndIf
	
	'Check Invoice SA
	F.Intrinsic.Control.CallSub(checkInvoiceExistsSA, "Invoice", V.Local.sInvoiceNumber,"Vendor",V.Local.sVendCode)
	F.Intrinsic.Variable.ArgToVar("rInvoiceSA",V.Local.bInvoiceSA)
	F.Intrinsic.Control.If(V.Local.bInvoiceSA)
		GUI.frmAPAutomationIndex.lblInvoiceExistsSA.Caption("Cannot Upload, Invoice Exist in approval")
		GUI.frmAPAutomationIndex.lblInvoiceExistsSA.ForeColor(V.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.lblInvoiceExistsSA.Caption("")
		GUI.frmAPAutomationIndex.lblInvoiceExistsSA.ForeColor(V.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.checkXrefSuppPORec.End

Program.Sub.CheckPOVendor.Start
F.Intrinsic.Control.Try

V.Local.sSQL.Declare(String)
V.Local.bShow.Declare(Boolean, False)

'if no vendor, do nothing
F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!txtVendCode.Text.Trim, !=, "")
	'if vendor doesn't exist, do nothing
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!lblCreateVendor.ForeColor, !=, V.Enum.ThemeColors!ColorRed)
		'if no PO, do nothing
		F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!txtPOReF.Text.Trim, !=, "")
			'if PO doesn't exist, do nothing
			F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!lblCreatePO.ForeColor, !=, V.Enum.ThemeColors!ColorRed)
				F.Intrinsic.String.Build("select RTRIM(VENDOR) from V_PO_HEADER where PURCHASE_ORDER = '{0}'", V.Screen.frmAPAutomationIndex!txtPOReF.Text.Trim, V.Local.sSQL)
				F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL, V.Local.sSQL)
				F.Intrinsic.Control.If(V.Local.sSQL, !=, V.Screen.frmAPAutomationIndex!txtVendCode.Text.Trim)
					V.Local.bShow.Set(True)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

GUI.frmAPAutomationIndex.lblVendorMismatch.Visible(V.Local.bShow)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.CheckPOVendor.End

Program.Sub.checkInvoiceExists.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare
	V.Local.sret.Declare
	V.Local.bInvoiceExists.Declare
	
	F.Intrinsic.String.Build("SELECT * FROM AP_OPEN_ITEMS WHERE VENDOR='{0}' AND INVOICE='{1}'",V.Args.Vendor,V.Args.Invoice.PSQLFriendly,V.Local.sSQL)
	F.ODBC.Connection!con6861.executeandreturn(V.Local.sSQL,V.Local.sret)
	F.Intrinsic.Control.If(V.Local.sret.Trim,<>,"")
		V.Local.bInvoiceExists.Set(true)
	F.Intrinsic.Control.Else
		'also check if the invoice is already in a batch
		F.Intrinsic.String.Build("select INVC from V_AP_OPEN_BATCHES where VEND = '{0}' and INVC = '{1}'", V.Args.Vendor.Trim, V.Args.Invoice.PSQLFriendly, V.Local.sSQL)
		F.ODBC.Connection!Con6861.ExecuteAndReturn(V.Local.sSQL, V.Local.sret)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
			V.Local.bInvoiceExists.Set(True)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Variable.AddRV("rInvoice",V.Local.bInvoiceExists)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.checkInvoiceExists.End

Program.Sub.checkInvoiceExistsSA.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare
	V.Local.sret.Declare
	V.Local.bInvoiceExistsSA.Declare
	
	F.Intrinsic.String.Build("select APAPPROVEID, VENDCODE, INVCNUMB from GCG_6861_AP_SA A LEFT JOIN GCG_6861_AP_HEAD B ON A.HID = B.ID WHERE VENDCODE='{0}' AND INVCNUMB='{1}'",V.Args.Vendor,V.Args.Invoice.PSQLFriendly,V.Local.sSQL)
	F.ODBC.Connection!con6861.executeandreturn(V.Local.sSQL,V.Local.sret)
	F.Intrinsic.Control.If(V.Local.sret.Trim,<>,"")
		V.Local.bInvoiceExistsSA.Set(true)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Variable.AddRV("rInvoiceSA",V.Local.bInvoiceExistsSA)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.checkInvoiceExistsSA.End

Program.Sub.CheckXrefVendorExist.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare
	V.Local.sSQLDOCID.Declare
	V.Local.sXReF.Declare(String, "")
	V.Local.sVAT.Declare
	V.Local.bVendorNo.Declare(Boolean, False)
	V.Local.sVendorName.Declare
	V.Local.bXRefCheck.Declare(Boolean, False)
	V.Local.sDOCID.Declare
	V.Local.sTaxCode.Declare(String, "")
	V.Local.sTaxRate.Declare
	V.Local.sGLAccount.Declare
	V.Local.sSQL1.Declare
	V.Local.iRet.Declare

	V.Local.sVendorName.Set(V.Args.SupplierName)
	F.Intrinsic.Control.If(V.Local.sVendorName.Trim, !=, "")
		F.Intrinsic.String.Concat("select VENDORCODE from GCG_6861_AP_XREF WHERE VENDORNAME = '", V.Local.sVendorName.PSQLFriendly ,"'",V.local.sSQL)
		F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sXRef)
		F.Intrinsic.Control.If(V.Local.sXReF.Trim,=,"")
			GUI.frmAPAutomationIndex.chkETaxable.Value(false)
			GUI.frmAPAutomationIndex.txtETaxCode.Text("")
			GUI.frmAPAutomationIndex.txtEGLAccount.Text("")
			GUI.frmAPAutomationIndex.txtEVat.text("")
		F.Intrinsic.Control.Else
			'SOFT UPDATE IN CASE VENDOR CODE IS NOT SET
			F.Intrinsic.String.Build("UPDATE GCG_6861_AP_HEAD SET VENDCODE = '{0}' where docid='{1}'",V.Local.sXRef,V.Screen.frmAPAutomationIndex!txtDocID.TEXT,V.Local.sSQL)
			F.ODBC.Connection!con6861.execute(V.Local.sSQL)
			
			F.Intrinsic.String.Instr(V.Local.sXRef,"#$#",V.Local.iRET)
			F.Intrinsic.Control.If(V.Local.iRet,>,0)
				F.Intrinsic.UI.Msgbox("ERROR!  Multiple cross references found.  Please delete!")
			F.Intrinsic.Control.Else
				V.Local.bXRefCheck.Set(True)
				V.Local.bVendorNo.Set(True)
				
				F.Intrinsic.String.Build("select DISTINCT TAX_CODE from v_VENDOR_ADDL WHERE VENDOR = '{0}'",V.Local.sXRef,V.Local.sSQL1)
				F.ODBC.Connection!con6861.ExecuteAndReturn(V.local.sSQL1,V.local.sTaxCode)
				
				F.Intrinsic.Control.If(V.Local.sTaxCode.Trim,=,"")
					F.Intrinsic.String.Concat("select DFLT_TAX_GRP_CODE from VAT_VEND_TAX where VENDOR_ID = '",V.local.sXRef,"'", V.Local.sSQL1)
					F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL1,V.Local.sTaxCode)
				F.Intrinsic.Control.EndIf
				
				F.Intrinsic.Control.If(V.Local.sTaxCode.Trim,!=,"")
					GUI.frmAPAutomationIndex.txtETaxCode.Text(V.Local.sTaxCode)
					GUI.frmAPAutomationIndex.chkETaxable.Value(true)
				F.Intrinsic.Control.Else
					GUI.frmAPAutomationIndex.txtETaxCode.Text("")
					GUI.frmAPAutomationIndex.chkETaxable.Value(false)
				F.Intrinsic.Control.EndIf
					
				F.Intrinsic.String.Build("select NORMAL_GL_ACCOUNT from V_VENDOR_MASTER WHERE VENDOR = '{0}'",V.Local.sXRef,V.Local.sSQL1)
				F.ODBC.Connection!con6861.ExecuteAndReturn(V.local.sSQL1,V.local.sGLAccount)
				GUI.frmAPAutomationIndex.txtEGLAccount.Text(V.Local.sGLAccount.Trim)
					
				F.Intrinsic.String.Build("select DFLT_VAT_RULE from VAT_VEND_TAX WHERE VENDOR_ID = '{0}'",V.Local.sXRef,V.Local.sSQL1)
				F.ODBC.Connection!con6861.ExecuteAndReturn(V.local.sSQL1,V.local.sVAT)
				GUI.frmAPAutomationIndex.txtEVat.Text(V.Local.sVAT)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Variable.AddRV("rVendorCheck",V.Local.bVendorNo) 'this needs to be true orfalse dpeending on if a company directory is made
	F.Intrinsic.Variable.AddRV("rVendorCode",V.Local.sXRef)
	F.Intrinsic.Variable.AddRV("rTaxCode",V.Local.sTaxCode) 'Take this number and get the rv from same place as the location above
	F.Intrinsic.Variable.AddRV("rxref",V.Local.bXRefCheck) 'this needs to be what is shown in the db

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.CheckXrefVendorExist.End

Program.Sub.CheckGSSVendorExist.Start
F.Intrinsic.Control.Try

	V.Local.sVendorNo.Declare
	V.Local.sSQL.Declare
	V.Local.sVendorCode.Declare
	V.Local.bVendor.Declare
	
	V.Local.sVendorNo.Set(V.Args.VendorNo)
	
	F.Intrinsic.String.Concat("select VENDOR from V_VENDOR_MASTER WHERE VENDOR = '", V.Local.sVendorNo ,"'",V.local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sVendorCode)
	F.Intrinsic.Control.If(V.Local.sVendorCode.Trim,=,"")
		V.Local.bVendor.Set(False)
	F.Intrinsic.Control.Else
		V.Local.bVendor.Set(True)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Variable.AddRV("rVendor",V.Local.bVendor)
		
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.CheckGSSVendorExist.End

Program.Sub.CheckPONumberExist.Start
F.Intrinsic.Control.Try
	
	V.Local.sSQL.Declare
	V.Local.sPONumber.Declare
	V.Local.stest.Declare
	V.Local.bPOHead.Declare
	V.Local.sPOHead.Declare
	
	V.Local.sPOHead.Set(V.Args.POHead)
	F.Intrinsic.String.Concat("select PURCHASE_ORDER from PO_HEADER WHERE PURCHASE_ORDER = '", V.Local.sPOHead.PSQLFriendly ,"'",V.local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sPONumber)
	F.Intrinsic.Control.If(V.Local.sPONumber.Trim,=,"")
		V.Local.stest.Set("No PO Number Found")
		V.Local.bPOHead.Set(False)
	F.Intrinsic.Control.Else
		V.Local.stest.Set("PO Found")
		V.Local.bPOHead.Set(True)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Variable.AddRV("POHead",V.Local.bPOHead)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.CheckPONumberExist.End

Program.Sub.CheckPOreceiverExist.Start
F.Intrinsic.Control.Try
	
	V.Local.sSQL.Declare
	V.Local.sPONumber.Declare
	V.Local.stest.Declare
	V.Local.bPOreceiver.Declare
	V.Local.sPOHead.Declare
	
	V.Local.sPOHead.Set(V.Args.POHead)
	F.Intrinsic.String.Concat("select DISTINCT PURCHASE_ORDER from PO_RECEIVER WHERE PURCHASE_ORDER = '", V.Local.sPOHead.PSQLFriendly ,"'",V.local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sPONumber)
	F.Intrinsic.Control.If(V.Local.sPONumber.Trim,=,"")
		V.Local.stest.Set("No PO Reciver Found")
		V.Local.bPOreceiver.Set(False)
	F.Intrinsic.Control.Else
		V.Local.stest.Set("PO Received Found")
		V.Local.bPOreceiver.Set(True)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Variable.AddRV("POreceiver",V.Local.bPOreceiver)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.CheckPOreceiverExist.End

Program.Sub.setInvoiceAccrual.Start
F.Intrinsic.Control.Try
	
	V.Local.i.Declare
	V.Local.bAFlag.Declare
	
	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.dtRecLines.RowCount--,1)
		F.Intrinsic.Control.If(V.DataTable.dtRecLines(V.Local.i).rowstate,<>,8)
			F.Intrinsic.Control.If(V.DataTable.dtRecLines(V.Local.i).SelectLine!fieldval)
				F.Intrinsic.Control.If(V.DataTable.dtRecLines(V.Local.i).RECEIVER_NO!FIELDVALTRIM,<>,"")
					V.Local.bAFlag.Set(true)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.i)
	
	F.Intrinsic.Control.If(V.Local.bAFlag)
		GUI.frmAPAutomationIndex.optAccrual.Value(True)
		GUI.frmAPAutomationIndex.optInvoice.Value(False)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.optInvoice.Value(True)
		GUI.frmAPAutomationIndex.optAccrual.Value(False)
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.setInvoiceAccrual.End

Program.Sub.checkTable.Start
F.Intrinsic.Control.Try
	
	V.Local.bCheck.Declare
	V.Local.sRet.Declare
	V.Local.sVat.Declare
	V.Local.i.Declare
	V.Local.sMsg.Declare
	
	'create table	
	F.ODBC.Connection!con6861.tableExists("GCG_6861_AP_XREF",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		F.ODBC.Connection!con6861.execute("CREATE TABLE GCG_6861_AP_XREF (VENDORCODE CHAR(6),VENDORNAME CHAR(50), ID IDENTITY DEFAULT '0' CONSTRAINT UK_ID UNIQUE USING 0);")
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con6861.tableExists("GCG_6861_AP_SA",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		F.ODBC.Connection!con6861.execute("CREATE TABLE GCG_6861_AP_SA ( HID BIGINT, APAPPROVEID IDENTITY DEFAULT '0' CONSTRAINT UK_APAPPROVEID UNIQUE USING 0, DOCID BIGINT, POSTED BIT DEFAULT '0' NOT NULL, JOB VARCHAR(6), SUFFIX VARCHAR(3), SEQ VARCHAR(6), POLINE VARCHAR(3), PORCVR VARCHAR(50), GLACCOUNT VARCHAR(15), QUANTITY DOUBLE, RECEIVED_AMT DOUBLE, PART VARCHAR(50), LOCATION VARCHAR(3), TAXABLEFLAG BIT DEFAULT '0' NOT NULL, TAXCODE VARCHAR(5), POUM VARCHAR(3), BRANCH VARCHAR(2), BOOKSELFTAX VARCHAR(1), BUYER VARCHAR(3), VOUCHER VARCHAR(7), VAT INTEGER DEFAULT '0', COSTTYPE INTEGER, INVOICENOTES VARCHAR(255), APPROVED BIT DEFAULT '0' NOT NULL, APINVACCRFLAG VARCHAR(1), PACKINGLIST VARCHAR(20), ACTUAL_AMT DOUBLE );")
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con6861.TableExists("GCG_6861_AP_HEAD",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		F.ODBC.Connection!con6861.Execute("CREATE TABLE GCG_6861_AP_HEAD ( DOCID BIGINT, DOCURL LONGVARCHAR, IMGURL LONGVARCHAR, VENDCODE VARCHAR(6), VENDNAME VARCHAR(150), INVCNUMB VARCHAR(15), INVCDATE DATE, POHEAD VARCHAR(20), SUBTOTAL DOUBLE, FREIGHT DOUBLE, GSTTOTAL DOUBLE, GRSTOTAL DOUBLE, DOWNSTAT VARCHAR(50), NOTES LONGVARCHAR, GssStatus VARCHAR(20) DEFAULT 'queue', RejectReason VARCHAR(20), DocSavedLocation VARCHAR(255), XRefCheck BIT NOT NULL, CreditNote BIT NOT NULL, PROCESSED BIT NOT NULL, ID IDENTITY DEFAULT '0' CONSTRAINT UK_ID UNIQUE USING 0, INVOICETYPE VARCHAR(1), PROCESSEDDATE DATE, DOWNLOADED_DATE DATE);")
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con6861.TableExists("GCG_6861_AP_LINES",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		F.ODBC.Connection!con6861.Execute("CREATE TABLE GCG_6861_AP_LINES ( HID BIGINT, ROWID VARCHAR(50) NOT NULL, UM VARCHAR(3), LINE VARCHAR(4), RCVR VARCHAR(10), GLACCOUNT VARCHAR(15), QUANTITY DOUBLE, UnitCost DOUBLE, EXTENSION DOUBLE, PORECLINE VARCHAR(50), PART VARCHAR(50), PARTDESC VARCHAR(30), DESCLINE LONGVARCHAR, JOB VARCHAR(6), SUFFIX VARCHAR(3), SEQ VARCHAR(6), RECEIVETEXT LONGVARCHAR, COSTTYPE VARCHAR(10), LID IDENTITY DEFAULT '0' CONSTRAINT UK_ID UNIQUE USING 0 );") 
	F.Intrinsic.Control.EndIf
	
	F.ODBC.Connection!con6861.TableExists("V_GCG_6861_AP_ALL",V.Local.bCheck)
	F.Intrinsic.Control.If(V.Local.bCheck,=,False)
		F.ODBC.Connection!con6861.execute("CREATE VIEW V_GCG_6861_AP_ALL AS SELECT GCG_6861_AP_HEAD .CreditNote ,GCG_6861_AP_HEAD .DOCID ,GCG_6861_AP_HEAD .DocSavedLocation ,GCG_6861_AP_HEAD .DOWNSTAT ,GCG_6861_AP_HEAD .FREIGHT ,GCG_6861_AP_HEAD .GRSTOTAL ,GCG_6861_AP_HEAD .GssStatus ,GCG_6861_AP_HEAD .GSTTOTAL ,GCG_6861_AP_HEAD .ID ,GCG_6861_AP_HEAD .INVCDATE ,GCG_6861_AP_HEAD .INVCNUMB ,GCG_6861_AP_HEAD .POHEAD ,GCG_6861_AP_HEAD .INVOICETYPE ,GCG_6861_AP_HEAD .PROCESSED ,GCG_6861_AP_HEAD .RejectReason ,GCG_6861_AP_HEAD .SUBTOTAL ,GCG_6861_AP_HEAD .VENDCODE ,GCG_6861_AP_HEAD .VENDNAME ,GCG_6861_AP_HEAD .XRefCheck ,GCG_6861_AP_SA .APAPPROVEID ,GCG_6861_AP_SA .APINVACCRFLAG ,GCG_6861_AP_SA .APPROVED ,GCG_6861_AP_SA .BOOKSELFTAX ,GCG_6861_AP_SA .BRANCH ,GCG_6861_AP_SA .BUYER ,GCG_6861_AP_SA .COSTTYPE ,GCG_6861_AP_SA .RECEIVED_AMT ,GCG_6861_AP_SA .ACTUAL_AMT ,GCG_6861_AP_SA .GLACCOUNT ,GCG_6861_AP_SA .HID ,GCG_6861_AP_SA .INVOICENOTES ,GCG_6861_AP_SA .JOB ,GCG_6861_AP_SA .LOCATION ,GCG_6861_AP_SA .PART ,GCG_6861_AP_SA .POLINE ,GCG_6861_AP_SA .PORCVR ,GCG_6861_AP_SA .POSTED ,GCG_6861_AP_SA .POUM ,GCG_6861_AP_SA .QUANTITY ,GCG_6861_AP_SA .SEQ ,GCG_6861_AP_SA .SUFFIX ,GCG_6861_AP_SA .TAXABLEFLAG ,GCG_6861_AP_SA .TAXCODE ,GCG_6861_AP_SA .VAT ,GCG_6861_AP_SA .VOUCHER ,GCG_6861_AP_HEAD .DOCURL ,GCG_6861_AP_HEAD .IMGURL ,GCG_6861_AP_HEAD .NOTES FROM GCG_6861_AP_SA GCG_6861_AP_SA LEFT OUTER JOIN GCG_6861_AP_HEAD GCG_6861_AP_HEAD ON GCG_6861_AP_SA .DOCID = GCG_6861_AP_HEAD .DOCID")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Ambient.IsInIDE.Not)
'		F.ODBC.Connection!con6861.executeandreturn("SELECT F_BOOLEAN FROM OP_HEADER WHERE ID='401062' AND SEQUENCE='0000'",V.Local.sret)
'		F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"1")
'			F.Intrinsic.UI.CloseWaitDialog
'			F.Intrinsic.UI.Msgbox("Warning: 'Use Six Decimal Precision for Tax Per Piece' is not turned on in System Support > Administration > Company Options (Standard) > Purchasing.  Please turn this on for precise tax calculations.")
'		F.Intrinsic.Control.EndIf
		
		F.ODBC.Connection!con6861.executeandreturn("SELECT TEXT1 FROM OP_HEADER WHERE ID='400291' AND SEQUENCE='0000'",V.Local.sRet)
		F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"")
			F.Intrinsic.UI.CloseWaitDialog
			F.Intrinsic.UI.Msgbox("WARNING: Booking Variance account not set!  Please set under System Support > Administration > Company Options (Standard) > Inventory Accounting")
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.DataTable.dtTaxes.Exists)
			F.Data.DataTable.Close("dtTaxes")
		F.Intrinsic.Control.EndIf
		F.Data.DataTable.CreateFromSQL("dtTaxes","con6861","select * from AR_TAX_TABLES")
		F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.dtTaxes.RowCount--,1)
			F.Intrinsic.Control.If(V.DataTable.dtTaxes(V.Local.i).vat_exp_acct!Fieldvaltrim,=,"")
				F.Intrinsic.String.Concat("WARNING: TAX CODE ",V.DataTable.dtTaxes(V.Local.i).ZONE!FIELDVALTRIM," ",V.DataTable.dtTaxes(V.Local.i).AUTH!FIELDVALTRIM," Missing GL Account for AP",V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.i)
		
		F.Intrinsic.Control.If(V.Local.sVat.Trim,=,"1")
			F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.dtTaxes.RowCount--,1)
				F.Intrinsic.Control.If(V.DataTable.dtTaxes(V.Local.i).vat_input_acct!Fieldvaltrim,=,"")
					F.Intrinsic.String.Concat("WARNING: TAX CODE ",V.DataTable.dtTaxes(V.Local.i).ZONE!FIELDVALTRIM," ",V.DataTable.dtTaxes(V.Local.i).AUTH!FIELDVALTRIM," Missing GL Account for AP",V.Local.sMsg)
					F.Intrinsic.UI.Msgbox(V.Local.sMsg)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.i)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.checkTable.End

Program.Sub.checkTaxAfterInvoiceUpload.Start
F.Intrinsic.Control.Try
	
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sInvoice.Declare
	V.Local.sAPAccount.Declare
	V.Local.sTaxCode.Declare
	V.Local.sTaxAcct.Declare
	V.Local.sBatchNum.Declare
	V.Local.sVendorID.Declare
	V.Local.sCompCurr.Declare
	V.Local.sVendCurr.Declare
	V.Local.bForeign.Declare
	V.Local.fInvoiceAmt.Declare
	V.Local.fBatchInvoiceAmt.Declare
	V.Local.fDifference.Declare
	V.Local.fGSTAmt.Declare
	V.Local.i.Declare
	V.Local.j.Declare(long)
	
	'Get the company's AP account
	F.ODBC.Connection!Con6861.executeandreturn("SELECT text1 FROM op_header where ID=402455 AND SEQUENCE=0000",V.Local.sAPAccount)
	
	'Get the company's currency code
	F.ODBC.Connection!Con6861.executeandreturn("select ISO_CODE from COMPANY_CURRENCY WHERE CTLG_FLAG='Y'",V.Local.sCompCurr)
	
	'Bring all the distinct intvoices together in a datable and loop through them
	F.Data.DataView.Create("dtApprovedProcessing","dvApprovedProcessing",22,"","")
	F.Data.DataView.ToDataTableDistinct("dtApprovedProcessing","dvApprovedProcessing","dtApprovedInvoices","INVCNUMB*!*SubTotal*!*GSTTotal*!*TAXCODE*!*VENDCODE")
	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.dtApprovedInvoices.RowCount--,1)
		
		'Set Variables
		V.Local.sTaxCode.Set(V.DataTable.dtapprovedinvoices(V.Local.i).TAXCODE!Fieldvaltrim)
		V.Local.sInvoice.Set(V.DataTable.dtApprovedInvoices(V.Local.i).INVCNUMB!Fieldvaltrim)
		V.Local.sVendorID.Set(V.DataTable.dtapprovedinvoices(V.Local.i).VENDCODE!Fieldvaltrim)
		V.Local.fGSTAmt.Set(V.DataTable.dtapprovedinvoices(V.Local.i).GSTTOTAL!Fieldval)
		F.Intrinsic.Math.Add(V.DataTable.dtapprovedINvoices(V.Local.i).GSTTotal!fieldval,V.DataTable.dtApprovedInvoices(V.Local.i).Subtotal!fieldval,V.Local.fInvoiceAmt)
		F.Intrinsic.Math.Round(V.Local.fInvoiceAmt,2,V.Local.fInvoiceAmt)
		
		'Check if Vendor is International
		F.Intrinsic.String.Build("select DEFAULT_CURRENCY from V_VENDOR_INTL where vendor='{0}'",V.Local.sVendorID,V.Local.sSQL)
		F.ODBC.Connection!con6861.executeandreturn(V.Local.sSQL,V.Local.sVendCurr)
		
		'Only do the check if the currency is the same as the company currency
		F.Intrinsic.Control.If(V.Local.sVendCurr.Trim,=,V.Local.sCompCurr.Trim)
			'Query AP Open Batches for the invoice
			F.Intrinsic.String.Build("SELECT TEMP_AMT FROM AP_OPEN_BATCHES WHERE INVC='{0}' AND GL_ACCT='{1}'",V.Local.sInvoice,V.Local.sAPAccount.Trim,V.Local.sSQL)
			F.ODBC.Connection!con6861.executeandreturn(V.Local.sSQL,V.Local.fBatchInvoiceAmt)
			F.Intrinsic.Math.Abs(V.Local.fBatchInvoiceAmt,V.Local.fBatchInvoiceAmt)
			'Determine if the invoice value matches
			F.Intrinsic.Control.If(V.Local.fBatchInvoiceAmt,<>,V.Local.fInvoiceAmt)
				
				'generally the batch is higher than the invoice, calculate the difference
				F.Intrinsic.Math.Sub(V.Local.fBatchInvoiceAmt,V.Local.fInvoiceAmt,V.Local.fDifference)
				F.Intrinsic.Math.Round(V.local.fDifference,2,V.Local.fDifference)
				
				'Grab the  Code
				F.Intrinsic.String.Build("SELECT VAT_INPUT_ACCT FROM AR_TAX_TABLES WHERE CONCAT(ZONE,AUTH)='{0}'",V.Local.sTaxCode,V.Local.sSQL)
				F.ODBC.Connection!con6861.executeandreturn(V.Local.sSQL,V.Local.sTaxAcct)
				'VAT might not be used, so if blank, check the normal place for payable GST
				F.Intrinsic.Control.If(V.Local.sTaxAcct.Trim,=,"")
					F.Intrinsic.String.Build("SELECT VAT_EXP_ACCT FROM AR_TAX_TABLES WHERE CONCAT(ZONE,AUTH)='{0}'",V.Local.sTaxCode,V.Local.sSQL)
					F.ODBC.Connection!con6861.executeandreturn(V.Local.sSQL,V.Local.sTaxAcct)
				F.Intrinsic.Control.EndIf
				
				'start correction
				'Update invoice figure
				F.Intrinsic.Math.Mult(V.Local.fInvoiceAmt,"-1",V.Local.fInvoiceAmt)
				F.Intrinsic.String.Build("UPDATE AP_OPEN_BATCHES SET TEMP_AMT={0} WHERE GL_ACCT='{1}' AND INVC='{2}'",V.Local.fInvoiceAmt,V.Local.sAPAccount,V.Local.sInvoice,V.Local.sSQL)
				F.ODBC.Connection!con6861.execute(V.Local.sSQL)
				
				'Update the tax figure
				F.Intrinsic.String.Build("UPDATE AP_OPEN_BATCHES SET TEMP_AMT={0} WHERE GL_ACCT='{1}' AND INVC='{2}'",V.Local.fGSTAmt,V.Local.sTaxAcct,V.Local.sInvoice,V.Local.sSQL)
				F.ODBC.Connection!con6861.execute(V.Local.sSQL)
				
				'Take it off the first line
				F.Intrinsic.String.Build("UPDATE AP_OPEN_BATCHES SET INVC_TAX_AMT=INVC_TAX_AMT - {0} WHERE LN='1' AND INVC='{1}'",V.Local.fDifference,V.Local.sInvoice,V.Local.sSQL)
				F.ODBC.Connection!con6861.execute(V.Local.sSQL)
				
				'Grab the batchnum
				F.Intrinsic.String.Build("SELECT BATCH FROM AP_OPEN_BATCHES WHERE LN='1' AND INVC='{0}'",V.Local.sInvoice,V.Local.sSQL)
				F.ODBC.Connection!con6861.executeandreturn(V.Local.sSQL,V.Local.sBatchNum)
				
				'Update INVC DTL Vat table taking off the different
				F.Intrinsic.String.Build("UPDATE INVC_DTL_VAT SET TAX_AMOUNT=TAX_AMOUNT - {0} WHERE BATCH_LINE='00001' AND INVOICE='{1}' AND BATCH_NUM='{2}' AND VENDOR_ID='{3}'",V.Local.fDifference,V.Local.sInvoice,V.Local.sBatchNum,V.Local.sVendorID,V.Local.sSQL)
				F.ODBC.Connection!con6861.execute(V.Local.sSQL)
				
				'fix target
				'F.Intrinsic.Math.Abs(V.Local.fInvoiceAmt, V.Local.fInvoiceAmt)
				'F.Intrinsic.String.Build("update AP_OPEN_BATCHES set TARGET_AMOUNT = {0} where BATCH = '{1}' and LN = '1'", V.Local.fInvoiceAmt, V.Local.sBatchNum, V.Local.sSQL)
				'F.ODBC.Connection!con6861.execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.i)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.checkTaxAfterInvoiceUpload.End

Program.Sub.calcTaxGrandTotal.Start
F.Intrinsic.Control.Try

	V.Local.bXREFChecking.Declare
	V.Local.sMessage.Declare
	V.Local.sSubTotal.Declare
	V.Local.sTax.Declare
	V.Local.fSubTotal.Declare
	V.Local.sTaxCode.Declare
	V.Local.sAddSign.Declare
	V.Local.fGrandTotal.Declare
	V.local.sSQL.Declare
	V.Local.fTax.Declare
	V.Local.fRate.Declare
	V.Local.fTaxResult.Declare
	
	V.local.bXREFChecking.Set(V.Args.xref)
	V.Local.sSubTotal.Set(V.Screen.frmAPAutomationIndex!txtSubTotal.text)
	F.Intrinsic.String.Replace(V.Local.sSubTotal,V.Global.sCurrencySymbol,"",V.Local.sSubTotal)
	V.local.fSubTotal.Set(V.Local.sSubTotal)
	V.Local.sTax.Set(V.Screen.frmAPAutomationIndex!txtGST.text)
	F.Intrinsic.String.Replace(V.Local.sTax,V.Global.sCurrencySymbol,"",V.Local.sTax)
	V.Local.sTaxCode.Set(V.Screen.frmAPAutomationIndex!txtETaxCode.text)
	V.Local.fTax.Set(V.Local.sTax)
	
	F.Intrinsic.String.Build("SELECT RATE FROM AR_TAX_TABLES WHERE CONCAT(ZONE,AUTH)='{0}'",V.Local.sTaxCode,V.Local.sSQL)
	F.ODBC.Connection!con6861.executeandreturn(V.Local.sSQL,V.Local.fRate)
	F.Intrinsic.Math.Mult(V.Local.fSubTotal,V.Local.fRate,V.Local.fTaxResult)
	F.Intrinsic.Math.Round(V.Local.fTaxResult,2,1,V.Local.fTaxResult)

	'GUI.frmAPAutomationIndex.lblGSTCheck.text(V.Local.fTaxResult)
	GUI.frmAPAutomationIndex.lblGSTCheck.text("")
	
	F.Intrinsic.Control.If(V.Local.fTaxResult,<>,V.Local.fTax)
		F.Intrinsic.Math.Sub(V.Local.fTaxResult,V.Local.fTax,V.Local.fTaxResult)
		F.Intrinsic.Math.Round(V.Local.fTaxResult,2,1,V.Local.fTaxResult)

		F.Intrinsic.Control.If(V.Local.bXREFChecking,=,"True")
			F.Intrinsic.String.Concat(V.Local.fTaxResult," Tax Variance Calculated in GSS!",V.Local.sMessage)		
		F.Intrinsic.Control.Else
			V.Local.sMessage.Set("XRef Needs to be connected!")
		F.Intrinsic.Control.EndIf

		GUI.frmAPAutomationIndex.lblGSTCheck.Visible(true)
		GUI.frmAPAutomationIndex.lblGSTCheck.text(V.Local.sMessage)
		GUI.frmAPAutomationIndex.lblGSTCheck.ForeColor(V.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.lblGSTCheck.Visible(false)
		GUI.frmAPAutomationIndex.lblGSTCheck.ForeColor(V.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Math.Add(V.Local.fTax,V.Local.fSubTotal,V.Local.fGrandTotal)
	F.Intrinsic.String.Format(V.Local.fGrandTotal, V.Global.sMoneyFormat, V.Local.sAddSign)
	GUI.frmAPAutomationIndex.txtGTotal.Text(V.Local.sAddSign)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.calcTaxGrandTotal.End

Program.Sub.calcVariance.Start
F.Intrinsic.Control.Try
	
	V.Local.i.Declare
	V.Local.fTotal.Declare
	V.Local.sSubTotal.Declare
	V.Local.fSubTotal.Declare
	V.Local.fVariance.Declare
	V.Local.sVarianceWithSign.Declare
	
	V.Local.sSubTotal.Set(V.Screen.frmAPAutomationIndex!txtSubTotal.text)
	F.Intrinsic.String.Replace(V.Local.sSubTotal,V.Global.sCurrencySymbol,"",V.Local.sSubTotal)
	
	V.Local.fSubTotal.Set(V.Local.sSubTotal)
	
	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.dtRecLines.RowCount--,1)
		F.Intrinsic.Control.If(V.DataTable.dtRecLines(V.Local.i).rowstate,<>,8)
			F.Intrinsic.Control.If(V.DataTable.dtRecLines(V.Local.i).SelectLine!fieldval)
				F.Intrinsic.Math.Add(V.Local.fTotal,V.DataTable.dtRecLines(V.Local.i).ACTUAL_AMT!FIELDVAL,V.Local.fTotal)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.i)
	
	'Variance bug calculation.  Need to do this rounding so that the GAB Compiler calculates 0 when 0.
	F.Intrinsic.Math.Round(V.Local.fSubTotal,2,V.Local.fSubTotal)
	F.Intrinsic.Math.Round(V.Local.fTotal,2,V.Local.fTotal)
	
	F.Intrinsic.Math.Sub(V.Local.fSubTotal,V.Local.fTotal,V.Local.fVariance)
	F.Intrinsic.Math.Round(V.Local.fVariance,2,V.Local.fVariance)
	F.Intrinsic.String.Format(V.Local.fVariance, V.Global.sMoneyFormat, V.Local.sVarianceWithSign)
	GUI.frmAPAutomationIndex.txtEVarianceAmt.Text(V.Local.sVarianceWithSign)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.calcVariance.End

Program.Sub.subRowCellClick.Start
F.Intrinsic.Control.Try
	
	V.Local.iRowCount.Declare
	V.Local.iCount.Declare
	V.Local.inumbercountdown.Declare
	V.Local.iRowIndex.Declare
	V.Local.bLineFound.Declare
	V.Local.stest.Declare
	V.Local.sDataTable.Declare
	V.Local.sGridControl.Declare
	V.Local.sGridView.Declare
	V.Local.iSize.Declare
	V.Local.sLink.Declare
	V.Local.sSupplierName.Declare
	V.Local.sInvoiceNumber.Declare
	V.Local.sInvoiceDate.Declare
	V.Local.sPORefrence.Declare
	V.Local.fSubTotal.Declare
	V.Local.fGradeTotal.Declare
	V.Local.fGSTTotal.Declare
	V.Local.sDOCID.Declare
	V.Local.sVendCode.Declare
	V.Local.sNOTES.Declare
	V.Local.sSubTotal.Declare
	V.Local.sGradeTotal.Declare
	V.Local.sGSTTotal.Declare
	V.Local.ddate.Declare
	V.Local.bXREFChecking.Declare
	V.Local.stester.Declare
	V.Local.bExists.Declare(Boolean)
	V.Local.sMoneyFormat.Declare(String)
	
	V.Local.sGridControl.Set(V.Args.GridControl)
	V.Local.sGridView.Set(V.Args.GridView)
	V.Local.sDataTable.Set(V.Args.DataTable)
	V.local.iRowIndex.Set(V.Args.MyRowIndex)
	
	GUI.frmAPAutomationIndex.txtSupplierName.Text("")
	GUI.frmAPAutomationIndex.txtInvNum.Text("")
	GUI.frmAPAutomationIndex.txtInvdate.Text("")
	GUI.frmAPAutomationIndex.txtPOReF.Text("")
	GUI.frmAPAutomationIndex.txtSubTotal.Text("")
	GUI.frmAPAutomationIndex.txtGTotal.Text("")
	GUI.frmAPAutomationIndex.txtGST.Text("")
	GUI.frmAPAutomationIndex.txtDocID.Text("")
	GUI.frmAPAutomationIndex.txtVendCode.Text("")
	
	F.Data.DataTable.AcceptChanges(V.Local.sDataTable)
	
	'check row index
	F.Intrinsic.Control.If(V.Local.iRowIndex, >, V.DataTable.[V.Local.sDataTable].RowCount--)
		'if on the last row, or any wrong row, just load the first
		V.Local.iRowIndex.Set(0)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.[V.Local.sDataTable].RowCount, !=, 0)
	
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"VENDNAME",V.local.iRowIndex,V.Local.sSupplierName)
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"INVCNUMB",V.local.iRowIndex,V.Local.sInvoiceNumber)
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"INVCDATE",V.local.iRowIndex,V.Local.sInvoiceDate)
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"POHEAD",V.local.iRowIndex,V.Local.sPORefrence)
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"SUBTOTAL",V.local.iRowIndex,V.Local.fSubTotal)
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"GRSTOTAL",V.local.iRowIndex,V.Local.fGradeTotal)
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"DOCID",V.local.iRowIndex,V.Local.sDOCID)
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"GSTTOTAL",V.local.iRowIndex,V.Local.fGSTTotal)
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"DocSavedLocation",V.local.iRowIndex,V.Local.sLink)
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"VENDCODE",V.local.iRowIndex,V.Local.sVendCode)
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"ID",V.local.iRowIndex,V.Global.sID)
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"NOTES",V.local.iRowIndex,V.Local.sNOTES)
		
		Function.Intrinsic.String.Format(V.Local.fSubTotal, V.Global.sMoneyFormat, V.Local.sSubTotal)
		Function.Intrinsic.String.Format(V.Local.fGradeTotal, V.Global.sMoneyFormat, V.Local.sGradeTotal)
		Function.Intrinsic.String.Format(V.Local.fGSTTotal, V.Global.sMoneyFormat, V.Local.sGSTTotal)
	
		GUI.frmAPAutomationIndex.lblRowID.Caption(V.Local.iRowIndex)
		GUI.frmAPAutomationIndex.txtSupplierName.Text(V.Local.sSupplierName)
		GUI.frmAPAutomationIndex.txtInvNum.Text(V.Local.sInvoiceNumber)
		
		V.Local.ddate.Set(V.Local.sInvoiceDate)
		F.Intrinsic.String.Replace(V.Local.sInvoiceDate,"12:00:00 am","",V.Local.sInvoiceDate)
		GUI.frmAPAutomationIndex.txtInvdate.Text(V.Local.sInvoiceDate)
	
		GUI.frmAPAutomationIndex.txtPOReF.Text(V.Local.sPORefrence)
		GUI.frmAPAutomationIndex.txtSubTotal.Text(V.Local.sSubTotal)
		GUI.frmAPAutomationIndex.txtGTotal.Text(V.Local.sGradeTotal)
		GUI.frmAPAutomationIndex.txtGST.Text(V.Local.sGSTTotal)
		GUI.frmAPAutomationIndex.txtDocID.Text(V.Local.sDOCID)
		
		'This gets set later
		GUI.frmAPAutomationIndex.txtEDesc.Text("INVOICE AMT")
		GUI.frmAPAutomationIndex.txtETaxAmt.Text(V.Local.sSubTotal)
	
		GUI.frmAPAutomationIndex.[V.Local.sGridControl].GetCellValueByColumnName(V.Local.sGridView,"NOTES",V.local.iRowIndex,V.Local.sNOTES)
		GUI.frmAPAutomationIndex.txtNotes.Text(V.Local.sNOTES)
		
		V.Global.sDOCID.Set(V.Local.sDOCID)
		V.Global.iRowIndex.Set(V.Local.iRowIndex)	
		F.Intrinsic.Control.CallSub(loadInvoiceDetail,"InvoiceNumber",V.Local.sInvoiceNumber,"PurchaseOrder",V.Local.sPORefrence,"Status",V.Args.Status,"Vendor",V.Local.sVendCode)
		
		F.Intrinsic.Control.SelectCase(V.Args.Status)
			F.Intrinsic.Control.Case("Queue")
				F.Intrinsic.Control.CallSub(checkXrefSuppPORec)
				F.Intrinsic.Variable.ArgToVar("XREFCheck",V.Local.bXREFChecking)
				F.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",V.Local.bXREFChecking)
				F.Intrinsic.Control.CallSub(ShowInvoiceNotifications)
			F.Intrinsic.Control.Case("Save")
				F.Intrinsic.Control.CallSub(checkXrefSuppPORec)
				F.Intrinsic.Variable.ArgToVar("XREFCheck",V.Local.bXREFChecking)
				F.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",V.Local.bXREFChecking)
				F.Intrinsic.Control.CallSub(ShowInvoiceNotifications)
			F.Intrinsic.Control.Case("Reject")
				F.Intrinsic.Control.CallSub(HideInvoiceNotifications)
			F.Intrinsic.Control.Case("approve")
				F.Intrinsic.Control.CallSub(checkXrefSuppPORec)
				F.Intrinsic.Variable.ArgToVar("XREFCheck",V.Local.bXREFChecking)
				F.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",V.Local.bXREFChecking)
				F.Intrinsic.Control.CallSub(ShowInvoiceNotifications)
		F.Intrinsic.Control.EndSelect
		
		F.Intrinsic.Control.SelectCase(V.Args.Status)
			F.Intrinsic.Control.Case("save")
				GUI.frmAPAutomationIndex.cmdSaveApprove.Visible(true)
				GUI.frmAPAutomationIndex.cmdReject.Visible(true)
			F.Intrinsic.Control.Case("Queue")
				F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!txtVendCode.Text.Trim, =, "")
					F.Intrinsic.Control.If(V.Local.sSupplierName.Trim, =, "")
						GUI.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(False)
					F.Intrinsic.Control.Else
						GUI.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(True)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Else
					GUI.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(False)
				F.Intrinsic.Control.EndIf
				
			F.Intrinsic.Control.CaseElse
				GUI.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(False)
		F.Intrinsic.Control.EndSelect
		
		F.Intrinsic.Control.CallSub(EnableInput)
		
		F.Intrinsic.File.Exists(V.Local.sLink, V.Local.bExists)
		F.Intrinsic.Control.If(V.Local.bExists)
			GUI.frmAPAutomationIndex.htmlContainer1.loadurl(V.local.sLink)
		F.Intrinsic.Control.Else
			GUI.frmAPAutomationIndex.htmlContainer1.LoadUrl("")
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.CallSub(calcVariance)
		
	F.Intrinsic.Control.Else
		V.Global.iRowIndex.Set(-1)
		F.Intrinsic.Control.CallSub(subClearEverything)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(CheckProcessButtons)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.subRowCellClick.End

Program.Sub.subUpdateButton_Update.Start
F.Intrinsic.Control.Try
	
	V.Local.sSupplierName.Declare
	V.Local.sInvoiceNumber.Declare
	V.Local.sVendCode.Declare
	V.Local.sGLAccount.Declare
	V.Local.sTaxCode.Declare
	V.Local.sGrandTotal.Declare
	V.Local.sSubtotal.Declare
	V.Local.sSQL.Declare
	V.Local.sPOReference.Declare
	V.Local.sSEQUENCE.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	V.Local.sPO_Line.Declare
	V.Local.sRECEIVER_NO.Declare
	V.Local.sGL_ACCOUNT.Declare
	V.Local.sQTY_Received.Declare
	V.Local.sQTY_Received_Original.Declare
	V.Local.sActualAmt.Declare
	V.Local.sReceivedAmt.Declare
	V.Local.sPART.Declare
	V.Local.sLOCATION.Declare
	V.Local.sSQLXrefCheck.Declare
	V.Local.sSelectLines.Declare
	V.Local.sIAFlag.Declare
	V.Local.sVatRUle.Declare
	V.Local.dInvoiceDate.Declare
	V.Local.bTaxableFlag.Declare
	V.Local.bTaxCheckBox.Declare
	V.Local.bXrefCheck.Declare
	V.Local.bProcessesStatus.Declare
	V.Local.lXrefCheck.Declare
	V.Local.lProcessesStatus.Declare
	V.Local.lTaxFlag.Declare
	V.Local.iCount.Declare
	V.Local.bSelectionMade.Declare

	V.Local.sGrandTotal.Set(V.Screen.frmAPAutomationIndex!txtGTotal.text)
	F.Intrinsic.String.Replace(V.local.sGrandTotal, V.Global.sCurrencySymbol, "", V.Local.sGrandTotal)
	F.Intrinsic.String.Replace(V.local.sGrandTotal, ",", "",V.Local.sGrandTotal)
	
	'Loop through all of the lines
	F.Intrinsic.Control.For(V.Local.iCount, 0, V.DataTable.dtRecLines.RowCount--, 1)
		F.Intrinsic.Control.If(V.DataTable.dtRecLines(V.Local.iCount).RowState,<>,8)	
			F.Intrinsic.Control.If(V.DataTable.dtRecLines(V.Local.iCount).SelectLine!fieldval)
				'Variable set
				V.Local.sInvoiceNumber.Set(V.Screen.frmAPAutomationIndex!txtInvNum.text)
				V.Local.dInvoiceDate.Set(V.Screen.frmAPAutomationIndex!txtInvdate.text)
				V.Local.sSupplierName.Set(V.Screen.frmAPAutomationIndex!txtSupplierName.text)
				V.Local.sVendCode.Set(V.Screen.frmAPAutomationIndex!txtVendCode.text)
				V.Local.sPOReference.Set(V.Screen.frmAPAutomationIndex!txtPOReF.text)
				V.Local.sPART.Set(V.DataTable.dtRecLines(V.Local.iCount).PART!FIELDVALTRIM)
				V.Local.sLOCATION.Set(V.DataTable.dtRecLines(V.Local.iCount).LOCATION!FIELDVALTRIM)
				V.Local.sQTY_Received.Set(V.DataTable.dtRecLines(V.Local.iCount).QTY_RECEIVED!FIELDVALFloat)
				V.Local.sQTY_Received_Original.Set(V.DataTable.dtRecLines(V.Local.iCount).QTY_RECEIVED_ORIGINAL!FieldValFloat)
				V.Local.sReceivedAmt.Set(V.DataTable.dtRecLines(V.Local.iCount).RECEIVED_AMT!FieldValFloat)
				V.Local.sActualAmt.Set(V.DataTable.dtRecLines(V.Local.iCount).ACTUAL_AMT!FieldValFloat)
				V.Local.sTaxCode.Set(V.DataTable.dtRecLines(V.Local.iCount).TAX_CODE!FIELDVALTRIM)
				V.Local.sSEQUENCE.Set(V.DataTable.dtRecLines(V.Local.iCount).SEQ!FIELDVALTRIM)
				V.Local.sSelectLines.Set(V.DataTable.dtRecLines(V.Local.iCount).SelectLine!FIELDVALTRIM)
				V.Local.sJob.Set(V.DataTable.dtRecLines(V.Local.iCount).JOB!FIELDVALTRIM)
				V.Local.sSuffix.Set(V.DataTable.dtRecLines(V.Local.iCount).SUFFIX!FIELDVALTRIM)
				V.Local.sPO_Line.Set(V.DataTable.dtRecLines(V.Local.iCount).PO_LINE!FIELDVALTRIM)
				V.Local.sRECEIVER_NO.Set(V.DataTable.dtRecLines(V.Local.iCount).RECEIVER_NO!FIELDVALTRIM)
				V.Local.sGL_ACCOUNT.Set(V.DataTable.dtRecLines(V.Local.iCount).GL_ACCOUNT!FIELDVALTRIM)
				V.Local.bTaxableFlag.Set(V.DataTable.dtRecLines(V.Local.iCount).Taxable!FIELDVALTRIM)
				F.Intrinsic.Control.If(V.Local.bTaxableFlag,=,"False")
					V.Local.lTaxFlag.Set(0)
				F.Intrinsic.Control.Else()
					V.Local.lTaxFlag.Set(1)
				F.Intrinsic.Control.EndIf	
				F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!optAccrual.Value,=,"True")
					V.Local.sIAFlag.Set("a")
				F.Intrinsic.Control.Else
					V.local.sIAFlag.Set("i")
				F.Intrinsic.Control.EndIf
	
				'Write to DB
				F.Intrinsic.String.Build("UPDATE GCG_6861_AP_HEAD SET INVOICETYPE='{0}', VendCode='{1}', GRSTOTAL='{2}', VENDNAME='{3}', INVCNUMB='{4}',INVCDATE='{5}',POHEAD='{6}'  WHERE DOCID='{7}'",V.Local.sIAFlag,V.Local.sVendCode,V.Local.SGRANDTOTAL,V.local.sSupplierName.PSQLFriendly,V.local.sInvoiceNumber,V.local.dInvoiceDate.PervasiveDate,V.local.sPOReference,V.Global.sDOCID,V.Local.sSQL)
				F.ODBC.Connection!con6861.execute(V.Local.sSQL)
				
				F.Intrinsic.String.Build("INSERT INTO GCG_6861_AP_SA (DOCID, JOB, SUFFIX, SEQ, POLINE, PORCVR, GLACCOUNT, QUANTITY, ACTUAL_AMT, RECEIVED_AMT, PART, LOCATION, TAXCODE, TAXABLEFLAG, HID) VALUES ('{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}')",V.Global.sDOCID,V.local.sJob,V.local.sSuffix,V.local.sSEQUENCE,V.local.sPO_Line,V.local.sRECEIVER_NO,V.local.sGL_ACCOUNT,V.Local.sQTY_Received,V.Local.sActualAmt,V.Local.sReceivedAmt,V.Local.sPART.PSQLFriendly,V.local.sLOCATION.PSQLFriendly,V.local.sTaxCode,V.local.lTaxFlag,V.Global.sID,V.Local.sSQL)
				F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCount)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.subUpdateButton_Update.End

Program.Sub.subPOSTDocumentRedownload.Start
'PO Doc Review download from api
F.Intrinsic.Control.Try
	
	V.Local.sxpath.Declare
	V.Local.sret.Declare
	V.Local.sKey.Declare
	V.Local.sWF.Declare
	V.Local.sFile.declare
	V.Local.lHand.Declare
	V.Local.sDoc.Declare
	V.Local.sDwn.Declare
	V.Local.sXML.Declare
	V.Local.sStat.Declare
	V.Local.sNode.Declare
	V.Local.bEOF.Declare
	V.Local.sDocID.Declare
	V.Local.sRowID.Declare
	V.Local.sDocURL.Declare
	V.Local.sImgURL.Declare
	V.Local.sFieldID.Declare
	V.Local.sFieldName.Declare
	V.Local.sResult.Declare
	V.Local.sExpr.Declare
	V.Local.sRow.Declare
	V.Local.sDescLine.Declare
	V.Local.sGenrCode.Declare
	V.Local.sNotes.Declare
	V.Local.sPORecLine.Declare
	V.Local.sPOHead.Declare
	V.Local.sPOLine.Declare
	V.Local.sPORcvr.Declare
	V.Local.sGLCode.Declare
	V.Local.sItemCode.Declare
	V.Local.sVendName.Declare
	V.Local.sInvcNumb.Declare
	V.Local.sInvcDate.Declare
	V.Local.fSubTotal.Declare
	V.Local.sSubTotal.Declare
	V.Local.fGSTValue.Declare
	V.Local.sGSTValue.Declare
	V.Local.fGrossVal.Declare
	V.Local.sGrossVal.Declare
	V.Local.fQuantity.Declare
	V.Local.sQuantity.Declare
	V.Local.fUnitCost.Declare
	V.Local.sUnitCost.Declare
	V.Local.fExtension.Declare
	V.Local.sExtension.Declare
	V.Local.sPORecKey.Declare
	V.Local.sSQL.Declare
	V.Local.iVar.Declare
	V.Local.iRow.Declare
	V.Local.iPOReV.Declare
	V.Local.sRevPad.Declare
	V.Local.sAdminDetailsFile.Declare
	V.Local.sApiID.Declare
	V.Local.sWorkflowID.Declare
	V.Local.sFileName.Declare
	V.Local.sVendorNo.Declare
	V.Local.sVat.Declare
	V.Local.sLoc.Declare
	V.Local.sBranch.Declare
	V.Local.sPackList.Declare
	V.Local.sVoucher.Declare
	V.Local.sBookUseTax.Declare
	V.Local.sInsertHeaderSQL.Declare
	V.Local.sInsertLinesSQL.Declare
	V.Local.sBuyer.Declare
	V.Local.iHID.Declare
	V.Local.bIsNumb.Declare
	V.Local.bIsDate.Declare
	V.Local.sdata.Declare
	V.Local.sID.Declare
	V.Local.sDocSaveLocation.Declare
	V.Local.sPOType.Declare
	V.Local.sXrefCheck.Declare
	V.Local.sVendCode.Declare
	V.Local.sTaxCode.Declare
	V.Local.sNVENDNAME.Declare
	V.Local.sNINVCNUMB.Declare
	V.Local.sNINVCDATE.Declare
	V.Local.sNPOHEAD.Declare
	V.Local.sNSUBTOTAL.Declare
	V.Local.sNGSTTOTAL.Declare
	V.Local.sNGRSTOTAL.Declare
	V.Local.dInvoiceDate.Declare(Date)
	V.Local.dDownloadDate.Declare(Date)
	
	V.Local.sDocID.Set(V.Screen.frmAPAutomationIndex!txtDocID.text)
	
	F.Intrinsic.String.concat(V.Caller.TempDir,"\API_Data_RedownloadData.xml",V.Local.sFile)
	F.Intrinsic.String.Build("{{0}api_key{0} : {0}{1}{0}, {0}document_id{0} : {0}{2}{0} }",V.Ambient.DblQuote,V.Global.sAPIKey,V.local.sDocID,V.Local.sdata)
	F.Communication.REST.SetProperty("ContentType","application/json")
	F.Communication.REST.SetProperty("PostData",V.Local.sdata)
	F.Communication.REST.Post("https://api-app.xtracta.com/v1/documents")
	F.Communication.REST.ReadProperty("TransferredData",V.Local.sret)
	
	F.Intrinsic.File.String2File(V.Local.sFile,V.Local.sret)
	F.Intrinsic.String.Build("Doc{0}",V.global.icountingAPICalls,V.Local.sDoc)
	F.Intrinsic.Math.Add(V.global.icountingAPICalls,1,V.global.icountingAPICalls)
	F.Global.XML.LoadDocument(V.Local.sdoc,V.local.sFile,False,False,False,False)
	F.global.XML.Query(V.local.sdoc,"set1","//*")
	
	'loop through node set
	F.Intrinsic.Control.dountil(V.local.bEOF,=,True)
		'Get the node name
		F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","nodeName",V.local.sret)
		
		F.Intrinsic.Control.If(V.Local.sret.Trim,=,"document_id")
			V.Local.iRow.Set(0)
		F.Intrinsic.Control.ElseIf(V.Local.sret.Trim,=,"api_download_status")
			F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sDwn)
		F.Intrinsic.Control.ElseIf(V.Local.sret.Trim,=,"document_url")
			F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sDocURL)
		F.Intrinsic.Control.ElseIf(V.Local.sret.Trim,=,"image_url")
			F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sImgURL)
		F.Intrinsic.Control.ElseIf(V.Local.sret.Trim,=,"field_name")
			F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sFieldName)
			F.Intrinsic.Control.If(V.Local.sFieldName.Trim,=,"PO Header #")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sPOHead)
				F.Intrinsic.Control.For(V.Local.iPORev,0,10,1)
					F.Intrinsic.String.LPad(V.Local.iPORev,"0",2,V.Local.sRevPad)
					F.Intrinsic.String.Concat("-",V.Local.sRevPad,V.Local.sRevPad)
					F.Intrinsic.String.Replace(V.Local.sPOHead,V.Local.sRevPad,"",V.Local.sPOHead)
				F.Intrinsic.Control.Next(V.local.iPORev)
				F.Intrinsic.String.LPad(V.Local.sPOHead,"0",7,V.Local.sPOHead)
				F.Intrinsic.Control.If(V.Local.sPOHead,=,"0000000")
					V.Local.sPOHead.Set("")
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Item Code")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sItemCode)
				
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.Elseif(V.Local.sFieldName.Trim,=,"Description")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sDescLine)
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.Elseif(V.Local.sFieldName.Trim,=,"Quantity")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sQuantity)
				F.Intrinsic.Math.IsNumeric(V.Local.sQuantity,V.Local.bIsNumb)
				F.Intrinsic.Control.If(V.Local.bIsNumb)
					V.Local.fQuantity.Set(V.Local.sQuantity)
				F.Intrinsic.Control.EndIf
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Supplier Name")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sVendName)
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Invoice Number")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sInvcNumb)
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Invoice Date")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sInvcDate)
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Sub Total")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sSubTotal)
				F.Intrinsic.String.Replace(V.Local.sSubTotal,V.Global.sCurrencySymbol,"",V.Local.sSubTotal)
				F.Intrinsic.Math.IsNumeric(V.Local.sSubTotal,V.Local.bIsNumb)
				F.Intrinsic.Control.If(V.Local.bIsNumb)
					V.Local.fSubTotal.Set(V.Local.sSubTotal)
				F.Intrinsic.Control.EndIf
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			'F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"GST Total")
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Tax Total")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sGSTValue)
				F.Intrinsic.String.Replace(V.Local.sGSTValue,V.Global.sCurrencySymbol,"",V.Local.sGSTValue)
				F.Intrinsic.Math.IsNumeric(V.Local.fGSTValue,V.Local.bIsNumb)
				F.Intrinsic.Control.If(V.Local.bIsNumb)
					V.Local.fGSTValue.Set(V.Local.sGSTValue)
				F.Intrinsic.Control.EndIf
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Gross Total")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sGrossVal)
				F.Intrinsic.String.Replace(V.Local.sGrossVal,V.Global.sCurrencySymbol,"",V.Local.sGrossVal)
				F.Intrinsic.Math.IsNumeric(V.Local.sGrossVal,V.Local.bIsNumb)
				F.Intrinsic.Control.If(V.Local.bIsNumb)
					V.Local.fGrossVal.Set(V.Local.sGrossVal)
				F.Intrinsic.Control.EndIf
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Unit Cost")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sUnitCost)
				F.Intrinsic.String.Replace(V.Local.sUnitCost,V.Global.sCurrencySymbol,"",V.Local.sUnitCost)
				F.Intrinsic.Math.IsNumeric(V.Local.sUnitCost,V.Local.bIsNumb)
				F.Intrinsic.Control.If(V.Local.bIsNumb)
					V.Local.fUnitCost.Set(V.Local.sUnitCost)
				F.Intrinsic.Control.EndIf
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Notes")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sNotes)
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.Elseif(V.Local.sFieldName.Trim,=,"Extension")
			
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sExtension)
				F.Intrinsic.String.Replace(V.Local.sExtension,V.Global.sCurrencySymbol,"",V.Local.sExtension)
				F.Intrinsic.Math.ConvertToFloat(V.Local.sExtension,V.Local.fExtension)
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
	
				F.Intrinsic.Math.Add(V.Local.iRow,1,V.Local.iRow)
				F.Intrinsic.String.LPad(V.Local.iRow,"0",3,V.Local.sRowID)
				F.Intrinsic.String.Concat(V.Local.sDocID,V.Local.sRowID,V.Local.sRowID)
				F.Intrinsic.String.Build("RowID={0}",V.Local.sRowID,V.Local.sExpr)
				V.local.sVendName.Set(V.Local.sVendName.UCase)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF) 
	F.Intrinsic.Control.loop
	'close node set
	F.global.xml.closeSet(V.local.sdoc,"set1")
	F.global.xml.CloseDocument(V.local.sdoc)
	
	F.Intrinsic.String.Build("SELECT top 1 ID FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sID)
	F.Intrinsic.String.Build("SELECT top 1 INVOICETYPE FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sPOType)
	F.Intrinsic.String.Build("SELECT top 1 XREFCHECK FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sXrefCheck)
	F.Intrinsic.String.Build("SELECT top 1 DOCSAVEDLOCATION FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sDocSaveLocation)
	F.Intrinsic.String.Build("SELECT top 1 VENDCODE FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sVendCode)
	F.Intrinsic.String.Build("SELECT top 1 DOWNLOADED_DATE FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.dDownloadDate)	
	
	F.Intrinsic.Control.If(V.Local.sXrefCheck,=,"True")
		V.Local.sXrefCheck.Set("1")
	F.Intrinsic.Control.Else
		V.Local.sXrefCheck.Set("0")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("DELETE FROM GCG_6861_AP_HEAD where DOCID ='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.Execute(V.Local.sSQL) 
	
	'Check if the date is proper
	F.Intrinsic.Date.IsDate(V.Local.sInvcDate,V.Local.bIsDate)
	F.Intrinsic.Control.If(V.Local.bIsDate,=,False)
		V.Local.sInvcDate.Set("1900-01-01")
	F.Intrinsic.Control.EndIf
	V.Local.dInvoiceDate.Set(V.Local.sInvcDate)
	
	V.Local.sSQL.Set("INSERT INTO GCG_6861_AP_HEAD VALUES ({0},'{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}','{17}','{18}','{19}','{20}','{21}','{22}','{23}')")					
	F.Intrinsic.String.Build(V.Local.sSQL,V.Local.sDocID.PSQLFriendly,V.Local.sDocURL.PSQLFriendly,V.Local.sImgURL.PSQLFriendly,V.Local.sVendCode.PSQLFriendly,V.Local.sVendName.PSQLFriendly,V.Local.sInvcNumb.PSQLFriendly,V.Local.dInvoiceDate.PervasiveDate,V.Local.sPOHead.PSQLFriendly,V.Local.fSubTotal.PSQLFriendly,0,V.Local.fGSTValue.PSQLFriendly,V.Local.fGrossVal.PSQLFriendly,V.Local.sDwn.PSQLFriendly,V.Local.sNotes.PSQLFriendly,"queue","",V.Local.sDocSaveLocation.PSQLFriendly,V.Local.sXrefCheck,0,0,V.Local.sID.PSQLFriendly,V.Local.sPOType,"1900-10-10", V.Local.dDownloadDate.PervasiveDate,V.Local.sSQL)
	F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
	
	F.Intrinsic.String.Build("SELECT top 1 VENDNAME FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sNVENDNAME)
	F.Intrinsic.String.Build("SELECT top 1 INVCNUMB FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sNINVCNUMB)
	F.Intrinsic.String.Build("SELECT top 1 INVCDATE FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sNINVCDATE)
	F.Intrinsic.String.Build("SELECT top 1 POHEAD FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sNPOHEAD)
	F.Intrinsic.String.Build("SELECT top 1 SUBTOTAL FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sNSUBTOTAL)
	F.Intrinsic.String.Build("SELECT top 1 GSTTOTAL FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDocID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sNGSTTOTAL)
	F.Intrinsic.String.Build("SELECT top 1 GRSTOTAL FROM GCG_6861_AP_HEAD WHERE DOCID='{0}'",V.local.sDOCID,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sNGRSTOTAL)

	F.Data.DataTable.SetValue("dtAPInvQueue",V.Global.iRowIndex,"POHEAD",V.Local.sNPOHEAD,"INVCNUMB",V.Local.sNINVCNUMB,"VENDNAME",V.Local.sNVENDNAME,"INVCDATE",V.Local.sNINVCDATE,"SUBTOTAL",V.Local.sNSUBTOTAL,"GSTTOTAL",V.Local.sNGSTTOTAL)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.subPOSTDocumentRedownload.End

Program.Sub.subClearEverything.Start
F.Intrinsic.Control.Try

V.Local.sZero.Declare(String)

GUI.frmAPAutomationIndex.txtGrantTotalCheck.Visible(False)
GUI.frmAPAutomationIndex.lblGSTCheck.Visible(False)

GUI.frmAPAutomationIndex.txtSupplierName.Text("")
GUI.frmAPAutomationIndex.txtInvNum.Text("")
GUI.frmAPAutomationIndex.txtInvdate.Text("")
GUI.frmAPAutomationIndex.txtPOReF.Text("")
GUI.frmAPAutomationIndex.txtSubTotal.Text("")
GUI.frmAPAutomationIndex.txtGTotal.Text("")
GUI.frmAPAutomationIndex.txtNotes.Text("")
GUI.frmAPAutomationIndex.txtGST.Text("")
GUI.frmAPAutomationIndex.txtDocID.Text("")
GUI.frmAPAutomationIndex.txtVendCode.Text("")
GUI.frmAPAutomationIndex.txtEPart.Text("")
GUI.frmAPAutomationIndex.txtELoc.Text("")
GUI.frmAPAutomationIndex.txtEDesc.Text("")
GUI.frmAPAutomationIndex.txtEQty.Text("")
GUI.frmAPAutomationIndex.txtESeq.Text("")
GUI.frmAPAutomationIndex.txtETaxAmt.Text("")
GUI.frmAPAutomationIndex.txtETaxCode.Text("")
GUI.frmAPAutomationIndex.txtESuffix.Text("")

F.Intrinsic.String.Format(0, V.Global.sMoneyFormat, V.Local.sZero)
GUI.frmAPAutomationIndex.txtEVarianceAmt.Text(V.Local.sZero)
GUI.frmAPAutomationIndex.txtEVat.Text("")
GUI.frmAPAutomationIndex.txtEWO.Text("")
GUI.frmAPAutomationIndex.txtEGLAccount.Text("")
F.Intrinsic.Control.CallSub(loadInvoiceDetail,"InvoiceNumber","","PurchaseOrder","","Status","","Vendor","")

GUI.frmAPAutomationIndex.lblGSTCheck.ForeColor(V.Enum.ThemeColors!ColorWhite)
GUI.frmAPAutomationIndex.lblGSTCheck.ForeColor(V.Enum.ThemeColors!ColorWhite)
GUI.frmAPAutomationIndex.txtGrantTotalCheck.ForeColor(V.Enum.ThemeColors!ColorWhite)
GUI.frmAPAutomationIndex.lblXRefConnect.ForeColor(V.Enum.ThemeColors!ColorRed)
GUI.frmAPAutomationIndex.lblReceivePO.ForeColor(V.Enum.ThemeColors!ColorRed)
GUI.frmAPAutomationIndex.lblCreateVendor.ForeColor(V.Enum.ThemeColors!ColorRed)
GUI.frmAPAutomationIndex.lblCreatePO.ForeColor(V.Enum.ThemeColors!ColorRed)

GUI.frmAPAutomationIndex.htmlContainer1.LoadUrl("")

F.Intrinsic.Control.CallSub(DisableInput)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.subClearEverything.End

Program.Sub.archiveDocument.Start
F.Intrinsic.Control.Try 'takes invoice from XXtr and archives it on XXtr.
	
	V.Local.skey.Declare
	V.Local.sret.Declare
	V.Local.sfile.Declare
	V.Local.sWorkFlowID.Declare
	
	F.Intrinsic.String.Build("{{0}api_key{0} : {0}{2}{0}, {0}document_id{0} : {0}{1}{0}, {0}api_download_status{0} : {0}archived{0}  }",V.Ambient.DblQuote,V.Args.DocID, V.Global.sAPIKey,V.Local.sKey)
	F.Communication.REST.SetProperty("ContentType","application/json")
	F.Communication.REST.SetProperty("PostData",V.Local.sKey)
	F.Communication.REST.Post("https://api-app.xtracta.com/v1/documents/update")
	F.Communication.REST.ReadProperty("TransferredData",V.Local.sret)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.archiveDocument.End

Program.Sub.disableAll.Start
F.Intrinsic.Control.Try

	GUI.frmAPAutomationIndex..Enabled(false)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.disableAll.End

Program.Sub.enableAll.Start
F.Intrinsic.Control.Try

	GUI.frmAPAutomationIndex..Enabled(true)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.enableAll.End

Program.Sub.subDownloadAPInvoices.Start
F.Intrinsic.Control.Try

	'download the actual invoice file to the Global\Custom\6861\ccc\Invoices folder
	
	V.Local.sFilePath.Declare
	V.Local.sDocID.Declare
	V.Local.sSearch.Declare
	V.Local.iRet.Declare
	V.Local.sDirectory.Declare(String)
	
	'build path to save invoices
	F.Intrinsic.String.Build("{0}\Custom\6861\{1}\Invoices", V.Caller.GlobalDir, V.Caller.CompanyCode, V.Local.sDirectory)
	F.Intrinsic.Control.CallSub(CheckDirectories, "Directories", V.Local.sDirectory)
	
	'if we know the vendor number, use it as a folder
	F.Intrinsic.Control.If(V.Args.VendorNo.Trim, !=, "")
		F.Intrinsic.String.Build("{0}\Custom\6861\{1}\Invoices\{2}", V.Caller.GlobalDir, V.Caller.CompanyCode, V.Args.VendorNo.Trim, V.Local.sDirectory)
		F.Intrinsic.Control.CallSub(CheckDirectories, "Directories", V.Local.sDirectory)
	F.Intrinsic.Control.EndIf
	
	'build invoice file name
	F.Intrinsic.File.MakeFilenameFriendly(V.Args.FileName, V.Local.sFilePath)
	F.Intrinsic.String.Build("{0}\{1}.pdf", V.Local.sDirectory, V.Local.sFilePath, V.Local.sFilePath)
	
	'now download the file
	F.Communication.HTTP.DownloadFile(V.Args.DocURL, V.Local.sFilePath) 	
	
	'Set the data values in the datatable
	F.Intrinsic.Control.CallSub(CheckXrefVendorExist, "VendorNo", V.Args.VendorNo.Trim, "SupplierName", V.Args.SupplierName)
	
	'set file path back to datatable
	F.Intrinsic.String.Build("RowID={0}", V.Args.RowID, V.Local.sSearch)
	F.Data.DataTable.Select("dtApp", V.Local.sSearch, V.Local.iRet)
	F.Data.DataTable.SetValue("dtApp", V.Local.iRet, "DocSavedLocation", V.local.sFilePath, "XRefCheck", V.Args.rVendorCheck, "TaxCode", V.Args.rTaxCode)
	
	F.Intrinsic.Variable.AddRV("rPDFFile", V.Local.sFilePath)
	F.Intrinsic.Variable.AddRV("rXrefCheck", V.Args.rVendorCheck)
	F.Intrinsic.Variable.AddRV("rTaxCode", V.Args.rTaxCode)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.subDownloadAPInvoices.End

Program.Sub.HideInvoiceNotifications.Start
F.Intrinsic.Control.Try

	GUI.frmAPAutomationIndex.lblXRefConnect.Visible(false)
	GUI.frmAPAutomationIndex.lblCreateVendor.Visible(false)
	GUI.frmAPAutomationIndex.lblCreatePO.Visible(false)
	GUI.frmAPAutomationIndex.lblReceivePO.Visible(false)
	GUI.frmAPAutomationIndex.lblInvoiceExists.Visible(false)
	GUI.frmAPAutomationIndex.lblGSTCheck.Visible(false)
	GUI.frmAPAutomationIndex.lblInvoiceExistsSA.Visible(false)
	GUI.frmAPAutomationIndex.lblVendorMismatch.Visible(flase)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.HideInvoiceNotifications.End

Program.Sub.ShowInvoiceNotifications.Start
F.Intrinsic.Control.Try

	GUI.frmAPAutomationIndex.lblXRefConnect.Visible(true)
	GUI.frmAPAutomationIndex.lblCreateVendor.Visible(true)
	GUI.frmAPAutomationIndex.lblCreatePO.Visible(true)
	GUI.frmAPAutomationIndex.lblReceivePO.Visible(true)
	GUI.frmAPAutomationIndex.lblInvoiceExists.Visible(true)
	GUI.frmAPAutomationIndex.lblGSTCheck.Visible(true)
	GUI.frmAPAutomationIndex.lblInvoiceExistsSA.Visible(true)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.ShowInvoiceNotifications.End

Program.Sub.DisableInput.Start
F.Intrinsic.Control.Try

	GUI.frmAPAutomationIndex.cmdLearn.Enabled(False)
	GUI.frmAPAutomationIndex.cmdEVarAdd.Enabled(False)
	GUI.frmAPAutomationIndex.cmdEAddLine.Enabled(false)
	GUI.frmAPAutomationIndex.cmdEGLAccount.Enabled(false)
	GUI.frmAPAutomationIndex.cmdEPart.Enabled(false)
	GUI.frmAPAutomationIndex.cmdETaxCode.Enabled(false)
	GUI.frmAPAutomationIndex.cmdEVarBrowse.Enabled(false)
	GUI.frmAPAutomationIndex.cmdEVAT.Enabled(false)
	GUI.frmAPAutomationIndex.cmdEWO.Enabled(false)
	GUI.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(false)
	GUI.frmAPAutomationIndex.chkETaxable.Enabled(false)
	GUI.frmAPAutomationIndex.txtSupplierName.Enabled(false)
	GUI.frmAPAutomationIndex.txtInvNum.Enabled(false)
	GUI.frmAPAutomationIndex.txtInvdate.Enabled(false)
	GUI.frmAPAutomationIndex.txtPOReF.Enabled(false)
	GUI.frmAPAutomationIndex.txtSubTotal.Enabled(false)
	GUI.frmAPAutomationIndex.txtGST.Enabled(false)
	GUI.frmAPAutomationIndex.txtGTotal.Enabled(false)
	GUI.frmAPAutomationIndex.optInvoice.Enabled(False)
	GUI.frmAPAutomationIndex.optAccrual.Enabled(False)
	GUI.frmAPAutomationIndex.txtEDesc.Enabled(false)
	GUI.frmAPAutomationIndex.txtEGLAccount.Enabled(false)
	GUI.frmAPAutomationIndex.txtELoc.Enabled(false)
	GUI.frmAPAutomationIndex.txtEPart.Enabled(false)
	GUI.frmAPAutomationIndex.txtEQty.Enabled(false)
	GUI.frmAPAutomationIndex.txtESeq.Enabled(false)
	GUI.frmAPAutomationIndex.txtESuffix.Enabled(false)
	GUI.frmAPAutomationIndex.txtETaxAmt.Enabled(false)
	GUI.frmAPAutomationIndex.txtETaxCode.Enabled(false)
	GUI.frmAPAutomationIndex.txtEVarianceAcct.Enabled(false)
	GUI.frmAPAutomationIndex.txtEVarianceAmt.Enabled(false)
	GUI.frmAPAutomationIndex.txtEVat.Enabled(false)
	GUI.frmAPAutomationIndex.txtEWO.Enabled(false)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.enabled(false)
	GUI.frmAPAutomationIndex.txtNotes.Enabled(False)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.DisableInput.End

Program.Sub.EnableInput.Start
F.Intrinsic.Control.Try

	GUI.frmAPAutomationIndex.cmdLearn.Enabled(true)
	GUI.frmAPAutomationIndex.cmdEAddLine.Enabled(true)
	GUI.frmAPAutomationIndex.cmdEGLAccount.Enabled(true)
	GUI.frmAPAutomationIndex.cmdEPart.Enabled(true)
	GUI.frmAPAutomationIndex.cmdETaxCode.Enabled(true)
	GUI.frmAPAutomationIndex.cmdEVarBrowse.Enabled(true)
	GUI.frmAPAutomationIndex.cmdEVarAdd.Enabled(true)
	GUI.frmAPAutomationIndex.cmdEVAT.Enabled(true)
	GUI.frmAPAutomationIndex.cmdEWO.Enabled(true)
	GUI.frmAPAutomationIndex.chkETaxable.Enabled(true)
	GUI.frmAPAutomationIndex.txtSupplierName.Enabled(true)
	GUI.frmAPAutomationIndex.txtInvNum.Enabled(true)
	GUI.frmAPAutomationIndex.txtInvdate.Enabled(true)
	GUI.frmAPAutomationIndex.txtPOReF.Enabled(true)
	GUI.frmAPAutomationIndex.txtSubTotal.Enabled(true)
	GUI.frmAPAutomationIndex.txtGST.Enabled(true)
	GUI.frmAPAutomationIndex.optInvoice.Enabled(true)
	GUI.frmAPAutomationIndex.optAccrual.Enabled(true)
	GUI.frmAPAutomationIndex.cmdSave.Enabled(true)
	GUI.frmAPAutomationIndex.cmdReject.Enabled(true)
	GUI.frmAPAutomationIndex.txtEDesc.Enabled(true)
	GUI.frmAPAutomationIndex.txtEGLAccount.Enabled(true)
	GUI.frmAPAutomationIndex.txtELoc.Enabled(true)
	GUI.frmAPAutomationIndex.txtEPart.Enabled(true)
	GUI.frmAPAutomationIndex.txtEQty.Enabled(true)
	GUI.frmAPAutomationIndex.txtESeq.Enabled(true)
	GUI.frmAPAutomationIndex.txtESuffix.Enabled(true)
	GUI.frmAPAutomationIndex.txtETaxAmt.Enabled(true)
	GUI.frmAPAutomationIndex.txtETaxCode.Enabled(true)
	GUI.frmAPAutomationIndex.txtEVarianceAcct.Enabled(true)
	GUI.frmAPAutomationIndex.txtEVat.Enabled(true)
	GUI.frmAPAutomationIndex.txtEWO.Enabled(true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.enabled(true)
	GUI.frmAPAutomationIndex.txtNotes.Enabled(true)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.EnableInput.End

Program.Sub.CheckProcessButtons.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Global.iRowIndex, =, -1)
	GUI.frmAPAutomationIndex.cmdSave.Enabled(False)
	GUI.frmAPAutomationIndex.cmdSaveApprove.Enabled(False)
	GUI.frmAPAutomationIndex.cmdReject.Enabled(False)
	GUI.frmAPAutomationIndex.cmdQueue.Enabled(False)
	GUI.frmAPAutomationIndex.cmdSkipNext.Enabled(False)
F.Intrinsic.Control.Else
	F.Intrinsic.Control.SelectCase(V.Screen.frmAPAutomationIndex!tabs.Tab)
		F.Intrinsic.Control.Case(0)
			GUI.frmAPAutomationIndex.cmdSave.Enabled(True)
			GUI.frmAPAutomationIndex.cmdSaveApprove.Enabled(True)
			GUI.frmAPAutomationIndex.cmdReject.Enabled(True)
			GUI.frmAPAutomationIndex.cmdQueue.Enabled(False)
			GUI.frmAPAutomationIndex.cmdSkipNext.Enabled(True)
		F.Intrinsic.Control.Case(1)
			GUI.frmAPAutomationIndex.cmdSave.Enabled(False)
			GUI.frmAPAutomationIndex.cmdSaveApprove.Enabled(True)
			GUI.frmAPAutomationIndex.cmdReject.Enabled(True)
			GUI.frmAPAutomationIndex.cmdQueue.Enabled(True)
			GUI.frmAPAutomationIndex.cmdSkipNext.Enabled(False)
		F.Intrinsic.Control.Case(2)
			GUI.frmAPAutomationIndex.cmdSave.Enabled(False)
			GUI.frmAPAutomationIndex.cmdSaveApprove.Enabled(False)
			GUI.frmAPAutomationIndex.cmdReject.Enabled(True)
			GUI.frmAPAutomationIndex.cmdQueue.Enabled(True)
			GUI.frmAPAutomationIndex.cmdSkipNext.Enabled(False)
		F.Intrinsic.Control.Case(3)
			GUI.frmAPAutomationIndex.cmdSave.Enabled(False)
			GUI.frmAPAutomationIndex.cmdSaveApprove.Enabled(False)
			GUI.frmAPAutomationIndex.cmdReject.Enabled(False)
			GUI.frmAPAutomationIndex.cmdQueue.Enabled(False)
			GUI.frmAPAutomationIndex.cmdSkipNext.Enabled(False)
		F.Intrinsic.Control.Case(4)
			GUI.frmAPAutomationIndex.cmdSave.Enabled(False)
			GUI.frmAPAutomationIndex.cmdSaveApprove.Enabled(False)
			GUI.frmAPAutomationIndex.cmdReject.Enabled(False)
			GUI.frmAPAutomationIndex.cmdQueue.Enabled(True)
			GUI.frmAPAutomationIndex.cmdSkipNext.Enabled(False)
		F.Intrinsic.Control.CaseElse
			GUI.frmAPAutomationIndex.cmdSave.Enabled(False)
			GUI.frmAPAutomationIndex.cmdSaveApprove.Enabled(False)
			GUI.frmAPAutomationIndex.cmdReject.Enabled(False)
			GUI.frmAPAutomationIndex.cmdQueue.Enabled(False)
			GUI.frmAPAutomationIndex.cmdSkipNext.Enabled(False)
	F.Intrinsic.Control.EndSelect
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.CheckProcessButtons.End

Program.Sub.createDocumentLink.Start
F.Intrinsic.Control.Try

	V.Local.sLink.Declare
	V.Local.iLink.Declare
	V.Local.iFiEx.Declare
	V.Local.sVendorInvoice.Declare
	V.Local.sSQL.Declare
	V.Local.sFTyp.Declare
	V.Local.sTmpF.Declare
	V.Local.sNewDir.Declare
	V.Local.sLinkCheck.Declare
	
	F.Intrinsic.File.GetPathFromFQN(V.Args.FilePath,V.Local.sNewDir)
	F.Intrinsic.File.GetFileNameFromFQN(V.Args.filepath,V.Local.sTmpF)
	
	F.Intrinsic.String.Concat(V.Args.Vendor,V.Args.Invoice,V.Local.sVendorInvoice)
	
	'Check if it exists
	F.Intrinsic.String.Build("select link_id from LINK_DATA WHERE TYPE='00011' AND ID='{0}'",V.Local.sVendorInvoice,V.Local.sSQL)
	F.ODBC.Connection!con6861.executeandreturn(V.Local.sSQL,V.Local.sLink)
	F.Intrinsic.Control.If(V.Local.sLink.Trim,=,"")
		'Create the link
		F.ODBC.Connection!con6861.ExecuteAndReturn("SELECT ifnull(MAX(LINK_ID),0) AS 'LinkID' FROM LINK_DATA",V.Local.sLink)
		F.Intrinsic.Math.ConvertToLong(V.Local.sLink,V.Local.iLink)
		F.Intrinsic.Math.Add(V.Local.iLink,1,V.Local.iLink)
		F.Intrinsic.string.LPad(V.Local.iLink,"0",9,V.Local.sLink)
		F.Intrinsic.String.Build("INSERT INTO LINK_DATA (LINK_ID,TYPE,ID) VALUES('{0}','{1}','{2}')",V.Local.sLink,"00011",V.Local.sVendorInvoice,V.Local.sSQL)
		F.ODBC.Connection!con6861.execute(V.Local.sSQL)
		
		'Create the association for the Vendor Invoice
		F.Intrinsic.String.InstrRev(V.Args.FilePath,".",V.Local.iFiEx)
		F.Intrinsic.String.Mid(V.Args.FilePath,V.Local.iFiEx,V.Local.sFTyp)
		F.Intrinsic.String.Replace(V.Local.sFTyp,".","",V.Local.sFTyp)
		V.Local.sSQL.Set("INSERT INTO ATG_DOC_ASSOC VALUES ('','{0}','{1}','{2}','{3}','{4}','{5}','{6}','{7}','','','','',0)")
		F.Intrinsic.String.Build(V.Local.sSQL,V.local.iLink,V.Local.sFTyp.UCase,V.Local.sNewDir,V.Local.sTmpF.PSQLFriendly,"AP Invoice",V.Ambient.Now.PervasiveDate,V.Caller.User,V.Global.sDocumentGroup,V.Local.sSQL)
		F.ODBC.Connection!con6861.execute(V.Local.sSQL)
	F.Intrinsic.Control.Else
		'REference the link, will likely delete this.
		F.Intrinsic.Math.ConvertToLong(V.Local.sLink,V.Local.iLink)
		F.Intrinsic.Math.Add(V.Local.iLink,1,V.Local.iLink)
		F.Intrinsic.string.LPad(V.Local.iLink,"0",9,V.Local.sLink)
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.createDocumentLink.End

Program.Sub.gsgcRecLineItems_LostFocus.Start
F.Intrinsic.Control.Try

	F.Intrinsic.Control.CallSub(calcVariance)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcRecLineItems_LostFocus.End

Program.Sub.gsgcRecLineItems_CellValueChanged.Start
F.Intrinsic.Control.Try

	F.Intrinsic.Control.CallSub(calcVariance)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcRecLineItems_CellValueChanged.End

Program.Sub.gsgcPOLines_RowCellClick.Start
F.Intrinsic.Control.Try

	V.Local.sPO.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sParams.Declare
	V.Local.sPath.Declare
	V.Local.bExists.Declare
	V.Local.snothing.Declare
	
	V.Local.snothing.Set("TEST")
	F.Intrinsic.Control.BlockEvents

	F.Intrinsic.Control.SelectCase(V.Args.Column)
		'below - what column is being clicked
		F.Intrinsic.Control.CaseAny("RECORD_NO","PURCHASE_ORDER")
			GUI.frmAPAutomationIndex.gsgcPOLines.GetCellValueByColumnName("gvPOLines","PURCHASE_ORDER",V.Args.RowIndex,V.Local.sPO)
			F.Intrinsic.String.Concat("O!*!",V.Local.sPO,"!*!",V.Local.sParams)
			F.Global.General.CallWrapperASync(175200,V.Local.sParams)
		F.Intrinsic.Control.Case("PART")
            'Open Supply and Demand Screen  V.Caller.TempDir vs V.Caller.LocalGSSTempDir
            F.Intrinsic.String.Build("{0}bin\SupplyAndDemand.exe",V.Caller.LocalGSSTempDir,V.Local.sPath)
            F.Intrinsic.File.Exists(V.Local.sPath,V.Local.bExists)
            GUI.frmAPAutomationIndex.gsgcPOLines.GetCellValueByColumnName("gvPOLines","PART",V.Args.RowIndex,V.Local.sPart)
            GUI.frmAPAutomationIndex.gsgcPOLines.GetCellValueByColumnName("gvPOLines","LOCATION",V.Args.RowIndex,V.Local.sLoc)
            F.Intrinsic.Control.If(V.Local.bExists)
            	F.Intrinsic.Task.SetEnvironmentVariable("PARTNUMBER",V.Local.sPart)
            	F.Intrinsic.Task.SetEnvironmentVariable("LOCATIONCODE",V.Local.sLoc)
            	F.Intrinsic.Task.LaunchAsync(V.Local.sPath,1,V.Local.sPath)
            F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.UnBlockEvents
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry	
Program.Sub.gsgcPOLines_RowCellClick.End

Program.Sub.gsgcQueue_RowCellClick.Start
F.Intrinsic.Control.Try

	F.Intrinsic.Control.CallSub(DisableAll)
	F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvQueue","Status","Queue","Gridview","gvAPInvQueue","GridControl","gsgcQueue","MyRowIndex",V.Args.RowIndex)
	F.Intrinsic.Control.CallSub(EnableAll)
	F.Intrinsic.Control.CallSub(EnableInput)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcQueue_RowCellClick.End

Program.Sub.gsgcReject_RowCellClick.Start
F.Intrinsic.Control.Try
	
	F.Intrinsic.Control.CallSub(DisableAll)
	F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvReject","Status","Reject","Gridview","gvAPInvRejected","GridControl","gsgcReject","MyRowIndex",V.Args.RowIndex)
	F.Intrinsic.Control.CallSub(EnableAll)
	F.Intrinsic.Control.CallSub(DisableInput)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcReject_RowCellClick.End

Program.Sub.gsgcSaved_RowCellClick.Start
F.Intrinsic.Control.Try

	F.Intrinsic.Control.CallSub(DisableAll)
	F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvSaved","Status","Save","Gridview","gvAPInvSaved","GridControl","gsgcSaved","MyRowIndex",V.Args.RowIndex)
	F.Intrinsic.Control.CallSub(EnableAll)
	F.Intrinsic.Control.CallSub(DisableInput)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcSaved_RowCellClick.End

Program.Sub.gsgcApproved_RowCellClick.Start
'population of the approved form once clicked on the left side
F.Intrinsic.Control.Try

	F.Intrinsic.Control.CallSub(DisableAll)
	F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvApproved","Status","approve","Gridview","gvAPInvApproved","GridControl","gsgcApproved","MyRowIndex",V.Args.RowIndex)
	F.Intrinsic.Control.CallSub(EnableAll)
	F.Intrinsic.Control.CallSub(DisableInput)
	V.Local.iRowCount.Declare

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcApproved_RowCellClick.End

Program.Sub.cmdEVarBrowse_Click.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	
	V.Local.sSQL.set("Select GL_ACCOUNT, DESCR FROM V_GL_MASTER  where inactive_date='1900-01-01' ORDER BY GL_ACCOUNT")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("GL Account*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("900*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a GL Account","con6861",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		GUI.frmAPAutomationIndex.txtEVarianceAcct.Text(V.Local.sRet(0))
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdEVarBrowse_Click.End

Program.Sub.cmdEGLAccount_Click.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	
	V.Local.sSQL.set("Select GL_ACCOUNT, DESCR FROM V_GL_MASTER where inactive_date='1900-01-01' order by GL_ACCOUNT ")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("GL Account*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("900*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a GL Account","con6861",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		GUI.frmAPAutomationIndex.txtEGLAccount.Text(V.Local.sRet(0))
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdEGLAccount_Click.End

Program.Sub.cmdEPart_Click.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	
	V.Local.sSQL.set("Select PART, Location, DESCRIPTION FROM INVENTORY_MSTR Order by Part")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Part #*!*Location*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("2000*!*300*!*3000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Part","con6861",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		GUI.frmAPAutomationIndex.txtEPart.Text(V.Local.sRet(0))
		GUI.frmAPAutomationIndex.txtELoc.Text(V.Local.sRet(1))
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdEPart_Click.End

Program.Sub.cmdETaxCode_Click.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	
	V.Local.sSQL.set("Select CONCAT(ZONE,AUTH) AS 'TAXCODE', DESCR FROM AR_TAX_TABLES")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Tax Code*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("600*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Tax Code","con6861",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		GUI.frmAPAutomationIndex.txtETaxCode.Text(V.Local.sRet(0))
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdETaxCode_Click.End

Program.Sub.cmdEWO_Click.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	
	V.Local.sSQL.set("Select JOB, SUFFIX, SEQ, DESCRIPTION FROM JOB_OPERATIONS WHERE LMO='M' OR LMO='O' ORDER BY JOB,SUFFIX,SEQ")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Job*!*Suffix*!*Sequence*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("600*!*300*!*600*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Job","con6861",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		GUI.frmAPAutomationIndex.txtEWO.Text(V.Local.sRet(0))
		GUI.frmAPAutomationIndex.txtESuffix.Text(V.Local.sRet(1))
		GUI.frmAPAutomationIndex.txtESeq.Text(V.Local.sRet(2))
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdEWO_Click.End

Program.Sub.cmdEVAT_Click.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare(String)
	V.Local.sCol.Declare(String)
	V.Local.sColW.Declare(String)
	V.Local.sRet.Declare(String)
	
	V.Local.sSQL.set("Select RULE_ID, DESCR FROM VAT_TAX_RULE WHERE INPUT_ACCT=1 OR EXPENSE_ACCT=1")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Rule*!*Description","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("600*!*2000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Rule","con6861",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		GUI.frmAPAutomationIndex.txtEVat.Text(V.Local.sRet(0))
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdEVAT_Click.End

Program.Sub.cmdEVarAdd_Click.Start
F.Intrinsic.Control.Try

	V.Local.iVat.Declare
	V.Local.fVariance.Declare
	V.Local.sRemoveSign.Declare
	
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!txtEVat.text,=,"")
		V.Local.iVat.Set(1)
	F.Intrinsic.Control.Else
		V.Local.iVat.Set(V.Screen.frmAPAutomationIndex!txtEVat.text)
	F.Intrinsic.Control.EndIf
	
	V.Local.sRemoveSign.Set(V.Screen.frmAPAutomationIndex!txtEVarianceAmt.text)
	F.Intrinsic.String.Replace(V.Local.sRemoveSign,V.Global.sCurrencySymbol,"",V.Local.sRemoveSign)
	V.Local.sRemoveSign.Set(V.Local.sRemoveSign.Trim)
	V.Local.fVariance.Set(V.Local.sRemoveSign)
	
	F.Intrinsic.Control.If(V.Local.fVariance, =, 0)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Data.Datatable.AddRow("dtRecLines","SelectLine",True,"PART","VARIANCE","Location",V.Screen.frmAPAutomationIndex!txtELoc.text,"QTY_RECEIVED",1,"RECEIVED_AMT",V.Local.sRemoveSign,"ACTUAL_AMT",V.Local.sRemoveSign,"TAX_CODE",V.Screen.frmAPAutomationIndex!txtETaxCode.text,"SEQ","","GL_ACCOUNT",V.Screen.frmAPAutomationIndex!txtEVarianceAcct.text,"TAXABLE",V.Screen.frmAPAutomationIndex!chkETaxable.Value,"VAT_RULE",V.Local.iVat)
	
	F.Intrinsic.Control.CallSub(calcVariance)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdEVarAdd_Click.End

Program.Sub.cmdEAddLine_Click.Start
F.Intrinsic.Control.Try

	V.Local.fqty.Declare
	V.Local.sSeq.Declare
	V.Local.sSQL.Declare
	V.Local.sret.Declare
	V.Local.fAmt.Declare
	V.Local.iVat.Declare
	V.Local.sGLAccount.Declare
	
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!txtEQty.text,=,"")
		V.Local.fqty.Set(1)
	F.Intrinsic.Control.Else
		V.Local.fqty.Set(V.Screen.frmAPAutomationIndex!txtEQty.text)
	F.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!txtETaxAmt.text,=,"")
		V.Local.fAmt.Set(0)
	F.Intrinsic.Control.Else
		V.Local.fAmt.Set(V.Screen.frmAPAutomationIndex!txtETaxAmt.text)
	F.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!txtEVat.text,=,"")
		V.Local.iVat.Set(1)
	F.Intrinsic.Control.Else
		V.Local.iVat.Set(V.Screen.frmAPAutomationIndex!txtEVat.text)
	F.Intrinsic.Control.EndIf
	
	V.Local.sGLAccount.Set(V.Screen.frmAPAutomationIndex!txtEGLAccount.text)
	
	F.Intrinsic.String.Build("SELECT * FROM GL_MASTER WHERE GL_ACCOUNT='{0}'",V.Local.sGLAccount.Trim,V.Local.sSQL)
	F.ODBC.Connection!con6861.executeandreturn(V.Local.sSQL,V.Local.sret)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
		V.Local.sSeq.Set(V.Screen.frmAPAutomationIndex!txtESeq.text)
		
		F.Data.Datatable.AddRow("dtRecLines","SelectLine",True,"JOB",V.Screen.frmAPAutomationIndex!txtEWO.text,"SUFFIX",V.Screen.frmAPAutomationIndex!txtESuffix.text,"SEQ",V.Local.sSeq, "PART",V.Screen.frmAPAutomationIndex!txtEPart.text,"Location",V.Screen.frmAPAutomationIndex!txtELoc.text,"QTY_RECEIVED",V.Local.fqty,"RECEIVED_AMT",V.Local.fAmt,"ACTUAL_AMT",V.Local.fAmt,"TAX_CODE",V.Screen.frmAPAutomationIndex!txtETaxCode.text,"SEQ",V.Local.sSeq,"GL_ACCOUNT",V.Screen.frmAPAutomationIndex!txtEGLAccount.text,"TAXABLE",V.Screen.frmAPAutomationIndex!chkETaxable.Value,"VAT_RULE",V.Local.iVat)	
		GUI.frmAPAutomationIndex.txtEPart.Text("")
		GUI.frmAPAutomationIndex.txtELoc.Text("")
		GUI.frmAPAutomationIndex.txtEDesc.Text("")
		GUI.frmAPAutomationIndex.txtEQty.Text("")
		GUI.frmAPAutomationIndex.txtEWO.Text("")
		GUI.frmAPAutomationIndex.txtESuffix.Text("")
		GUI.frmAPAutomationIndex.txtESeq.Text("")
		GUI.frmAPAutomationIndex.txtEVat.Text("")
		GUI.frmAPAutomationIndex.txtETaxAmt.Text("")
		GUI.frmAPAutomationIndex.txtEGLAccount.BackColor(V.Color.White)
		F.Intrinsic.Control.CallSub(calcVariance)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.txtEGLAccount.BackColor(V.Color.Red)
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdEAddLine_Click.End

Program.Sub.cmdReject_Click.Start
'Opening the Reject conformation GUI

F.Intrinsic.Control.Try

	V.Local.sGradeTotal.Declare
	
	GUI.RejectConformation..Visible(True)
	
	F.Intrinsic.String.Format(V.Screen.frmAPAutomationIndex!txtGTotal.text, V.Global.sMoneyFormat, V.Local.sGradeTotal)
	
	GUI.RejectConformation.txtRejectSupplierName.Text(V.Screen.frmAPAutomationIndex!txtSupplierName.text)
	GUI.RejectConformation.txtRejectInvoiceNumber.Text(V.Screen.frmAPAutomationIndex!txtInvNum.text)
	GUI.RejectConformation.txtrejectGrandTotal.Text(V.Local.sGradeTotal)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdReject_Click.End

Program.Sub.cmdSkipNext_Click.Start
F.Intrinsic.Control.Try

	F.Intrinsic.Math.Add(V.Global.iRowIndex,1,V.Global.iRowIndex)
	F.Intrinsic.Control.CallSub(subClearEverything)
 	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!tabs.Tab,=,0)
 		F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvQueue","Status","Queue","Gridview","gvAPInvQueue","GridControl","gsgcQueue","MyRowIndex",V.Global.iRowIndex)
 	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdSkipNext_Click.End

Program.Sub.cmdRejectConfirm_click.Start
'Updating the database with why a PO was rejected
F.Intrinsic.Control.Try

	V.Local.sRejectReason.Declare
	V.Local.sSupplierName.Declare
	V.Local.SInvoiceNumber.Declare
	V.Local.sDOCID.Declare
	V.Local.sSQL.Declare
	
	V.Local.sRejectReason.Set(V.Screen.RejectConformation!txtRejectRejectReason.text)
	V.Local.sSupplierName.Set(V.Screen.RejectConformation!txtRejectSupplierName.text)
	V.Local.sInvoiceNumber.Set(V.Screen.RejectConformation!txtRejectInvoiceNumber.Text)
	V.Local.sDOCID.Set(V.Screen.frmAPAutomationIndex!txtDocID.Text)
	
	GUI.RejectConformation.txtRejectSupplierName.Text("")
	GUI.RejectConformation.txtRejectInvoiceNumber.Text("")
	GUI.RejectConformation.txtrejectGrandTotal.Text("")
	GUI.RejectConformation.txtRejectRejectReason.Text("")
	
	F.Intrinsic.String.Concat("UPDATE GCG_6861_AP_HEAD SET RejectReason = '", V.Local.sRejectReason ,"', GssStatus = 'rejected' WHERE DOCID = '",V.Local.sDOCID,"'", V.Local.sSQL)
	F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!tabs.Tab,=,0)
		F.Data.Datatable.DeleteRow("dtAPInvQueue",V.Global.iRowIndex)
		F.Data.DataTable.AcceptChanges("dtAPInvQueue")
	F.Intrinsic.Control.elseIf(V.Screen.frmAPAutomationIndex!tabs.Tab,=,1)
		F.Data.Datatable.DeleteRow("dtAPInvSaved",V.Global.iRowIndex)
		F.Data.DataTable.AcceptChanges("dtAPInvSaved")
	F.Intrinsic.Control.elseIf(V.Screen.frmAPAutomationIndex!tabs.Tab,=,2)
		F.Data.Datatable.DeleteRow("dtAPInvApproved",V.Global.iRowIndex)
		F.Data.DataTable.AcceptChanges("dtAPInvApproved")
	F.Intrinsic.Control.EndIf
			
	'need to remove all assisiated lines
	F.Intrinsic.String.Concat("DELETE FROM GCG_6861_AP_SA WHERE HID = '",V.Global.sID,"'", V.Local.sSQL)
	F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.CallSub(subClearEverything)
	GUI.RejectConformation..Visible(False)
 	
 	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!tabs.Tab,=,0)
 		F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvQueue","Status","Queue","Gridview","gvAPInvQueue","GridControl","gsgcQueue","MyRowIndex",V.Global.iRowIndex)
 	F.Intrinsic.Control.EndIf
 	
 	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!tabs.Tab,=,1)
		F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvSaved","Status","Save","Gridview","gvAPInvSaved","GridControl","gsgcSaved","MyRowIndex",V.Global.iRowIndex)
	F.Intrinsic.Control.EndIf
	
 	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!tabs.Tab,=,2)
		F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvApproved","Status","approve","Gridview","gvAPInvApproved","GridControl","gsgcApproved","MyRowIndex",V.Global.iRowIndex)
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdRejectConfirm_click.End

Program.Sub.cmdRejectCancel_click.Start
'Closing the rejectConformaiton GUI
F.Intrinsic.Control.Try

GUI.RejectConformation..Visible(False)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdRejectCancel_click.End

Program.Sub.cmdSave_click.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare
	V.Local.sVendorName.Declare
	V.Local.sVendCode.Declare
	V.Local.bCheck1.Declare
	V.Local.bCheck2.Declare
	V.Local.bCheck3.Declare
	V.Local.bCheck4.Declare
	V.Local.bCheck5.Declare
	V.Local.bCheck6.Declare
	V.Local.bCheck7.Declare
	V.Local.bCheck8.Declare
	V.Local.bCheck9.Declare
	V.Local.sMessage.Declare
	
	V.Local.sVendorName.Set(V.Screen.frmAPAutomationIndex!txtSupplierName.text)
	V.Local.sVendCode.Set(V.Screen.frmAPAutomationIndex!txtVendCode.text)
	
	F.Intrinsic.Control.CallSub(calcVariance)
	F.Intrinsic.Control.CallSub(setInvoiceAccrual)
	
	F.Intrinsic.Control.CallSub(checkFieldsSave)
	F.Intrinsic.Variable.ArgToVar("rPassVendor",V.Local.bCheck1)
	F.Intrinsic.Variable.ArgToVar("rPassVendorXRef",V.Local.bCheck2)
	F.Intrinsic.Variable.ArgToVar("rPassGL",V.Local.bCheck3)
	F.Intrinsic.Variable.ArgToVar("rPassIA",V.Local.bCheck4)
	F.Intrinsic.Variable.ArgToVar("rPassVariance",V.Local.bCheck5)
	F.Intrinsic.Variable.ArgToVar("rPassInvoiceExists",V.Local.bCheck6)
	F.Intrinsic.Variable.ArgToVar("rPassInvoiceExistsSA",V.Local.bCheck7)
	F.Intrinsic.Variable.ArgToVar("rPassVarianceLines",V.Local.bCheck8)
	F.Intrinsic.Variable.ArgToVar("rVendorMatch",V.Local.bCheck9)
	
	F.Intrinsic.Variable.ArgToVar("rMessage",V.Local.sMessage)
	
	F.Intrinsic.Control.If(V.Local.bCheck1)
	F.Intrinsic.Control.AndIf(V.Local.bCheck2)
	F.Intrinsic.Control.AndIf(V.Local.bCheck3)
	F.Intrinsic.Control.AndIf(V.Local.bCheck4)
	F.Intrinsic.Control.AndIf(V.Local.bCheck5)
	F.Intrinsic.Control.AndIf(V.Local.bCheck6)
	F.Intrinsic.Control.AndIf(V.Local.bCheck7)
	F.Intrinsic.Control.AndIf(V.Local.bCheck8)
	F.Intrinsic.Control.AndIf(V.Local.bCheck9)
		F.Intrinsic.Control.CallSub(subUpdateButton_Update)
		F.Intrinsic.String.Concat("UPDATE GCG_6861_AP_HEAD SET GssStatus = 'saved' WHERE ID = '",V.global.sID,"'", V.Local.sSQL)
		F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
		
		'Soft update Vendor Code
		F.Intrinsic.String.Build("SELECT VENDORCODE FROM GCG_6861_AP_XREF WHERE VendorName='{0}'",V.Local.sVendorName.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!con6861.executeandreturn(V.Local.sSQL,V.Local.sVendCode)
		F.Intrinsic.String.Concat("UPDATE GCG_6861_AP_HEAD SET Vendcode = '",V.Local.sVendCode,"' WHERE ID = '",V.global.sID,"'", V.Local.sSQL)
		F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
		F.Data.Datatable.DeleteRow("dtAPInvQueue",V.Global.iRowIndex)
		F.Data.DataTable.AcceptChanges("dtAPInvQueue")
		
		F.Intrinsic.Control.CallSub(subClearEverything)
	 	F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvQueue","Status","Queue","Gridview","gvAPInvQueue","GridControl","gsgcQueue","MyRowIndex",V.Global.iRowIndex)
		
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sMessage)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdSave_click.End

Program.Sub.cmdSaveApprove_Click.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare
	V.Local.bCheck1.Declare
	V.Local.bCheck2.Declare
	V.Local.bCheck3.Declare
	V.Local.bCheck4.Declare
	V.Local.bCheck5.Declare
	V.Local.bCheck6.Declare
	V.Local.bCheck7.Declare
	V.Local.bCheck8.Declare
	V.Local.bCheck9.Declare
	V.Local.sMessage.Declare
	
	F.Intrinsic.Control.CallSub(calcVariance)
	F.Intrinsic.Control.CallSub(setInvoiceAccrual)

	'Check if this is being called from the queue space
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!tabs.tab,=,0)
		F.Intrinsic.Control.CallSub(checkFieldsSave)
		F.Intrinsic.Variable.ArgToVar("rPassVendor",V.Local.bCheck1)
		F.Intrinsic.Variable.ArgToVar("rPassVendorXRef",V.Local.bCheck2)
		F.Intrinsic.Variable.ArgToVar("rPassGL",V.Local.bCheck3)
		F.Intrinsic.Variable.ArgToVar("rPassIA",V.Local.bCheck4)
		F.Intrinsic.Variable.ArgToVar("rPassVariance",V.Local.bCheck5)
		F.Intrinsic.Variable.ArgToVar("rPassInvoiceExists",V.Local.bCheck6)
		F.Intrinsic.Variable.ArgToVar("rPassInvoiceExistsSA",V.Local.bCheck7)
		F.Intrinsic.Variable.ArgToVar("rPassVarianceLines",V.Local.bCheck8)
		F.Intrinsic.Variable.ArgToVar("rVendorMatch",V.Local.bCheck9)
		F.Intrinsic.Variable.ArgToVar("rMessage",V.Local.sMessage)
	F.Intrinsic.Control.Else
		'Ignore the checks, this is done
		V.Local.bCheck1.Set(true)
		V.Local.bCheck2.Set(true)
		V.Local.bCheck3.Set(true)
		V.Local.bCheck4.Set(true)
		V.Local.bCheck5.Set(true)
		V.Local.bCheck6.Set(true)
		V.Local.bCheck7.Set(true)
		V.Local.bCheck8.Set(true)
		V.Local.bCheck9.Set(true)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.Local.bCheck1)
	F.Intrinsic.Control.AndIf(V.Local.bCheck2)
	F.Intrinsic.Control.AndIf(V.Local.bCheck3)
	F.Intrinsic.Control.AndIf(V.Local.bCheck4)
	F.Intrinsic.Control.AndIf(V.Local.bCheck5)
	F.Intrinsic.Control.AndIf(V.Local.bCheck6)
	F.Intrinsic.Control.AndIf(V.Local.bCheck7)
	F.Intrinsic.Control.AndIf(V.Local.bCheck8)
	F.Intrinsic.Control.AndIf(V.Local.bCheck9)
		F.Intrinsic.String.Concat("UPDATE GCG_6861_AP_HEAD SET GssStatus = 'approved' WHERE ID = '",V.global.sID,"'", V.Local.sSQL)
		F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
		
		F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!tabs.Tab,=,0)
			F.Data.Datatable.DeleteRow("dtAPInvQueue",V.Global.iRowIndex)
			F.Data.Datatable.AcceptChanges("dtAPInvQueue")
			F.Intrinsic.Control.CallSub(subUpdateButton_Update)
			F.Intrinsic.Control.CallSub(subClearEverything)
		 	F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvQueue","Status","Queue","Gridview","gvAPInvQueue","GridControl","gsgcQueue","MyRowIndex", 0)
		F.Intrinsic.Control.Elseif(V.Screen.frmAPAutomationIndex!tabs.Tab,=,1)
			F.Data.Datatable.DeleteRow("dtAPInvSaved",V.Global.iRowIndex)
			F.Data.Datatable.AcceptChanges("dtAPInvSaved")
			F.Intrinsic.Control.CallSub(subClearEverything)
			F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvSaved","Status","Save","Gridview","gvAPInvSaved","GridControl","gsgcSaved","MyRowIndex", 0)
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sMessage)
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdSaveApprove_Click.End

Program.Sub.cmdSupplierXRefSearch_Click.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare
	V.Local.sCol.Declare
	V.Local.sColW.Declare
	V.Local.sRet.Declare
	V.Local.sSupplierName.Declare
	V.Local.sVendCode.Declare
	V.Local.bXRefCheck1.Declare
	V.Local.bXRefCheck.Declare
	V.Local.bVendorCheck.Declare
	
	V.Local.sSQL.set("SELECT VENDOR, NAME_VENDOR FROM V_VENDOR_MASTER")
	'Split Column Names into an array (*!* delimited string)
	F.Intrinsic.String.Split("Vendor*!*Name Vendor","*!*",V.Local.sCol)
	'Split Column widths into an array (*!* delimited string)
	F.Intrinsic.String.Split("600*!*3000","*!*",V.Local.sColW)
	F.Intrinsic.UI.Browser("Select a Vendor","con6861",V.Local.sSQL,V.Local.sCol,V.Local.sColW,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		V.Local.sVendCode.Set(V.Local.sRet(0))
		V.Local.sSupplierName.Set(V.Screen.frmAPAutomationIndex!txtSupplierName.text)
		GUI.frmAPAutomationIndex.txtVendCode.Text(V.Local.sVendCode)
		
		F.Intrinsic.String.Build("INSERT INTO GCG_6861_AP_XREF (VendorCode,VendorName) VALUES ('{0}','{1}')",V.Local.sVendCode,V.Local.sSupplierName.PSQLFriendly,V.Local.sSQL)
		F.ODBC.Connection!con6861.execute(V.Local.sSQL)
		F.Intrinsic.String.Build("UPDATE GCG_6861_AP_HEAD SET VENDCODE = '{0}' where docid='{1}'",V.Local.sVendCode,V.Global.sDOCID,V.Local.sSQL)
		F.ODBC.Connection!con6861.execute(V.Local.sSQL)
		
		'Check Everything
		F.Intrinsic.Control.CallSub(checkXrefSuppPORec)
		
		'Calculations
		F.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",True)
		F.Intrinsic.Control.CallSub(calcVariance)
	
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdSupplierXRefSearch_Click.End

Program.Sub.cmdLearn_click.Start
'PO Doc Review
F.Intrinsic.Control.Try

	V.Local.bXrefCheck.Declare
	V.Local.bXRefCheck1.Declare
	V.Local.sVendCode.Declare
	V.Local.sSupplierName.Declare
	V.Local.sdata.Declare
	V.Local.sret.Declare
	V.Local.sFile.Declare
	V.Local.sDoc.Declare
	V.Local.sRowID.Declare
	V.Local.bEOF.Declare
	V.local.slink.Declare
	V.local.sStatus.Declare
	V.Local.sLinkLearn.Declare
	V.Local.sGabFile.Declare
	
	'disable screen GETS STUCK
	F.Intrinsic.Control.CallSub(DisableAll)	
	GUI.FormLearn.gsWebBrowser.LoadURL("")
	
	'create APi call
	F.Intrinsic.String.Build("{{0}api_key{0} : {0}{1}{0}, {0}document_id{0} : {0}{2}{0}, {0}no_lockout{0}: 1, {0}callback_url{0} : {0}https://app.gssap.com{0}}",V.Ambient.DblQuote,V.Global.sAPIKey,V.Global.sDOCID,V.Local.sdata)
	F.Communication.REST.SetProperty("ContentType","application/json")
	F.Communication.REST.SetProperty("PostData",V.Local.sdata)
	F.Communication.REST.Post("https://api-app.xtracta.com/v1/documents/ui")
	F.Communication.REST.ReadProperty("TransferredData",V.Local.sret)
	F.Intrinsic.String.Split(V.Local.sret,"url>",V.Local.sret)
	F.Intrinsic.String.Replace(V.Local.sret(1),"</","",V.local.sLinkLearn)

	GUI.FormLearn..Visible(True)
	GUI.FormLearn.gsWebBrowser.LoadURL(V.local.sLinkLearn)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdLearn_click.End

Program.Sub.cmdQueue_Click.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare
	V.Local.sDOCID.Declare
	
	V.Local.sDOCID.Set(V.Screen.frmAPAutomationIndex!txtDocID.Text)
	
	F.Intrinsic.String.Concat("UPDATE GCG_6861_AP_HEAD SET GssStatus = 'queue' WHERE DOCID = '",V.Local.sDOCID,"'", V.Local.sSQL)
	F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
	
	'need to remove all assisiated lines
	F.Intrinsic.String.Concat("DELETE FROM GCG_6861_AP_SA WHERE HID = '",V.Global.sID,"'", V.Local.sSQL)
	F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
	
	F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!tabs.Tab,=,0)
		F.Data.Datatable.DeleteRow("dtAPInvQueue",V.Global.iRowIndex)
		F.Data.DataTable.AcceptChanges("dtAPInvQueue")
	F.Intrinsic.Control.elseIf(V.Screen.frmAPAutomationIndex!tabs.Tab,=,1)
		F.Data.Datatable.DeleteRow("dtAPInvSaved",V.Global.iRowIndex)
		F.Data.DataTable.AcceptChanges("dtAPInvSaved")
	F.Intrinsic.Control.elseIf(V.Screen.frmAPAutomationIndex!tabs.Tab,=,2)
		F.Data.Datatable.DeleteRow("dtAPInvApproved",V.Global.iRowIndex)
		F.Data.DataTable.AcceptChanges("dtAPInvApproved")
	F.Intrinsic.Control.elseIf(V.Screen.frmAPAutomationIndex!tabs.Tab,=,4)
		F.Data.Datatable.DeleteRow("dtAPInvReject",V.Global.iRowIndex)
		F.Data.DataTable.AcceptChanges("dtAPInvReject")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(subClearEverything)
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.cmdQueue_Click.End

Program.Sub.tabs_Click.Start
V.Local.sValue.Declare

F.Intrinsic.Control.Try

V.Local.sValue.Set(V.Screen.frmAPAutomationIndex!tabs.tab)

'THE ISSUE IS HERE
F.Intrinsic.Control.if(V.Local.sValue,=,"0")
	F.Intrinsic.Control.CallSub(loadQueues,"Grid","queue")
	GUI.frmAPAutomationIndex.cmdSave.Visible(true)
	GUI.frmAPAutomationIndex.cmdSaveApprove.Visible(true)
	GUI.frmAPAutomationIndex.cmdQueue.Visible(false)
	GUI.frmAPAutomationIndex.cmdReject.Visible(true)
	GUI.frmAPAutomationIndex.cmdSkipNext.Visible(True)
	
F.Intrinsic.Control.ElseIf(V.Local.sValue,=,"1")
	F.Intrinsic.Control.CallSub(loadQueues,"Grid","save")
	GUI.frmAPAutomationIndex.cmdSave.Visible(false)
	GUI.frmAPAutomationIndex.cmdSaveApprove.Visible(true)
	GUI.frmAPAutomationIndex.cmdQueue.Visible(True)
	GUI.frmAPAutomationIndex.cmdSkipNext.Visible(False)
	GUI.frmAPAutomationIndex.cmdReject.Visible(true)
	
F.Intrinsic.Control.ElseIf(V.Local.sValue,=,"2")
	F.Intrinsic.Control.CallSub(loadQueues,"Grid","approve")
	GUI.frmAPAutomationIndex.cmdSave.Visible(false)
	GUI.frmAPAutomationIndex.cmdSaveApprove.Visible(false)
	GUI.frmAPAutomationIndex.cmdQueue.Visible(True)
	GUI.frmAPAutomationIndex.cmdSkipNext.Visible(False)
	GUI.frmAPAutomationIndex.cmdReject.Visible(true)
	
F.Intrinsic.Control.ElseIf(V.Local.sValue,=,"3")
	F.Intrinsic.Control.CallSub(loadQueues,"Grid","process")
	GUI.frmAPAutomationIndex.cmdSave.Visible(false)
	GUI.frmAPAutomationIndex.cmdSaveApprove.Visible(false)
	GUI.frmAPAutomationIndex.cmdQueue.Visible(false)
	GUI.frmAPAutomationIndex.cmdReject.Visible(false)
	GUI.frmAPAutomationIndex.cmdSkipNext.Visible(False)
	
F.Intrinsic.Control.ElseIf(V.Local.sValue,=,"4")
	F.Intrinsic.Control.CallSub(loadQueues,"Grid","reject")
	GUI.frmAPAutomationIndex.cmdSave.Visible(false)
	GUI.frmAPAutomationIndex.cmdSaveApprove.Visible(false)
	GUI.frmAPAutomationIndex.cmdQueue.Visible(True)
	GUI.frmAPAutomationIndex.cmdSkipNext.Visible(False)
	GUI.frmAPAutomationIndex.cmdReject.Visible(false)
	
F.Intrinsic.Control.EndIf

V.Global.iRowIndex.Set(-1)
F.Intrinsic.Control.CallSub(HideInvoiceNotifications)
F.Intrinsic.Control.CallSub(SubClearEverything)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.tabs_Click.End

Program.Sub.txtNotes_LostFocus.Start
F.Intrinsic.Control.Try

	V.Local.iRowIndex.Declare
	V.Local.sNotes.Declare
	V.Local.sSQL.Declare
	V.Local.sDocID.Declare
	
	V.Local.iRowIndex.Set(V.Screen.frmAPAutomationIndex!lblRowID.Caption)
	V.Local.sDOCID.Set(V.Screen.frmAPAutomationIndex!txtDocID.Text)
	V.Local.sNotes.Set(V.Screen.frmAPAutomationIndex!txtNotes.Text)

	F.Intrinsic.String.Concat("UPDATE GCG_6861_AP_HEAD SET NOTES = '",V.Local.sNotes,"' WHERE DOCID = '",V.Local.sDOCID,"'", V.Local.sSQL)
	F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
	F.Data.DataTable.SetValue("dtAPInvQueue",V.Local.iRowIndex,"NOTES",V.Local.sNotes)
	F.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",True)
	F.Intrinsic.Control.CallSub(calcVariance)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.txtNotes_LostFocus.End

Program.Sub.txtGST_LostFocus.Start
F.Intrinsic.Control.Try

	V.Local.sGST.Declare
	V.Local.fGST.Declare
	V.Local.sSQL.Declare
	V.Local.sDocID.Declare
	
	V.Local.sDOCID.Set(V.Screen.frmAPAutomationIndex!txtDocID.Text)
	V.Local.sGST.Set(V.Screen.frmAPAutomationIndex!txtGST.text)
	F.Intrinsic.String.Replace(V.Local.sGST,V.Global.sCurrencySymbol,"",V.Local.sGST)
	
	F.Intrinsic.Math.ConvertToFloat(V.Local.sGST,V.Local.fGST)
	F.Intrinsic.String.Concat("UPDATE GCG_6861_AP_HEAD SET GSTTOTAL = '",V.Local.fGST,"' WHERE DOCID = '",V.Local.sDOCID,"'", V.Local.sSQL)
	F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
	F.Intrinsic.Control.CallSub(calcTaxGrandTotal, "XRef",True)
	F.Intrinsic.Control.CallSub(calcVariance)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.txtGST_LostFocus.End

Program.Sub.txtSubtotal_LostFocus.Start
F.Intrinsic.Control.Try

	V.Local.sSubTotal.Declare
	V.Local.fSubTotal.Declare
	V.Local.sSQL.Declare
	V.Local.sDocID.Declare
	
	V.Local.sDOCID.Set(V.Screen.frmAPAutomationIndex!txtDocID.Text)
	V.Local.sSubTotal.Set(V.Screen.frmAPAutomationIndex!txtSubTotal.Text)
	
	F.Intrinsic.String.Replace(V.Local.sSubTotal,V.Global.sCurrencySymbol,"",V.Local.fSubTotal)
	F.Intrinsic.String.Concat("UPDATE GCG_6861_AP_HEAD SET SUBTOTAL = '",V.Local.fSubTotal,"' WHERE DOCID = '",V.Local.sDOCID,"'", V.Local.sSQL)
	F.ODBC.Connection!con6861.Execute(V.Local.sSQL)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.txtSubtotal_LostFocus.End

Program.Sub.txtPORef_LostFocus.Start
F.Intrinsic.Control.Try

	V.Local.iRowIndex.Declare
	V.Local.sPORefNEW.Declare
	V.Local.sDOCID.Declare
	V.Local.sSQL.Declare
	V.local.bPOHead.Declare
	V.Local.bPOreceiver.Declare
	
	V.Local.sDOCID.Set(V.Screen.frmAPAutomationIndex!txtDocID.Text)
	V.Local.sPORefNEW.Set(V.Screen.frmAPAutomationIndex!txtPOReF.Text)
	V.Local.iRowIndex.Set(V.Screen.frmAPAutomationIndex!lblRowID.Caption)
	
	F.Intrinsic.String.Concat("UPDATE GCG_6861_AP_HEAD SET POHEAD = '",V.Local.sPORefNEW.PSQLFriendly,"' WHERE DOCID = '",V.Local.sDOCID,"'", V.Local.sSQL)
	F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
	
	F.Data.DataTable.SetValue("dtAPInvQueue",V.Local.iRowIndex,"POHEAD",V.Local.sPORefNEW)
	
	'Check Purchase Order is created in the system
	F.Intrinsic.Control.CallSub(CheckPONumberExist, "POHead", V.Local.sPORefNEW)
	F.Intrinsic.Variable.ArgToVar("POHead",V.Local.bPOHead)
	F.Intrinsic.Control.If(V.Local.bPOHead,=,True)
		GUI.frmAPAutomationIndex.lblCreatePO.Caption("PO Found")
		GUI.frmAPAutomationIndex.lblCreatePO.Visible(True)
		GUI.frmAPAutomationIndex.lblCreatePO.ForeColor(V.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.lblCreatePO.Caption("PO Not Found")
		GUI.frmAPAutomationIndex.lblCreatePO.Visible(True)
		GUI.frmAPAutomationIndex.lblCreatePO.ForeColor(V.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf
	
	'Checking if PO is received
	F.Intrinsic.Control.CallSub(CheckPOreceiverExist,"POHead",V.Local.sPORefNEW)
	F.Intrinsic.Variable.ArgToVar("POreceiver",V.Local.bPOreceiver)
	F.Intrinsic.Control.If(V.Local.bPOreceiver,=,True)
		GUI.frmAPAutomationIndex.lblReceivePO.Caption("PO Received")
		GUI.frmAPAutomationIndex.lblReceivePO.Visible(True)
		GUI.frmAPAutomationIndex.lblReceivePO.ForeColor(V.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.lblReceivePO.Caption("PO Not Received")
		GUI.frmAPAutomationIndex.lblReceivePO.Visible(True)
		GUI.frmAPAutomationIndex.lblReceivePO.ForeColor(V.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.txtPORef_LostFocus.End

Program.Sub.txtInvoiceDate_LostFocus.Start
F.Intrinsic.Control.Try

	V.Local.sInvoiceDateNEW.Declare
	V.Local.bIsDate.Declare
	V.Local.sDOCID.Declare
	V.Local.dInvoiceDateNew.Declare
	V.Local.sSQL.Declare
	
	V.Local.sDOCID.Set(V.Screen.frmAPAutomationIndex!txtDocID.Text)
	V.Local.sInvoiceDateNEW.Set(V.Screen.frmAPAutomationIndex!txtInvdate.Text)
	
	F.Intrinsic.Date.IsDate(V.Local.sInvoiceDateNEW,V.Local.bIsDate)
	F.Intrinsic.Control.If(V.Local.bIsDate)
		V.Local.dInvoiceDateNew.Set(V.Local.sInvoiceDateNEW)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox("Invalid Date, please enter valid date.")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Concat("UPDATE GCG_6861_AP_HEAD SET INVCDATE = '",V.Local.dInvoiceDateNew.PervasiveDate,"' WHERE DOCID = '",V.Local.sDOCID,"'", V.Local.sSQL)
	F.ODBC.Connection!con6861.Execute(V.Local.sSQL)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.txtInvoiceDate_LostFocus.End

Program.Sub.txtInvoiceNumber_LostFocus.Start
F.Intrinsic.Control.Try

	V.Local.iRowIndex.Declare
	V.Local.bInvoice.Declare
	V.Local.bInvoiceSA.Declare
	V.Local.sInvoiceNumberNEW.Declare
	V.Local.sVendor.Declare
	V.Local.sDOCID.Declare
	V.Local.sSQL.Declare
	
	V.Local.sVendor.Set(V.Screen.frmAPAutomationIndex!txtVendCode.text)
	V.Local.sDOCID.Set(V.Screen.frmAPAutomationIndex!txtDocID.Text)
	V.Local.sInvoiceNumberNEW.Set(V.Screen.frmAPAutomationIndex!txtInvNum.Text)
	V.Local.iRowIndex.Set(V.Screen.frmAPAutomationIndex!lblRowID.Caption)
	
	F.Intrinsic.String.Concat("UPDATE GCG_6861_AP_HEAD SET INVCNUMB = '",V.Local.sInvoiceNumberNEW,"' WHERE DOCID = '",V.Local.sDOCID,"'", V.Local.sSQL)
	F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
	
	F.Data.DataTable.SetValue("dtAPInvQueue",V.Local.iRowIndex,"INVCNUMB",V.Local.sInvoiceNumberNEW)
	
	F.Intrinsic.Control.CallSub(checkInvoiceExists,"Vendor",V.Local.sVendor,"Invoice",V.Local.sInvoiceNumberNEW)
	F.Intrinsic.Variable.ArgToVar("rInvoice",V.Local.bInvoice)
	F.Intrinsic.Control.If(V.Local.bInvoice)
		GUI.frmAPAutomationIndex.lblInvoiceExists.Caption("Cannot Upload, Invoice Exist")
		GUI.frmAPAutomationIndex.lblInvoiceExists.ForeColor(V.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.lblInvoiceExists.Caption("Can Upload, Invoice Not Found")
		GUI.frmAPAutomationIndex.lblInvoiceExists.ForeColor(V.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(checkInvoiceExistsSA,"Vendor",V.Local.sVendor,"Invoice",V.Local.sInvoiceNumberNEW)
	F.Intrinsic.Variable.ArgToVar("rInvoiceSA",V.Local.bInvoiceSA)
	F.Intrinsic.Control.If(V.Local.bInvoiceSA)
		GUI.frmAPAutomationIndex.lblInvoiceExistsSA.Caption("Cannot Upload, Invoice Exist in Approval")
		GUI.frmAPAutomationIndex.lblInvoiceExistsSA.ForeColor(V.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.lblInvoiceExistsSA.Caption("")
		GUI.frmAPAutomationIndex.lblInvoiceExistsSA.ForeColor(V.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.txtInvoiceNumber_LostFocus.End

Program.Sub.frmProcessAPConformationCloseGUI.Start
F.Intrinsic.Control.Try

GUI.ProcessAPConformation..Visible(False)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.frmProcessAPConformationCloseGUI.End

Program.Sub.frmProcessAPConformationOpenGUI.Start
F.Intrinsic.Control.Try

F.Data.DataTable.CreateFromSQL("dtApprovedCheck", "con6861","SELECT * FROM V_GCG_6861_AP_ALL WHERE Posted=0 AND GssStatus = 'approved' order by DOCID")

F.Intrinsic.Control.If(V.DataTable.dtApprovedCheck.RowCount, <, 1)
	F.Intrinsic.UI.Msgbox("No approved invoices ready for upload. Please approve invoices first then use the process button.")
F.Intrinsic.Control.Else
	GUI.ProcessAPConformation..Visible(True)
F.Intrinsic.Control.EndIf

F.Data.DataTable.Close("dtApprovedCheck")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.frmProcessAPConformationOpenGUI.End

Program.Sub.frmAPAutomationIndex_SaveButtonClick.Start
F.Intrinsic.Control.Try

	V.local.i.Declare
	V.Local.sDOCID.Declare
	V.Local.sLocalPO.Declare
	V.Local.iItem.Declare
	V.Local.sRowID.Declare
	V.Local.sVendCode.Declare
	V.Local.sInvoiceNumb.Declare
	V.Local.sPOHead.Declare
	V.Local.sPOLine.Declare
	V.Local.sPORcvr.Declare
	V.Local.sGLAccount.Declare
	V.Local.sAPApproveID.Declare
	V.Local.sNotes.Declare
	V.Local.bTaxable.Declare
	V.Local.sTaxable.Declare
	V.Local.bBookTax.Declare
	V.Local.sBookTax.Declare 
	V.Local.sJob.Declare
	V.Local.sTaxCode.Declare
	V.Local.sSuffix.Declare
	V.Local.sSEQ.Declare
	V.Local.sDescription.Declare
	V.Local.sLocation.Declare
	V.Local.sCostType.Declare
	V.Local.sBranch.Declare
	V.Local.dInvcDate.Declare
	V.Local.sInvcDate.Declare
	V.Local.sVatRule.Declare
	V.Local.sBuyer.Declare
	V.Local.sPurchaseUM.Declare
	V.Local.fReceivedAmount.Declare
	V.Local.fInvoiceQTY.Declare
	V.Local.fExtendedAmount.Declare
	V.Local.fActualAmount.Declare
	V.Local.fVariance.Declare
	V.Local.fSubtotal.Declare
	V.Local.sVoucher.Declare
	V.Local.sDOCSAVEDLOCATION.Declare
	V.Local.sPostDate.Declare
	V.Local.sSQL.Declare
	V.Local.sPartNumb.Declare
	V.Local.sinvoiceType.Declare
	V.Local.bhasinvoice.Declare
	V.Local.bhasaccural.Declare
	V.Local.sAPFile.Declare
	V.Local.bFileCheck.Declare
	V.Local.sSearch.Declare(String)
	V.Local.bExists.Declare(Boolean, False)
	V.Local.sBatch.Declare(String)
	V.Local.dLocaldate.Declare
	
	V.Local.bhasinvoice.Set(False)
	V.Local.bhasaccural.Set(False)
	
	GUI.ProcessAPConformation..Visible(False)
	GUI.ProcessAPConformation.cmdUpdate.Enabled(False)
	GUI.frmAPAutomationIndex..Enabled(False)
	
	F.Intrinsic.Control.CallSub(GetBranch)
	F.Intrinsic.String.Concat(V.Caller.FilesDir,"\APBATCH_INVACRbb.TXT",V.Local.sAPFile)
	F.Intrinsic.File.Exists(V.Local.sAPFile,V.Local.bFileCheck)
	F.Intrinsic.Control.If(V.Local.bFileCheck)
		F.Intrinsic.File.DeleteFile(V.Local.sAPFile)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("{0}\APBATCH_INVACR.txt", V.Caller.FilesDir, V.Local.sAPFile)
	F.Intrinsic.File.Exists(V.Local.sAPFile,V.Local.bFileCheck)
	F.Intrinsic.Control.If(V.Local.bFileCheck)
		F.Intrinsic.File.DeleteFile(V.Local.sAPFile)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("{0}\APBATCH_INVACR{1}.txt", V.Caller.FilesDir, V.Args.Branch, V.Local.sAPFile)
	F.Intrinsic.File.Exists(V.Local.sAPFile,V.Local.bFileCheck)
	F.Intrinsic.Control.If(V.Local.bFileCheck)
		F.Intrinsic.File.DeleteFile(V.Local.sAPFile)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Concat(V.Caller.FilesDir,"\APBATCH_UPLOADbb.TXT",V.Local.sAPFile)
	F.Intrinsic.File.Exists(V.Local.sAPFile,V.Local.bFileCheck)
	F.Intrinsic.Control.If(V.Local.bFileCheck)
		F.Intrinsic.File.DeleteFile(V.Local.sAPFile)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Concat(V.Caller.FilesDir,"\APBATCH_UPLOAD.TXT",V.Local.sAPFile)
	F.Intrinsic.File.Exists(V.Local.sAPFile,V.Local.bFileCheck)
	F.Intrinsic.Control.If(V.Local.bFileCheck)
		F.Intrinsic.File.DeleteFile(V.Local.sAPFile)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("{0}\APBATCH_UPLOAD{1}.txt", V.Caller.FilesDir, V.Args.Branch, V.Local.sAPFile)
	F.Intrinsic.File.Exists(V.Local.sAPFile,V.Local.bFileCheck)
	F.Intrinsic.Control.If(V.Local.bFileCheck)
		F.Intrinsic.File.DeleteFile(V.Local.sAPFile)
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.CreateFromSQL("dtApprovedProcessing", "con6861","SELECT * FROM V_GCG_6861_AP_ALL WHERE Posted=0 AND GssStatus = 'approved' order by DOCID",TRUE)
	
	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.dtApprovedProcessing.RowCount--,1)
		'post date
		V.Local.sPostDate.set(V.Screen.ProcessAPConformation!datepicker.Value)
		F.Intrinsic.String.Format(V.Local.sPostDate,"MMDDYY",V.Local.sPostDate)
		'DOCID
		V.Local.sDOCID.Set(V.DataTable.dtApprovedProcessing(V.Local.i).DOCID!fieldval)
		'PORCVR
		V.Local.sPORcvr.Set(V.DataTable.dtApprovedProcessing(V.Local.i).PORCVR!fieldval)
		'Vendor 
		V.Local.sVendCode.Set(V.DataTable.dtApprovedProcessing(V.Local.i).VENDCODE!fieldval)
		'Invoice 
		V.Local.sInvoiceNumb.Set(V.DataTable.dtApprovedProcessing(V.Local.i).INVCNUMB!fieldval)
		'InvoiceDate 
		V.Local.sInvcDate.Set(V.DataTable.dtApprovedProcessing(V.Local.i).INVCDATE!fieldval)
		F.Intrinsic.String.Format(V.Local.sInvcDate,"MMDDYY",V.Local.sInvcDate)
		'Receipt Amount
		V.Local.fReceivedAmount.Set(V.DataTable.dtApprovedProcessing(V.Local.i).RECEIVED_AMT!fieldval)
		'Actual Amount
		V.Local.fActualAmount.Set(V.DataTable.dtApprovedProcessing(V.Local.i).ACTUAL_AMT!fieldval)
		'SUBTOTAL
		V.Local.fSubtotal.Set(V.DataTable.dtApprovedProcessing(V.Local.i).SUBTOTAL!fieldval)
		'GLAccount 
		V.Local.sGLAccount.Set(V.DataTable.dtApprovedProcessing(V.Local.i).GLACCOUNT!fieldval)
		'TaxableFlag 
		V.Local.bTaxable.Set(V.DataTable.dtApprovedProcessing(V.Local.i).TAXABLEFLAG!fieldval)
		F.Intrinsic.Control.If(V.Local.bTaxable)
			V.Local.sTaxable.Set("Y")
		F.Intrinsic.Control.Else
			V.Local.sTaxable.Set("N")
		F.Intrinsic.Control.EndIf 
		'TaxCode
		V.Local.sTaxCode.Set(V.DataTable.dtApprovedProcessing(V.Local.i).TAXCODE!fieldval)
		'BookSelfTax 
		V.Local.bBookTax.Set(V.DataTable.dtApprovedProcessing(V.Local.i).BookSelfTax!fieldval)
		F.Intrinsic.Control.If(V.Local.bBookTax)
			V.Local.sBookTax.Set("Y")
		F.Intrinsic.Control.Else
			V.Local.sBookTax.Set("N")
		F.Intrinsic.Control.EndIf
		'WorkOrder 
		V.Local.sJob.Set(V.DataTable.dtApprovedProcessing(V.Local.i).JOB!fieldval)
		'WorkSuff 
		V.Local.sSuffix.Set(V.DataTable.dtApprovedProcessing(V.Local.i).SUFFIX!fieldval)
		'WorkSeq 
		V.Local.sSEQ.Set(V.DataTable.dtApprovedProcessing(V.Local.i).SEQ!fieldval)
		'Branch 
		V.Local.sBranch.Set(V.Args.Branch.Trim)
		'PurchaseOrder 
		V.local.sPOHead.Set(V.DataTable.dtApprovedProcessing(V.Local.i).POHEAD!fieldval)
		'PurchaseOrderLine 
		V.Local.sPOLine.Set(V.DataTable.dtApprovedProcessing(V.Local.i).POLINE!fieldval)
		'PurchaseUoM 
		V.Local.sPurchaseUM.Set(V.DataTable.dtApprovedProcessing(V.Local.i).POUM!fieldval)
		'InvoiceQuantity 
		V.Local.fInvoiceQTY.Set(V.DataTable.dtApprovedProcessing(V.Local.i).QUANTITY!fieldval)
		'Extended Amount
		F.Intrinsic.Math.Mult(V.Local.fInvoiceQTY,V.Local.fReceivedAmount,V.Local.fExtendedAmount)
		F.Intrinsic.Math.Round(V.Local.fExtendedAmount,2,V.Local.fExtendedAmount)
		'Variance Amount Calculation
		F.Intrinsic.Math.Sub(V.Local.fActualAmount,V.Local.fExtendedAmount,V.Local.fVariance)
		'Buyer 
		V.Local.sBuyer.Set(V.DataTable.dtApprovedProcessing(V.Local.i).BUYER!fieldval)
		'Voucher 
		V.Local.sVoucher.Set(V.DataTable.dtApprovedProcessing(V.Local.i).VOUCHER!fieldval)
		'VatTaxRule
		V.Local.sVatRule.Set(V.DataTable.dtApprovedProcessing(V.Local.i).VAT!fieldval)
		'Part 
		V.Local.sPartNumb.Set(V.DataTable.dtApprovedProcessing(V.Local.i).PART!fieldval)
		'Location 
		V.Local.sLocation.Set(V.DataTable.dtApprovedProcessing(V.Local.i).LOCATION!fieldval)
		'CostType 
		V.Local.sCostType.Set(V.DataTable.dtApprovedProcessing(V.Local.i).COSTTYPE!fieldval)
		'InvoiceNotes 
		V.Local.sNotes.Set(V.DataTable.dtApprovedProcessing(V.Local.i).NOTES!fieldval)
		'Line ID
		V.Local.sAPApproveID.Set(V.DataTable.dtApprovedProcessing(V.Local.i).APApproveID!fieldval)
		'invoice Type
		V.Local.sinvoiceType.Set(V.DataTable.dtApprovedProcessing(V.Local.i).INVOICETYPE!fieldval)
		'docsavedlocation
		V.Local.sDOCSAVEDLOCATION.Set(V.DataTable.dtApprovedProcessing(V.Local.i).docsavedlocation!fieldval)
		F.Intrinsic.Control.CallSub(createDocumentLink,"FilePath",V.Local.sDOCSAVEDLOCATION,"Vendor",V.Local.sVendCode,"Invoice",V.Local.sInvoiceNumb)
		
		F.Intrinsic.Control.If(V.Local.sinvoiceType,=,"i")
			'if only one line then eubtract gst fron total
			V.Local.bhasinvoice.Set(True)
			F.Data.DataTable.AddRow("AP043UP1","PostDate",V.Local.sPostDate,"Vendor",V.Local.sVendCode,"Invoice",V.Local.sInvoiceNumb,"InvoiceDate",V.Local.sInvcDate,"Amount",V.Local.fActualAmount,"GLAccount",V.Local.sGLAccount,"TaxableFlag",V.Local.sTaxable,"TaxCode",V.Local.sTaxCode,"InvoiceNotes",V.Local.sNotes,"BookSelfAccessTax",V.Local.sBookTax,"WorkOrder",V.Local.sJob,"WorkSuff",V.Local.sSuffix,"WorkSeq",V.Local.sSEQ,"Branch",V.Local.sBranch,"PurchaseOrder",V.local.sPOHead,"Buyer",V.Local.sBuyer,"Voucher",V.Local.sVoucher)			
		F.Intrinsic.Control.ElseIf(V.Local.sinvoiceType,=,"a")
			'clear stuck receiver records
			F.Intrinsic.String.Build("delete from RECEIVER_HISTORY where RECEIVER = '{0}' and PO_NO = '{1}' and PO_LINE = '{2}' and OPEN_ITEM_POSTED <> 'Y'", V.Local.sPORcvr, V.Local.sPOHead, V.Local.sPOLine, V.Local.sSQL)
			
			F.ODBC.Connection!Con.OpenCompanyConnection
			F.ODBC.Connection!Con.Execute(V.Local.sSQL)
			F.ODBC.Connection!Con.Close
			
			V.Local.bhasaccural.Set(True)
			'need to check branch options
			V.Global.s2110Branch.Set(V.Args.Branch.Trim)
			F.Data.DataTable.AddRow("dt2110", "BATCH_DATE", V.Screen.ProcessAPConformation!datepicker.Value, "VENDOR", V.Local.sVendCode, "INVOICE", V.Local.sInvoiceNumb, "INVOICE_DATE", V.DataTable.dtApprovedProcessing(V.Local.i).INVCDATE!fieldval, "BALANCE_DUE", V.Local.fActualAmount, "GL_ACCOUNT", V.Local.sGLAccount, "TAXABLE_FLAG", V.Local.bTaxable, "TAX_CODE", V.Local.sTaxCode, "BOOK_SELF_ACCESS_TAX", V.Local.bBookTax, "JOB", V.Local.sJob, "SUFFIX", V.Local.sSuffix, "SEQUENCE", V.Local.sSEQ, "BRANCH", V.Local.sBranch, "PURCHASE_ORDER", V.local.sPOHead, "PURCHASE_ORDER_LINE", V.Local.sPOLine, "PURCHASE_ORDER_UM", V.Local.sPurchaseUM, "RECEIVER", V.Local.sPORcvr, "QUANTITY", V.Local.fInvoiceQTY, "BUYER", V.Local.sBuyer, "VOUCHER", V.Local.sVoucher, "VAT_RULE", V.Local.sVatRule, "PART", V.Local.sPartNumb, "LOCATION", V.Local.sLocation, "NOTES", V.Local.sNotes, "COST_TYPE", V.Local.sCostType)
		F.Intrinsic.Control.EndIf
	
'		'updating the head table to status processes and making the line as posted
'		F.Intrinsic.String.Build("UPDATE GCG_6861_AP_SA SET POSTED=1 WHERE APApproveID={0}",V.Local.sAPApproveID,V.Local.sSQL)
'		F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
'	
'		V.Local.dLocaldate.Set(V.Ambient.Date)
'		F.Intrinsic.String.Build("UPDATE GCG_6861_AP_HEAD SET PROCESSED=1, GSSStatus='processed', processeddate='{1}'  WHERE DocID='{0}'",V.Local.sDOCID,V.Local.dLocaldate.PervasiveDate,V.Local.sSQL) 
'		F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
			
	F.Intrinsic.Control.Next(V.Local.i)

	F.Intrinsic.Control.If(V.Local.bhasaccural,=,True)
		F.Intrinsic.Control.CallSub(2110)
		
		'backup upload file
		F.Intrinsic.Control.If(V.Global.bUploadFileLogging)
			F.Intrinsic.Control.CallSub(BackupFile, "Type", "Accrual Invoice", "File", V.Global.s2110File)
		F.Intrinsic.Control.EndIf
		
		'delete file in case
		F.Intrinsic.File.Exists(V.Global.s2110File, V.Local.bExists)
		F.Intrinsic.Control.If(V.Local.bExists)
			F.Intrinsic.File.DeleteFile(V.Global.s2110File)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.Global.bLogFileLogging)
			'backup upload log
			F.Intrinsic.String.Build("{0}APLDLOG.TXT{1}{2}AP043IVC*.tmp", V.Caller.LocalGSSTempDir, V.Caller.CompanyCode, V.Caller.Terminal, V.Local.sSearch)
			F.Intrinsic.Control.CallSub(GetMostRecentTempFile, "SEARCH", V.Local.sSearch)
			F.Intrinsic.Control.If(V.Args.TempFile.Trim, !=, "")
				F.Intrinsic.Control.CallSub(BackUpFile, "Type", "Accrual Upload Log", "File", V.Args.TempFile)
			F.Intrinsic.Control.EndIf
			
			'backup upload error log
			F.Intrinsic.String.Build("{0}APIVCUPL_ERR_{1}.txt", V.Caller.LocalGSSTempDir, V.Caller.CompanyCode, V.Local.sSearch)
			F.Intrinsic.File.Exists(V.Local.sSearch, V.Local.bExists)
			F.Intrinsic.Control.If(V.Local.bExists)
				F.Intrinsic.Control.CallSub(BackUpFile, "Type", "Accrual Upload Log", "File", V.Local.sSearch)
			F.Intrinsic.Control.EndIf
			
			'backup core trace
			F.Intrinsic.String.Build("{0}2000--4--CoreTrace[!C{1}]-[!U{2}]-[!T{3}]-[!N{4}*--1.glog", V.Caller.LocalGSSTempDir, V.Caller.CompanyCode, V.Caller.User, V.Caller.Terminal, V.Ambient.Now.FormatYYMMDD, V.Local.sSearch)
			F.Intrinsic.Control.CallSub(GetMostRecentTempFile, "SEARCH", V.Local.sSearch)
			F.Intrinsic.Control.If(V.Args.TempFile.Trim, !=, "")
				F.Intrinsic.Control.CallSub(BackUpFile, "Type", "Accrual Upload Log", "File", V.Args.TempFile)
			F.Intrinsic.Control.EndIf
			
			'backup jobstream file with callwrapper return info
			F.Intrinsic.String.Build("{0}Jobstream_{1}{2}_{3}*", V.Caller.LocalGSSTempDir, V.Caller.Terminal, V.Caller.User, V.Ambient.Now.FormatYYYYMMDD, V.Local.sSearch)
			F.Intrinsic.Control.CallSub(GetMostRecentTempFile, "SEARCH", V.Local.sSearch)
			F.Intrinsic.Control.If(V.Args.TempFile.Trim, !=, "")
				F.Intrinsic.Control.CallSub(BackUpFile, "Type", "Accrual Upload Log", "File", V.Args.TempFile)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Local.bhasinvoice,=,True)
		F.Intrinsic.Control.CallSub(AP043UP1Sync) 'CREATES THE BATCH
		
		F.Intrinsic.Control.If(V.Global.bUploadFileLogging)
			F.Intrinsic.Control.CallSub(BackupFile, "Type", "Invoice", "File", V.Global.sAP043UP1File)
		F.Intrinsic.Control.EndIf
		
		'delete file in case
		F.Intrinsic.File.Exists(V.Global.sAP043UP1File, V.Local.bExists)
		F.Intrinsic.Control.If(V.Local.bExists)
			F.Intrinsic.File.DeleteFile(V.Global.sAP043UP1File)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	V.Local.bFails.Declare(Boolean, False)
	F.Intrinsic.Control.For(V.Local.i, V.DataTable.dtApprovedProcessing.RowCount--)
		'check if invoices exist in open batches
		F.Intrinsic.String.Build("select top 1 RTRIM(INVC) from V_AP_OPEN_BATCHES where INVC = '{0}'", V.DataTable.dtApprovedProcessing(V.Local.i).INVCNUMB!FieldValTrim, V.Local.sSQL)
		F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL, V.Local.sSQL)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
			V.Local.bFails.Set(True)
		F.Intrinsic.Control.Else
			'updating the head table to status processes and making the line as posted
			F.Intrinsic.String.Build("UPDATE GCG_6861_AP_SA SET POSTED=1 WHERE APApproveID={0}", V.DataTable.dtApprovedProcessing(V.Local.i).APApproveID!FieldValTrim, V.Local.sSQL)
			F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
		
			V.Local.dLocaldate.Set(V.Ambient.Date)
			F.Intrinsic.String.Build("UPDATE GCG_6861_AP_HEAD SET PROCESSED=1, GSSStatus='processed', processeddate='{1}'  WHERE DocID='{0}'", V.DataTable.dtApprovedProcessing(V.Local.i).DOCID!FieldValTrim, V.Local.dLocaldate.PervasiveDate, V.Local.sSQL) 
			F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
		F.Intrinsic.Control.Else
		
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.i)
	
	F.Intrinsic.Control.If(V.Local.bFails)
		F.Intrinsic.UI.Msgbox("Some invoices failed to upload, and have been left in the approved queue. Please validate the information on these and try again.")
	F.Intrinsic.Control.EndIf
	
	'Verify the tax calculations
	F.Intrinsic.Control.CallSub(checkTaxAfterInvoiceUpload)
	
	'fix targets
	'what if there are multiple batches
	F.Intrinsic.Control.If(V.DataTable.dtApprovedProcessing.RowCount, >, 0)
		'grab batch numnber based off of invoice
		F.Intrinsic.String.Build("select RTRIM(BATCH) from V_AP_OPEN_BATCHES where INVC = '{0}'", V.DataTable.dtApprovedProcessing(0).INVCNUMB!FieldValTrim, V.Local.sSQL)
		F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL, V.Local.sBatch)
		F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
			'update batch target
			F.Intrinsic.String.Build("update AP_OPEN_BATCHES set TARGET_AMOUNT = (select sum(TEMP_AMT) from V_AP_OPEN_BATCHES where BATCH = '{0}' and TEMP_AMT > 0) where BATCH = '{0}' and LN = '1'", V.Local.sBatch, V.Local.sSQL)
			F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Global.General.CallWrapperSync("50","AP0081") 'POST BACTCH
		
	F.Intrinsic.Control.CallSub(frmUnload)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.frmAPAutomationIndex_SaveButtonClick.End

Program.Sub.frmAPAutomationIndex_UserButtonClicked.Start
F.Intrinsic.Control.Try

V.Local.sMessage.Declare(String)

	F.Intrinsic.Control.SelectCase(V.Args.Button)
		F.Intrinsic.Control.Case("ReceivePO")
			F.Intrinsic.Control.CallSub(disableAll)
			F.Global.General.CallWrapperASync(50,"PUR100GI")
			F.Intrinsic.Control.CallSub(enableAll)
			GUI.frmAPAutomationIndex..SetFocus(1)
			
		F.Intrinsic.Control.Case("APBatch")
			F.Intrinsic.Control.CallSub(disableAll)
			F.Global.General.CallWrapperSync(50,"AP0041")
			F.Global.General.CallWrapperSync(50,"AP0081")
			F.Intrinsic.Control.CallSub(enableAll)
			GUI.frmAPAutomationIndex..SetFocus(1)
			
		F.Intrinsic.Control.Case("Info")
			F.Intrinsic.String.Build("Workflow ID: {0}{1}Document ID: {2}", V.Global.sWorkFlow.Trim, V.Ambient.NewLine, V.Global.sDOCID.Trim, V.Local.sMessage)
			F.Intrinsic.UI.Msgbox(V.Local.sMessage, "AI Details")

	F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.frmAPAutomationIndex_UserButtonClicked.End

Program.Sub.FormLearn_Unload.Start
F.Intrinsic.Control.Try

	GUI.FormLearn..Visible(False)
	GUI.frmAPAutomationIndex..SetFocus(1)

	F.Intrinsic.Control.CallSub(subPOSTDocumentRedownload)	
 	F.Intrinsic.Control.CallSub(subRowCellClick,"Datatable","dtAPInvQueue","Status","Queue","Gridview","gvAPInvQueue","GridControl","gsgcQueue","MyRowIndex",V.Global.iRowIndex)
	
	'Enable Controls
	F.Intrinsic.Control.CallSub(EnableAll)
	
	V.Global.iURLCounter.Set(0)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.FormLearn_Unload.End

Program.Sub.frmUnload.Start
F.Intrinsic.Control.Try

F.odbc.Connection!con6861.Close
F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.frmUnload.End

Program.Sub.Unload.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.ODBC.con6861.Exists, =, 1)
	F.ODBC.Connection!con6861.Close
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.Unload.End

Program.Sub.loadQueues.Start
'loading the datatable main
F.Intrinsic.Control.Try

	V.Local.sDocID.Declare
	'V.Local.sSQLBase.Declare("select ID, DOCID, RTRIM(DOCURL) DOCURL, RTRIM(IMGURL) IMGURL, RTRIM(VENDCODE) VENDCODE, RTRIM(VENDNAME) VENDNAME, RTRIM(INVCNUMB) INVCNUMB, INVCDATE, RTRIM(POHEAD) POHEAD, SUBTOTAL, FREIGHT, GSTTOTAL, GRSTOTAL, RTRIM(DOWNSTAT) DOWNSTAT, RTRIM(NOTES) NOTES, RTRIM(GSSSTATUS) GSSSTATUS, RTRIM(REJECTREASON) REJECTREASON, RTRIM(DOCSAVEDLOCATION) DOCSAVEDLOCATION, XREFCHECK, CREDITNOTE, PROCESSED, RTRIM(INVOICETYPE) INVOICETYPE, PROCESSEDDATE, DOWNLOADED_DATE, (select round(sum((received_amt - actual_amt)),2) as variance from GCG_6861_AP_SA X where x.docid=A.DOCID) AS VARIANCE, VARIANCE + GRSTOTAL INVVARTOTAL from GCG_6861_AP_HEAD {0} order by DOWNLOADED_DATE, PROCESSEDDATE")
	V.Local.sSQL.Declare(String)
	
	F.Intrinsic.Control.If(V.Args.Grid,=,"all","or",V.Args.grid,=,"queue")
		F.Intrinsic.Control.If(V.DataTable.dtAPInvQueue.Exists)
			'if datatable is already created, delete it
			F.Data.Datatable.DeleteRow("dtAPInvQueue")
			F.Data.Datatable.CreateFromSQL("dtAPTempLines","con6861","SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, DOCID, ID, POHEAD,NOTES, PROCESSEDDATE, DOWNLOADED_DATE FROM GCG_6861_AP_HEAD WHERE GssStatus ='queue' ORDER BY VendName, InvcNumb",TRUE)
			F.Data.Datatable.Merge("dtAPTempLines","dtAPInvQueue",false,1)
			F.Data.Datatable.Close("dtAPTempLines")
			
			F.Data.DataTable.AcceptChanges("dtAPInvQueue")
		F.Intrinsic.Control.Else
			F.Data.Datatable.CreateFromSQL("dtAPInvQueue","con6861","SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, DOCID,ID, POHEAD,NOTES, PROCESSEDDATE, DOWNLOADED_DATE FROM GCG_6861_AP_HEAD WHERE GssStatus ='queue' ORDER BY VendName, InvcNumb",TRUE)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Args.Grid,=,"all","or",V.Args.grid,=,"reject")
		F.Intrinsic.Control.If(V.DataTable.dtAPInvReject.Exists)
			'if datatable is already created, delete it
			F.Data.Datatable.DeleteRow("dtAPInvReject")
			F.Data.Datatable.CreateFromSQL("dtAPTempLines","con6861","SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES, PROCESSEDDATE, DOWNLOADED_DATE FROM GCG_6861_AP_HEAD WHERE GssStatus='rejected' ORDER BY VendName, InvcNumb")
			F.Data.Datatable.Merge("dtAPTempLines","dtAPInvReject",false,1)
			F.Data.Datatable.Close("dtAPTempLines")
			
			F.Data.DataTable.AcceptChanges("dtAPInvReject")
		F.Intrinsic.Control.Else
			F.Data.DataTable.CreateFromSQL("dtAPInvReject",con6861,"SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES, PROCESSEDDATE, DOWNLOADED_DATE FROM GCG_6861_AP_HEAD WHERE GssStatus='rejected' ORDER BY VendName, InvcNumb",TRUE)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Args.Grid,=,"all","or",V.Args.grid,=,"approve")
		F.Intrinsic.Control.If(V.DataTable.dtAPInvApproved.Exists)
			'if datatable is already created, delete it
			F.Data.Datatable.DeleteRow("dtAPInvApproved")
			F.Data.Datatable.CreateFromSQL("dtAPTempLines","con6861","SELECT DISTINCT INVCNUMB, VendName,VENDCODE,SUBTOTAL, GSTTOTAL, GRSTOTAL, (select round(sum((received_amt - actual_amt)),2) as 'variance' from GCG_6861_AP_SA X where x.docid=A.DOCID) AS 'VARIANCE', INVCDATE, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES, PROCESSEDDATE, DOWNLOADED_DATE FROM GCG_6861_AP_HEAD A WHERE GssStatus='approved' ORDER BY VendName, InvcNumb")
			F.Data.Datatable.Merge("dtAPTempLines","dtAPInvApproved",false,1)
			F.Data.Datatable.Close("dtAPTempLines")
			
			F.Data.DataTable.AcceptChanges("dtAPInvApproved")
		F.Intrinsic.Control.Else
			F.Data.DataTable.CreateFromSQL("dtAPInvApproved",con6861,"SELECT DISTINCT INVCNUMB, VendName,VENDCODE,SUBTOTAL, GSTTOTAL, GRSTOTAL, (select round(sum((received_amt - actual_amt)),2) as 'variance' from GCG_6861_AP_SA X where x.docid=A.DOCID) AS 'VARIANCE', INVCDATE,   DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES, PROCESSEDDATE, DOWNLOADED_DATE FROM GCG_6861_AP_HEAD A WHERE GssStatus='approved' ORDER BY VendName, InvcNumb",TRUE)
			F.Data.DataTable.AddExpressionColumn("dtAPInvApproved","InvVarTotal","float","Variance + GRSTOTAL")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Args.Grid,=,"all","or",V.Args.grid,=,"save")
		F.Intrinsic.Control.If(V.DataTable.dtAPInvSaved.Exists)
			'if datatable is already created, delete it
			F.Data.Datatable.DeleteRow("dtAPInvSaved")
			F.Data.Datatable.CreateFromSQL("dtAPTempLines","con6861","SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES, PROCESSEDDATE, DOWNLOADED_DATE FROM GCG_6861_AP_HEAD WHERE GssStatus='saved' ORDER BY VendName, InvcNumb")
			F.Data.Datatable.Merge("dtAPTempLines","dtAPInvSaved",false,1)
			F.Data.Datatable.Close("dtAPTempLines")
			
			F.Data.DataTable.AcceptChanges("dtAPInvSaved")
		F.Intrinsic.Control.Else
			F.Data.DataTable.CreateFromSQL("dtAPInvSaved",con6861,"SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES, PROCESSEDDATE, DOWNLOADED_DATE FROM GCG_6861_AP_HEAD WHERE GssStatus='saved' ORDER BY VendName, InvcNumb",TRUE)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.Args.Grid,=,"all","or",V.Args.grid,=,"process")
		F.Intrinsic.Control.If(V.DataTable.dtAPInvProcessed.Exists)
			'if datatable is already created, delete it
			F.Data.Datatable.DeleteRow("dtAPInvProcessed")
			F.Data.Datatable.CreateFromSQL("dtAPTempLines","con6861","SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES, PROCESSEDDATE, DOWNLOADED_DATE FROM GCG_6861_AP_HEAD WHERE GssStatus='processed' ORDER BY VendName, InvcNumb")
			F.Data.Datatable.Merge("dtAPTempLines","dtAPInvProcessed",false,1)
			F.Data.Datatable.Close("dtAPTempLines")
			
			F.Data.DataTable.AcceptChanges("dtAPInvProcessed")
		F.Intrinsic.Control.Else
			F.Data.DataTable.CreateFromSQL("dtAPInvProcessed",con6861,"SELECT DISTINCT VendName,VENDCODE,GSTTOTAL, SUBTOTAL, GRSTOTAL, INVCDATE, INVCNUMB, DocSavedLocation, GssStatus, RejectReason, DOCID,ID, POHEAD,NOTES, PROCESSEDDATE, DOWNLOADED_DATE FROM GCG_6861_AP_HEAD WHERE GssStatus='processed' ORDER BY VendName, InvcNumb",TRUE)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.loadQueues.End

Program.Sub.loadInvoiceDetail.Start
F.Intrinsic.Control.Try

	V.Local.i.Declare
	V.Local.sSQL.Declare
	V.Local.stempsql.Declare
	V.Local.sInvNum.Declare
	V.Local.sReceiver.Declare
	V.Local.sPOLine.Declare
	V.Local.fQty.Declare
	V.Local.sPONum.Declare
	V.Local.sVendor.Declare
	
	V.local.sInvNum.Set(V.Args.InvoiceNumber)
	V.Local.sPONum.Set(V.Args.PurchaseOrder)
	V.Local.sVendor.Set(V.Args.Vendor)
	
	'AP Invoices
	F.Intrinsic.Control.If(V.DataTable.dtAPInvoices.Exists)
		F.Data.DataTable.DeleteRow("dtAPInvoices")
		F.Data.DataTable.AcceptChanges("dtAPInvoices")
	F.Intrinsic.Control.Else
		F.Data.DataTable.Create("dtAPInvoices",true)
		F.Data.DataTable.AddColumn("dtAPInvoices","Invoice","String")
		F.Data.DataTable.AddColumn("dtAPInvoices","Vendor","String")
		F.Data.DataTable.AddColumn("dtAPInvoices","date_invoice","String")
		F.Data.DataTable.AddColumn("dtAPInvoices","purchase_order","String")
		F.Data.DataTable.AddColumn("dtAPInvoices","amt_invoice","Float")
		
		GUI.frmAPAutomationIndex.gsgcAPInvoices.DataSource("dtAPInvoices")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataView.dtAPAllInvoices!dvInvoiceSelected.Exists)
		F.Data.Dataview.Close("dtAPAllInvoices","dvInvoiceSelected")
	F.Intrinsic.Control.EndIf
	
	'Find invoices similar
	F.Intrinsic.String.Build("VENDOR LIKE '{0}'",V.Local.sVendor.PSQLFriendly, V.Local.sSQL)
	F.Data.DataView.Create("dtAPAllInvoices","dvInvoiceSelected",22,V.Local.sSQL,"")
	F.Data.DataView.ToDataTable("dtAPAllInvoices","dvInvoiceSelected","dtTempAP")
	F.Data.Datatable.Merge("dtTempAP","dtAPInvoices",false,1)
	F.Data.Datatable.Close("dtTempAP")
	F.Data.DataTable.AcceptChanges("dtAPInvoices")
	
	'PO Receiver and Job Operations Data
	F.Intrinsic.Control.If(V.DataTable.dtRecLines.Exists)
		F.Data.Datatable.DeleteRow("dtRecLines")
		F.Data.Datatable.AcceptChanges("dtRecLines")
	F.Intrinsic.Control.Else
		F.Data.DataTable.Create("dtRecLines",TRUE)
		F.Data.DataTable.AddColumn("dtRecLines","PART","String")
		F.Data.DataTable.AddColumn("dtRecLines","SelectLine","Boolean")
		F.Data.DataTable.AddColumn("dtRecLines","QTY_RECEIVED","Float")
		F.Data.DataTable.AddColumn("dtRecLines","QTY_RECEIVED_ORIGINAL","Float")
		F.Data.DataTable.AddColumn("dtRecLines","PO_LINE","String")
		F.Data.DataTable.AddColumn("dtRecLines","RECEIVED_AMT","Float")
		F.Data.DataTable.AddColumn("dtRecLines","ACTUAL_AMT","Float")
		F.Data.DataTable.AddColumn("dtRecLines","GL_ACCOUNT","String")
		F.Data.DataTable.AddColumn("dtRecLines","JOB","String")
		F.Data.DataTable.AddColumn("dtRecLines","SUFFIX","String")
		F.Data.DataTable.AddColumn("dtRecLines","SEQ","String")
		F.Data.DataTable.AddColumn("dtRecLines","LOCATION","String")
		F.Data.DataTable.AddColumn("dtRecLines","TAXABLE","Boolean")
		F.Data.DataTable.AddColumn("dtRecLines","TAX_CODE","String")
		F.Data.DataTable.AddColumn("dtRecLines","PURCHASE_ORDER","String")
		F.Data.DataTable.AddColumn("dtRecLines","RECEIVER_NO","String")
		F.Data.DataTable.AddColumn("dtRecLines","VAT_RULE","Integer")
		GUI.frmAPAutomationIndex.gsgcRecLineItems.DataSource("dtRecLines")
	F.Intrinsic.Control.EndIf	
	
	F.Intrinsic.Control.If(V.DataView.dtPOReceiver!dvPOSelected.Exists)
		F.Data.Dataview.Close("dtPOReceiver","dvPOSelected")
	F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.If(V.DataTable.JobOperationsDataTable.Exists)
		F.Data.Datatable.Close("JobOperationsDataTable")	
	F.Intrinsic.Control.EndIf
		
	'Get PO Data
	F.Intrinsic.Control.If(V.dataview.dtPOLines!dvVendorSelected.exists)
		F.Data.DataView.Close("dtPOLines","dvVendorSelected")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("VENDOR = '{0}'",V.Local.sVendor.PSQLFriendly,V.Local.sSQL)
	F.Data.DataView.Create("dtPOLines","dvVendorSelected",22,V.Local.sSQL,"")
	F.Intrinsic.Control.If(V.DataTable.dtPOSelLines.Exists)
		F.Data.Datatable.DeleteRow("dtPOSelLines")
		F.Data.Datatable.AcceptChanges("dtPOSelLines")
	F.Intrinsic.Control.Else
		F.Data.DataTable.Create("dtPOSelLines",true)
		F.Data.DataTable.AddColumn("dtPOSelLines","PURCHASE_ORDER","String")
		F.Data.DataTable.AddColumn("dtPOSelLines","RECORD_NO","String")
		F.Data.DataTable.AddColumn("dtPOSelLines","PART","String")
		F.Data.DataTable.AddColumn("dtPOSelLines","DESCRIPTION","String")
		F.Data.DataTable.AddColumn("dtPOSelLines","QTY_ORDER","Float")
		F.Data.DataTable.AddColumn("dtPOSelLines","UM_PURCHASING","String")
		F.Data.DataTable.AddColumn("dtPOSelLines","COST","Float")
		F.Data.DataTable.AddColumn("dtPOSelLines","EXTENSION","Float")
		F.Data.DataTable.AddColumn("dtPOSelLines","LOCATION","String")
		GUI.frmAPAutomationIndex.gsgcPOLines.DataSource("dtPOSelLines")
	F.Intrinsic.Control.EndIf
	
	F.Data.DataView.ToDataTable("dtPOLines","dvVendorSelected","dtPOTempLines")
	F.Data.Datatable.Merge("dtPOTempLines","dtPOSelLines",false,1)
	F.Data.Datatable.Close("dtPOTempLines")
	F.Data.DataTable.AcceptChanges("dtPOSelLines")
	F.Data.DataTable.RemoveColumn("dtPOSelLines","LOCATION")
	
	F.Intrinsic.Control.SelectCase(V.Args.Status.UCase)
		F.Intrinsic.Control.Caseany("QUEUE","REJECT")
			'Might need logic for job operations data table if PO Reference is blank
			F.Intrinsic.String.Build("PURCHASE_ORDER='{0}'",V.local.sPONum.PSQLFriendly,V.Local.sSQL)
			F.Data.DataView.Create("dtPOReceiver","dvPOselected",22,V.Local.sSQL,"")
			F.Data.DataView.ToDataTable("dtPOReceiver","dvPOSelected","dtTempPOR")
			F.Data.DataView.ToDataTable("dtPOReceiver","dvPOSelected","JobOperationsDataTable")
			F.Data.Datatable.Merge("dtTempPOR","dtRecLines",false,1)
			F.Data.Datatable.Close("dtTempPOR")
			'Compare what is in GCG_6861_SA and adjust quantity accordingly
			F.Intrinsic.Control.For(V.Local.i,V.DataTable.dtRecLines.RowCount--,0,-1)
				F.Intrinsic.Control.If(V.DataTable.dtRecLines(V.Local.i).RowState,<>,8)
					V.Local.sReceiver.Set(V.DataTable.dtRecLines(V.Local.i).RECEIVER_NO!fieldvaltrim)
					V.Local.sPOLine.Set(V.DataTable.dtRecLines(V.Local.i).PO_LINE!fieldvaltrim)
					F.Intrinsic.String.build("SELECT ifnull(QUANTITY,0) FROM GCG_6861_AP_SA WHERE POLINE='{0}' AND PORCVR='{1}'",V.Local.sPOLine,V.Local.sReceiver,V.Local.sSQL)
					F.ODBC.Connection!con6861.executeandreturn(V.Local.sSQL,V.Local.fQty)
					F.Intrinsic.Control.If(V.Local.fQty,<>,0)
						F.Intrinsic.Math.Sub(V.DataTable.dtRecLines(V.Local.i).QTY_RECEIVED!FIELDVAL,V.Local.fQty,V.Local.fQty)
						F.Data.DataTable.SetValue("dtRecLines",V.Local.i,"QTY_RECEIVED",V.Local.fQty)
						F.Intrinsic.Control.If(V.Local.fQty,=,0)
							F.Data.DataTable.DeleteRow("dtRecLines",V.Local.i)
							F.Data.DataTable.AcceptChanges("dtRecLines")
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.i)
			
		F.Intrinsic.Control.caseany("SAVE","APPROVE","PROCESS")
		
			'Might need logic for job operations data table if PO Reference is blank
			F.Intrinsic.String.Build("SELECT CONVERT(1,SQL_BIT) AS 'SelectLine', PART, QUANTITY AS 'QTY_RECEIVED', RECEIVED_AMT, ACTUAL_AMT, rTRIM(GLACCOUNT) AS GL_ACCOUNT, JOB, SUFFIX, SEQ, LOCATION, TAXABLEFLAG AS 'TAXABLE', TAXCODE AS 'TAX_CODE', PORCVR AS 'RECEIVER_NO', VAT AS 'VAT_RULE' FROM GCG_6861_AP_SA WHERE DocID='{0}'",V.Screen.frmAPAutomationIndex!txtDocID.text,V.Local.sSQL)
			F.Data.DataTable.CreateFromSQL("dtTempPOR","con6861",V.Local.sSQL)
			F.Data.Datatable.Merge("dtTempPOR","dtRecLines",false,1)
			F.Data.Datatable.Close("dtTempPOR")
			F.Data.DataTable.AcceptChanges("dtRecLines")
	F.Intrinsic.Control.EndSelect
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.loadInvoiceDetail.End

Program.Sub.getPOData.Start
F.Intrinsic.Control.Try

	F.Intrinsic.Control.If(V.DataTable.dtPOReceiver.Exists)
		F.Data.DataTable.Close("dtPOReceiver")
	F.Intrinsic.Control.EndIf
	F.Data.Datatable.CreateFromSQL("dtPOReceiver","con6861","Select CAST (0 AS BIT) as 'SelectLine', PART,  CAST (QTY_RECEIVED AS FLOAT) AS 'QTY_RECEIVED', cast (QTY_RECEIVED as FLOAT) as 'QTY_RECEIVED_ORIGINAL',PO_LINE, cast (EXTENDED_COST  as float) 'RECEIVED_AMT', cast (EXTENDED_COST  as float) 'ACTUAL_AMT',GL_ACCOUNT,JOB,SUFFIX,SEQUENCE as 'SEQ',LOCATION,TAXABLE, TAX_CODE, PURCHASE_ORDER, RECEIVER_NO, CAST (VAT_RULE As Integer) as 'VAT_RULE' FROM PO_RECEIVER WHERE flag_opn_itm_post='Y' AND ABS(QTY_RECEIVED) > ABS(QTY_INVOICED)",true)
	F.Data.DataView.Create("dtPOReceiver","dvPOReciver")
	
	F.Intrinsic.Control.If(V.DataTable.dtPOLines.exists)
		F.Data.DataTable.Close("dtPOLines")
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.CreateFromSQL("dtPOLines","con6861","select A.VENDOR, A.PURCHASE_ORDER, A.RECORD_NO, A.PART, A.DESCRIPTION, CAST(A.QTY_ORDER AS FLOAT) AS 'QTY_ORDER', A.UM_PURCHASING, CAST(A.COST AS FLOAT) AS 'COST', CAST(A.EXTENSION AS FLOAT) AS 'EXTENSION', A.LOCATION from V_PO_LINES A where A.FLAG_RECV_CLOSE<>'Y'",true)
	F.Data.DataView.Create("dtPOLines","dvPOLines")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.getPOData.End

Program.Sub.getAppData.Start
F.Intrinsic.Control.Try 'takes data from XXtr and downloads it into 6861 AP download table	

	V.Local.sxpath.Declare
	V.Local.sret.Declare
	V.Local.sDateTimeStamp.Declare
	V.Local.sKey.Declare
	V.Local.sWF.Declare
	V.Local.sFile.declare
	V.Local.lHand.Declare
	V.Local.sDoc.Declare
	V.Local.sDwn.Declare
	V.Local.sXML.Declare
	V.Local.sStat.Declare
	V.Local.sNode.Declare
	V.Local.bEOF.Declare
	V.Local.sDocID.Declare
	V.Local.sRowID.Declare
	V.Local.sDocURL.Declare
	V.Local.sImgURL.Declare
	V.Local.sFieldID.Declare
	V.Local.sFieldName.Declare
	V.Local.sResult.Declare
	V.Local.sExpr.Declare
	V.Local.sRow.Declare
	V.Local.sTaxCode.Declare
	V.Local.sDescLine.Declare
	V.Local.sGenrCode.Declare
	V.Local.sNotes.Declare
	V.Local.sPORecLine.Declare
	V.Local.sPOHead.Declare
	V.Local.sPOLine.Declare
	V.Local.sPORcvr.Declare
	V.Local.sGLCode.Declare
	V.Local.sItemCode.Declare
	V.Local.sVendName.Declare
	V.Local.sInvcNumb.Declare
	V.Local.sInvcDate.Declare
	V.Local.fSubTotal.Declare
	V.Local.sSubTotal.Declare
	V.Local.fGSTValue.Declare
	V.Local.sGSTValue.Declare
	V.Local.fGrossVal.Declare
	V.Local.sGrossVal.Declare
	V.Local.fQuantity.Declare
	V.Local.sQuantity.Declare
	V.Local.fUnitCost.Declare
	V.Local.sUnitCost.Declare
	V.Local.fExtension.Declare
	V.Local.sExtension.Declare
	V.Local.sPORecKey.Declare
	V.Local.sSQL.Declare
	V.Local.iVar.Declare
	V.Local.iRow.Declare
	V.Local.iPOReV.Declare
	V.Local.iGL.Declare
	V.Local.sRevPad.Declare
	V.Local.sAdminDetailsFile.Declare
	V.Local.sApiID.Declare
	V.Local.sWorkflowID.Declare
	V.Local.sFileName.Declare
	V.Local.sVendorNo.Declare
	V.Local.sVat.Declare
	V.Local.sLoc.Declare
	V.Local.sBranch.Declare
	V.Local.sPackList.Declare
	V.Local.sVoucher.Declare
	V.Local.sBookUseTax.Declare
	V.Local.sDocSaveLocation.Declare
	V.Local.sInsertHeaderSQL.Declare
	V.Local.sInsertLinesSQL.Declare
	V.Local.sBuyer.Declare
	V.Local.sXrefCheck.Declare
	V.Local.sPDFFile.Declare
	V.Local.sVarAcct.Declare
	V.Local.iHID.Declare
	V.Local.bIsNumb.Declare
	V.Local.bIsDate.Declare
	V.Local.sTransferredData.Declare(String)
	V.Local.sError.Declare
	V.Local.iRet.Declare
	V.Local.sLocationtesting.Declare
	
	'Grab Receiver Lines & PO Lines in Master Table
	F.Intrinsic.Control.CallSub(getPOData)

	'Invoices are Next
	F.Intrinsic.Control.If(V.DataTable.dtAPAllInvoices.Exists)
		F.Data.DataTable.Close("dtAPAllInvoices")
		F.Data.DataTable.Close("dtAPAllInvoicesTemp")
		F.Data.DataView.Close("dtAPAllInvoicesTemp","dvAPAllInvoicesTemp")
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.CreateFromSQL("dtAPAllInvoicesTemp","con6861","SELECT LTrim(RTrim(VENDOR))+LTrim(RTrim(INVOICE)) As VENDINV, invoice, PURCHASE_ORDER, Vendor, IF (SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,5 ,2 )<= '99' AND SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,5 ,2 )>= '00' AND SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,1 ,2 )<= '12' AND SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,1 ,2 )>= '01' AND SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,3 ,2 )<= '31' AND SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,3 ,2 )>= '01' ,IF (SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,5 ,2 )< '80' ,CONVERT ('20' +SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,5 ,2 )+'-' +SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,1 ,2 )+'-' +SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,3 ,2 ),SQL_DATE ),CONVERT ('19' +SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,5 ,2 )+'-' +SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,1 ,2 )+'-' +SUBSTRING (AP_OPEN_ITEMS .DATE_INVOICE ,3 ,2 ),SQL_DATE )),CONVERT ('1900-01-01' ,SQL_DATE ))DATE_INVOICE, AMT_INVOICE FROM AP_OPEN_ITEMS AP_OPEN_ITEMS ORDER BY AP_OPEN_ITEMS .VENDOR",true)
	F.Data.DataTable.AddColumn("dtAPAllInvoicesTemp","ZERO",Float,0.0)	
	F.Data.Dictionary.CreateFromSQL("dZero","con6861","SELECT LTrim(RTrim(VENDOR))+LTrim(RTrim(INVOICE)) As VENDINV,SUM(CASE BATCH_CODE WHEN '11' THEN -AMT_TRANSACTION WHEN '12' THEN -AMT_TRANSACTION ELSE AMT_TRANSACTION END) FROM V_AP_OPEN_ITEMS GROUP BY VENDOR,INVOICE;",32,true)	
	F.Data.Dictionary.SetDefaultReturn("dZero",0.0)
	F.Data.DataTable.FillFromDictionary("dtAPAllInvoicesTemp","dZero","VENDINV","ZERO")
	F.Data.Dictionary.Close("dZero")
	F.Data.DataView.Create("dtAPAllInvoicesTemp","dvAPAllInvoicesTemp",22,"ZERO <> 0","")
	F.Data.DataView.ToDataTable("dtAPAllInvoicesTemp","dvAPAllInvoicesTemp","dtAPAllInvoices",TRUE)
	F.Data.DataTable.RemoveColumn("dtAPAllInvoices","ZERO")
	F.Data.DataTable.RemoveColumn("dtAPAllInvoices","VENDINV")
	F.Data.DataView.Create("dtAPAllInvoices","dvAPAllInvoices")
	
	F.ODBC.Connection!con6861.executeandreturn("SELECT RTRIM(TEXT1) FROM OP_HEADER WHERE ID='400291' AND SEQUENCE='0000'",V.Local.sVarAcct)
	GUI.frmAPAutomationIndex.txtEVarianceAcct.Text(V.Local.sVarAcct)
	
	F.Intrinsic.Control.If(V.DataTable.dtApp.Exists)
		F.Data.DataTable.Close("dtApp")
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.Create("dtApp",true)
	F.Data.DataTable.AddColumn("dtapp","Part","String")
	F.Data.DataTable.AddColumn("dtapp","RowID","String")
	F.Data.DataTable.AddColumn("dtapp","Processed","Boolean")
	F.Data.DataTable.AddColumn("dtapp","TaxableFlag","Boolean")
	F.Data.DataTable.AddColumn("dtapp","POHead","String")
	F.Data.DataTable.AddColumn("dtapp","Line","String")
	F.Data.DataTable.AddColumn("dtapp","Rcvr","String")
	F.Data.DataTable.AddColumn("dtapp","PORecLine","String")
	F.Data.DataTable.AddColumn("dtapp","VendCode","String")
	F.Data.DataTable.AddColumn("dtapp","DescLine","String")
	F.Data.DataTable.AddColumn("dtapp","GLAccount","String")
	F.Data.DataTable.AddColumn("dtapp","DOCID","String")
	F.Data.DataTable.AddColumn("dtapp","DOCURL","String")
	F.Data.DataTable.AddColumn("dtapp","VendName","String")
	F.Data.DataTable.AddColumn("dtapp","INVCNUMB","String")
	F.Data.DataTable.AddColumn("dtapp","InvcDate","String")
	F.Data.DataTable.AddColumn("dtapp","SubTotal","Float")
	F.Data.DataTable.AddColumn("dtapp","GstTotal","Float")
	F.Data.DataTable.AddColumn("dtapp","GrsTotal","Float")
	F.Data.DataTable.AddColumn("dtapp","ImgURL","String")
	F.Data.DataTable.AddColumn("dtapp","DownStat","String")
	F.Data.DataTable.AddColumn("dtapp","DocSavedLocation","String")
	F.Data.DataTable.AddColumn("dtapp","XRefCheck","String")
	F.Data.DataTable.AddColumn("dtapp","Notes","String")
	F.Data.DataTable.AddColumn("dtapp","TaxCode","String")
	F.Data.DataTable.AddColumn("dtapp","UnitCost","Float")
	F.Data.DataTable.AddColumn("dtapp","Quantity","Float")
	F.Data.DataTable.AddColumn("dtapp","Extension","Float")
	F.Data.DataTable.AddColumn("dtapp","DOWNLOADED_DATE","DATE")
	
	F.Intrinsic.String.Format(V.Ambient.Now,"YYYYMMDDHHNNSS",V.Local.sDateTimeStamp)
	F.Intrinsic.String.concat(V.Caller.TempDir,"\API_Data_",V.Local.sDateTimeStamp,".xml",V.Local.sFile)
	F.Intrinsic.String.Build("{{0}api_key{0} : {0}{1}{0}, {0}api_download_status{0} : {0}active{0},  {0}workflow_id{0} : {0}{2}{0}, {0}any_user_documents{0} : {0}1{0}, {0}document_status{0} : {0}output{0}, {0}detailed{0} : {0}1{0}, {0}items_per_page{0} : {0}1000{0} }",V.Ambient.DblQuote, V.Global.sAPIKey, V.Global.sWorkFlow,V.Local.sKey)
	
	F.Communication.REST.SetProperty("ContentType","application/json")
	F.Communication.REST.SetProperty("PostData",V.Local.sKey)
	F.Communication.REST.Post("https://api-app.xtracta.com/v1/documents")
	F.Communication.REST.ReadProperty("TransferredData",V.Local.sret)
	F.Intrinsic.File.String2File(V.Local.sFile,V.Local.sret)
	
	F.Intrinsic.String.Build("Doc{0}",0,V.Local.sDoc)
	F.Global.XML.LoadDocument(V.local.sdoc,V.local.sFile,False,False,False,False)
	F.global.XML.Query(V.local.sdoc,"set1","//*")
	'loop through node set
	F.Intrinsic.Control.dountil(V.local.bEOF,=,True)
		'Get the node name
		F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","nodeName",V.local.sret)
		
		F.Intrinsic.Control.If(V.Local.sret.Trim,=,"document_id")
			V.Local.iRow.Set(0)
			F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sDocID)
		F.Intrinsic.Control.ElseIf(V.Local.sret.Trim,=,"api_download_status")
			F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sDwn)
		F.Intrinsic.Control.ElseIf(V.Local.sret.Trim,=,"document_url")
			F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sDocURL)
		F.Intrinsic.Control.ElseIf(V.Local.sret.Trim,=,"image_url")
			F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sImgURL)
		F.Intrinsic.Control.ElseIf(V.Local.sret.Trim,=,"field_name")
			F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sFieldName)
			F.Intrinsic.Control.If(V.Local.sFieldName.Trim,=,"PO Header #")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sPOHead)
				F.Intrinsic.Control.For(V.Local.iPORev,0,10,1)
					F.Intrinsic.String.LPad(V.Local.iPORev,"0",2,V.Local.sRevPad)
					F.Intrinsic.String.Concat("-",V.Local.sRevPad,V.Local.sRevPad)
					F.Intrinsic.String.Replace(V.Local.sPOHead,V.Local.sRevPad,"",V.Local.sPOHead)
				F.Intrinsic.Control.Next(V.local.iPORev)
				F.Intrinsic.String.LPad(V.Local.sPOHead,"0",7,V.Local.sPOHead)
				F.Intrinsic.Control.If(V.Local.sPOHead,=,"0000000")
					V.Local.sPOHead.Set("")
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Item Code")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sItemCode)
				
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.Elseif(V.Local.sFieldName.Trim,=,"Description")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sDescLine)
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.Elseif(V.Local.sFieldName.Trim,=,"Quantity")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sQuantity)
				F.Intrinsic.Math.IsNumeric(V.Local.sQuantity,V.Local.bIsNumb)
				F.Intrinsic.Control.If(V.Local.bIsNumb)
					V.Local.fQuantity.Set(V.Local.sQuantity)
				F.Intrinsic.Control.EndIf
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Supplier Name")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sVendName)
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Invoice Number")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sInvcNumb)
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Invoice Date")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sInvcDate)
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Sub Total")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sSubTotal)
				F.Intrinsic.String.Replace(V.Local.sSubTotal,V.Global.sCurrencySymbol,"",V.Local.sSubTotal)
				F.Intrinsic.Math.IsNumeric(V.Local.sSubTotal,V.Local.bIsNumb)
				F.Intrinsic.Control.If(V.Local.bIsNumb)
					V.Local.fSubTotal.Set(V.Local.sSubTotal)
				F.Intrinsic.Control.EndIf
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			'F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"GST Total")
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Tax Total")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sGSTValue)
				F.Intrinsic.String.Replace(V.Local.sGSTValue,V.Global.sCurrencySymbol,"",V.Local.sGSTValue)
				F.Intrinsic.Math.IsNumeric(V.Local.fGSTValue,V.Local.bIsNumb)
				F.Intrinsic.Control.If(V.Local.bIsNumb)
					V.Local.fGSTValue.Set(V.Local.sGSTValue)
				F.Intrinsic.Control.EndIf
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Gross Total")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sGrossVal)
				F.Intrinsic.String.Replace(V.Local.sGrossVal,V.Global.sCurrencySymbol,"",V.Local.sGrossVal)
				F.Intrinsic.Math.IsNumeric(V.Local.sGrossVal,V.Local.bIsNumb)
				F.Intrinsic.Control.If(V.Local.bIsNumb)
					V.Local.fGrossVal.Set(V.Local.sGrossVal)
				F.Intrinsic.Control.EndIf
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Unit Cost")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sUnitCost)
				F.Intrinsic.String.Replace(V.Local.sUnitCost,V.Global.sCurrencySymbol,"",V.Local.sUnitCost)
				F.Intrinsic.Math.IsNumeric(V.Local.sUnitCost,V.Local.bIsNumb)
				F.Intrinsic.Control.If(V.Local.bIsNumb)
					V.Local.fUnitCost.Set(V.Local.sUnitCost)
				F.Intrinsic.Control.EndIf
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.ElseIf(V.Local.sFieldName.Trim,=,"Notes")
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sNotes)
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
			F.Intrinsic.Control.Elseif(V.Local.sFieldName.Trim,=,"Extension")
			
				F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
				F.global.xml.ReadNodeSetValue(V.local.sdoc,"set1","text",V.local.sExtension)
				F.Intrinsic.String.Replace(V.Local.sExtension,V.Global.sCurrencySymbol,"",V.Local.sExtension)
				F.Intrinsic.Math.ConvertToFloat(V.Local.sExtension,V.Local.fExtension)
				F.Global.XML.Back(V.Local.sDoc,"set1",V.Local.bEOF)
	
				F.Intrinsic.Math.Add(V.Local.iRow,1,V.Local.iRow)
				F.Intrinsic.String.LPad(V.Local.iRow,"0",3,V.Local.sRowID)
				F.Intrinsic.String.Concat(V.Local.sDocID,V.Local.sRowID,V.Local.sRowID)
				F.Intrinsic.String.Build("RowID={0}",V.Local.sRowID,V.Local.sExpr)
				F.Data.DataTable.Select("dtApp",V.Local.sExpr,V.Local.sRow)
				
				V.local.sVendName.Set(V.Local.sVendName.UCase)
				'Add row to database
				F.Intrinsic.Control.If(V.Local.sRow,=,"***NORETURN***")
					'Omit Row ID
					F.IntrinsiC.Control.If(V.Local.sInvcDate.Trim,=,"")
						V.Local.sInvcDate.Set("1900-01-01")
					F.Intrinsic.Control.EndIf
					
					F.Intrinsic.String.Replace(V.Local.sInvcDate,"Time","",V.Local.sInvcDate)
					F.Intrinsic.Date.IsDate(V.Local.sInvcDate,V.Local.bIsDate)
					F.Intrinsic.Control.If(V.Local.bIsDate,=,false)
						F.Intrinsic.String.Format(V.Ambient.Date,"YYYY-MM-DD",V.Local.sInvcDate)
					F.Intrinsic.Control.EndIf
					
					F.Data.DataTable.AddRow("dtApp","Part",V.Local.sItemCode,"RowID",V.Local.sRowID,"Processed",False,"TAXABLEFLAG",True,"POHead",V.Local.sPOHead,"lINE",V.Local.sPOLine,"RCVR",V.Local.sPORcvr, "PORECLine",V.Local.sPORecLine,"DescLine",V.Local.sDescLine,"Quantity",V.Local.fQuantity,"UnitCost",V.Local.fUnitCost,"Extension",V.Local.fExtension,"GLAccount",V.Local.sGLCode, "DocID",V.Local.sdocid,"DocURL",V.Local.sDocURL,"VendName",V.Local.sVendName,"InvcNumb",V.Local.sInvcNumb,"InvcDate",V.Local.sInvcDate,"SubTotal",V.Local.fSubTotal,"GstTotal",V.Local.fGSTValue,"GrsTotal",V.Local.fGrossVal,"ImgURL",V.Local.sImgURL,"DownStat",V.Local.sDwn,"Notes",V.local.sNotes, "DOWNLOADED_DATE", V.Ambient.Date)
					
					'populated in zensql ^
					F.Intrinsic.Control.CallSub(getAdditionalVendorData,"RowID",V.Local.sRowID,"POHead",V.Local.sPOHead,"POLine",V.Local.sPOLine,"PORcvr",V.Local.sPORcvr,"VendName",V.Local.sVendName)
					
					'creating the file name "InvoiceNumber-DocID"
					F.Intrinsic.String.Concat("select TOP 1 VENDORCODE from GCG_6861_AP_XREF WHERE VENDORNAME = '", V.Local.sVendName.PSQLFriendly ,"'",V.local.sSQL)
					F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sVendorNo)
				
					F.Intrinsic.String.StripCharacters(V.Local.sInvcNumb, V.Local.sFileName)
					F.Intrinsic.String.Concat(V.Local.sFileName,"-", V.Local.sDocID,V.Local.sFileName)
					F.Intrinsic.Control.CallSub(subDownloadAPInvoices,"SupplierName",V.Local.sVendName,"RowID",V.Local.sRowID,"VendorNo", V.Local.sVendorNo, "FileName", V.Local.sFileName, "DocURL", V.Local.sDocURL)
					F.Intrinsic.Variable.ArgToVar("rFilePath",V.Local.sPDFFile)
					F.Intrinsic.Variable.ArgToVar("rPDFFile",V.Local.sPDFFile)
					F.Intrinsic.Variable.ArgToVar("rXrefCheck",V.Local.sXrefCheck)
					F.Intrinsic.Variable.ArgToVar("rTaxCode",V.Local.sTaxCode)
	
					'Insert Header
					F.Intrinsic.String.Build("SELECT ID FROM GCG_6861_AP_HEAD WHERE DOCID={0}",V.Local.sDocID,V.Local.sSQL)
					F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.iHID)
					F.Intrinsic.Control.If(V.Local.iHID,=,0)
						V.Local.sLocationtesting.Set("1")

						V.Local.sSQL.Set("INSERT INTO GCG_6861_AP_HEAD VALUES ({0},'{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}','{17}','{18}','{19}','{20}','{21}','{22}', '{23}')")					
						F.Intrinsic.String.Build(V.Local.sSQL,V.Local.sDocID,V.Local.sDocURL,V.Local.sImgURL,V.Local.sVendorNo,V.Local.sVendName.PSQLFriendly,V.Local.sInvcNumb.PSQLFriendly,V.Local.sInvcDate.PervasiveDate,V.Local.sPOHead.PSQLFriendly,V.Local.fSubTotal,0,V.Local.fGSTValue,V.Local.fGrossVal,V.Local.sDwn,V.Local.sNotes,"queue","",V.Local.sPDFFile.PSQLFriendly,0,0,0,0,"","1900-10-10", V.Ambient.Date.PervasiveDate,V.Local.sSQL)
						F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
						
					F.Intrinsic.Control.EndIf
					
					'Insert Line
					F.Intrinsic.String.Build("SELECT ID FROM GCG_6861_AP_HEAD WHERE DOCID={0}",V.Local.sDocID,V.Local.sSQL)
					F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.iHID)
					F.Intrinsic.Control.If(V.Local.iHID,<>,0)
						V.Local.sLocationtesting.Set("2")
						V.Local.sSQL.Set("INSERT INTO GCG_6861_AP_LINES VALUES ({0},'{1}','{2}','{3}','{4}','{5}','{6}','{7}','{8}','{9}','{10}','{11}','{12}','{13}','{14}','{15}','{16}','{17}',{18})")
						F.Intrinsic.String.Build(V.Local.sSQL,V.Local.iHID,V.Local.sRowID,"",V.Local.sPOLine,V.Local.sPORcvr,V.Local.sGLCode,V.Local.fQuantity,V.Local.fUnitCost,V.Local.fExtension,V.Local.sPORecLine,"","",V.Local.sDescLine.PSQLFriendly,"","","","",1,0,V.Local.sSQL)
						F.ODBC.Connection!con6861.Execute(V.Local.sSQL)
					F.Intrinsic.Control.EndIf
					
					'Archive the document
					F.Intrinsic.Control.CallSub(archiveDocument,"DocID",V.Local.sDocID)
				F.Intrinsic.Control.EndIf	
				
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.EndIf
		F.global.xml.next(V.local.sdoc,"set1",V.local.bEOF)
	F.Intrinsic.Control.loop	
	'close node set
	F.global.xml.closeSet(V.local.sdoc,"set1")
	F.global.xml.CloseDocument(V.local.sdoc)
	
	'Make everything UCase
	F.ODBC.Connection!con6861.Execute("UPDATE GCG_6861_AP_HEAD SET VENDNAME=UCASE(VENDNAME)")
	
	'Soft update vendor codes where vendor name exists and no vendor code
	F.ODBC.Connection!con6861.execute("UPDATE GCG_6861_AP_HEAD SET VENDCODE=(SELECT VENDORCODE FROM GCG_6861_AP_XREF Z WHERE GCG_6861_AP_HEAD.VENDNAME=Z.VENDORNAME)  WHERE VENDCODE='' AND VENDNAME<>''")
	
F.Intrinsic.Control.Catch
	V.Local.sError.Set(V.Ambient.ErrorDescription)
	
	F.Communication.REST.ReadProperty("TransferredData",V.Local.sTransferredData)
	
	F.Intrinsic.String.Instr(V.Local.sError,"404",V.Local.iRet)
	F.Intrinsic.Control.If(V.Local.iRet,>,0)
		F.Intrinsic.UI.SleepMs(1)
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.CallSub(ErrorMessage)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndTry
Program.Sub.getAppData.End

Program.Sub.getAdditionalVendorData.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sSearch.Declare
	V.Local.sVendCode.Declare
	V.Local.sPart.Declare
	V.Local.sPartDesc.Declare
	V.Local.sPackList.Declare
	V.Local.bTaxable.Declare
	V.Local.bBookUseTax.Declare
	V.Local.sTaxCode.Declare
	V.Local.sVatRule.Declare
	V.Local.sJob.Declare
	V.Local.sSuffix.Declare
	V.Local.sSequence.Declare
	V.Local.sLocation.Declare
	V.Local.sCostType.Declare
	V.Local.sPurchaseUM.Declare
	V.Local.sBranch.Declare
	V.Local.sBuyer.Declare
	V.Local.sVoucher.Declare
	V.Local.iRet.Declare
	
	'Get row
	F.Intrinsic.String.Build("RowID={0}",V.Args.RowID,V.Local.sSearch)
	F.Data.DataTable.Select("dtApp",V.Local.sSearch,V.Local.iRet)
	
	'Find if there is a cross reference
	F.Intrinsic.String.Build("SELECT TOP 1 VendorCode FROM GCG_6861_AP_XREF WHERE VendorName='{0}'",V.Args.VendName.PSQLFriendly,V.Local.sSQL)
	F.ODBC.Connection!con6861.ExecuteAndReturn(V.Local.sSQL,V.Local.sVendCode)
	
	'Set the data values in the datatable
	F.Data.DataTable.SetValue("dtApp",V.Local.iRet,"VendCode",V.Local.sVendCode)
	'"TaxCode",V.local.sTaxCode,"VatRule",V.Local.sVatRule,"Job",V.local.sJob,"Suffix",V.Local.sSuffix,"Seq",V.Local.sSequence,"Location",V.Local.sLocation,"PurchaseUM",V.Local.sPurchaseUM,"Buyer",V.Local.sBuyer,"Branch",V.Local.sBranch,"Taxable",V.Local.bTaxable,"BookUseTax",V.Local.bBookUseTax)

	'^^^ finding vendor file and pulling in taxinfo ect.

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.getAdditionalVendorData.End

Program.Sub.setGSSVendorFormatColour.Start
F.Intrinsic.Control.Try

	V.Local.bVendorCheck.Declare
	
	V.Local.bVendorCheck.Set(V.Args.VendorCheck)
	F.Intrinsic.Control.If(V.Local.bVendorCheck,=,True)
		GUI.frmAPAutomationIndex.lblCreateVendor.Caption("Vendor Found")
		GUI.frmAPAutomationIndex.lblCreateVendor.Visible(True)
		GUI.frmAPAutomationIndex.lblCreateVendor.ForeColor(V.Enum.ThemeColors!ColorGreen)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.lblCreateVendor.Caption("Vendor Not Found")
		GUI.frmAPAutomationIndex.lblCreateVendor.Visible(True)
		GUI.frmAPAutomationIndex.lblCreateVendor.ForeColor(V.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.setGSSVendorFormatColour.End

Program.Sub.setGSSXRefFormatColourLink.Start
F.Intrinsic.Control.Try

	V.Local.inothing.Declare
	V.Local.sNewLink.Declare
	V.Local.sLinkTemp.Declare
	V.Local.sSQLUpdatePath.Declare
	V.Local.sVendCode.Declare
	V.Local.sSupplierName.Declare
	V.Local.bXRefCheck1.Declare
	V.Local.bXRefCheck.Declare
	
	V.Local.sSupplierName.Set(V.Args.SupplierName)
	V.Local.sVendCode.Set(V.Args.VendCode)
	V.Local.bXRefCheck1.Set(V.Args.XRefCheck1)
	V.Local.bXRefCheck.Set(V.Args.XRefCheck)
	
	F.Intrinsic.Control.If(V.Local.bXRefCheck1,=,True) 'NEEDS TO CHECK WHAT XREF CHECK IS
		GUI.frmAPAutomationIndex.lblXRefConnect.Caption("XRef Found")
		GUI.frmAPAutomationIndex.lblXRefConnect.ForeColor(V.Enum.ThemeColors!ColorGreen)
		GUI.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(false)
	F.Intrinsic.Control.Else
		GUI.frmAPAutomationIndex.lblXRefConnect.Caption("XRef Not Found")
		GUI.frmAPAutomationIndex.cmdSupplierXRefSearch.Enabled(True)
		GUI.frmAPAutomationIndex.lblXRefConnect.Visible(True)
		GUI.frmAPAutomationIndex.lblXRefConnect.ForeColor(V.Enum.ThemeColors!ColorRed)
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.setGSSXRefFormatColourLink.End

Program.Sub.setProperties.Start
F.Intrinsic.Control.Try

	V.Local.sSQL.Declare(String)
	V.Local.sRet.Declare(String)
	
	'Tabs
	'Tab Invoice Queue
	GUI.frmAPAutomationIndex.gsgcQueue.AddGridviewFromDatatable("gvAPInvQueue","dtAPInvQueue")
	
	GUI.frmAPAutomationIndex.gsgcQueue.SetGridviewProperty("gvAPInvQueue", V.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetGridviewProperty("gvAPInvQueue", V.Enum.GridViewPropertyNames!Editable, False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetGridviewProperty("gvAPInvQueue", V.Enum.GridViewPropertyNames!ReadOnly, True)
	
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "ID", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "POHEAD", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "VendName","HeaderFontBold",True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "InvcNumb","HeaderFontBold",True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DOWNLOADED_DATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "NOTES", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "VENDCODE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GSTTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "SUBTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GRSTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "INVCDATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DocSavedLocation", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GssStatus", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "PROCESSEDDATE", "HeaderFontBold", True)
	
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DocSavedLocation","Visible", False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GSTTOTAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DOCID", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "SUBTOTAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GRSTOTAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "INVCDATE", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GssStatus", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "VENDCODE", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "ID", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "PROCESSEDDATE","Visible",False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DOWNLOADED_DATE", "Visible", True)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "NOTES", "Visible", False)
	
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "ID", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GssStatus", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DOCID", "AllowShowHide", False)
	
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "ID", "Caption", "ID")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "POHEAD", "Caption", "PO")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "VendName","Caption","Vendor")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "InvcNumb","Caption","Invoice")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DOWNLOADED_DATE", "Caption", "Received")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "NOTES", "Caption", "Notes")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "VENDCODE", "Caption", "Vendor ID")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GSTTOTAL", "Caption", "Tax")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "SUBTOTAL", "Caption", "Subtotal")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GRSTOTAL", "Caption", "Total")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "INVCDATE", "Caption", "Invoice Date")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DocSavedLocation", "Caption", "Document")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GssStatus", "Caption", "Status")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "PROCESSEDDATE", "Caption", "Processed")
	
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "DOWNLOADED_DATE", "DisplayCustomDateTime", "d")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "PROCESSEDDATE", "DisplayCustomDateTime", "d")
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "INVCDATE", "DisplayCustomDateTime", "d")
	
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GSTTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "SUBTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcQueue.SetColumnProperty("gvAPInvQueue", "GRSTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	
	GUI.frmAPAutomationIndex.gsgcQueue.MainView("gvAPInvQueue")
	
	'Tab Invoice Rejected
	GUI.frmAPAutomationIndex.gsgcReject.AddGridviewFromDatatable("gvAPInvRejected","dtAPInvReject")
	
	GUI.frmAPAutomationIndex.gsgcReject.SetGridviewProperty("gvAPInvRejected", V.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	
	GUI.frmAPAutomationIndex.gsgcReject.SetGridviewProperty("gvAPInvRejected", V.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	GUI.frmAPAutomationIndex.gsgcReject.SetGridviewProperty("gvAPInvRejected", V.Enum.GridViewPropertyNames!Editable, False)
	GUI.frmAPAutomationIndex.gsgcReject.SetGridviewProperty("gvAPInvRejected", V.Enum.GridViewPropertyNames!ReadOnly, True)
	
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "ID", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "POHEAD", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "VendName","HeaderFontBold",True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "InvcNumb","HeaderFontBold",True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DOWNLOADED_DATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "NOTES", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "VENDCODE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GSTTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "SUBTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GRSTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "INVCDATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DocSavedLocation", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GssStatus", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "PROCESSEDDATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "RejectReason", "HeaderFontBold", True)
	
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DocSavedLocation","Visible", False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GSTTOTAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DOCID", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "SUBTOTAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GRSTOTAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "INVCDATE", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GssStatus", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "VENDCODE", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "ID", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "PROCESSEDDATE","Visible",False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DOWNLOADED_DATE", "Visible", True)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "NOTES", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "RejectReason", "Visible", False)
	
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "ID", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GssStatus", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DOCID", "AllowShowHide", False)
	
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "ID", "Caption", "ID")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "POHEAD", "Caption", "PO")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "VendName","Caption","Vendor")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "InvcNumb","Caption","Invoice")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DOWNLOADED_DATE", "Caption", "Received")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "NOTES", "Caption", "Notes")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "VENDCODE", "Caption", "Vendor ID")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GSTTOTAL", "Caption", "Tax")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "SUBTOTAL", "Caption", "Subtotal")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GRSTOTAL", "Caption", "Total")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "INVCDATE", "Caption", "Invoice Date")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DocSavedLocation", "Caption", "Document")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GssStatus", "Caption", "Status")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "PROCESSEDDATE", "Caption", "Processed")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "RejectReason", "Caption", "Reject Reason")
	
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "DOWNLOADED_DATE", "DisplayCustomDateTime", "d")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "PROCESSEDDATE", "DisplayCustomDateTime", "d")
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "INVCDATE", "DisplayCustomDateTime", "d")
	
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GSTTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "SUBTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcReject.SetColumnProperty("gvAPInvRejected", "GRSTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	
	GUI.frmAPAutomationIndex.gsgcReject.MainView("gvAPInvRejected")
	
	'Tab Invoice Approved
	GUI.frmAPAutomationIndex.gsgcApproved.AddGridviewFromDatatable("gvAPInvApproved","dtAPInvApproved")
	
	GUI.frmAPAutomationIndex.gsgcApproved.SetGridviewProperty("gvAPInvApproved", V.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetGridviewProperty("gvAPInvApproved", V.Enum.GridViewPropertyNames!Editable, False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetGridviewProperty("gvAPInvApproved", V.Enum.GridViewPropertyNames!ReadOnly, True)
	
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "ID", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "POHEAD", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VendName","HeaderFontBold",True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvcNumb","HeaderFontBold",True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DOWNLOADED_DATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "NOTES", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VENDCODE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GSTTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "SUBTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GRSTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "INVCDATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DocSavedLocation", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GssStatus", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "PROCESSEDDATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "RejectReason", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VARIANCE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "POHEAD", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvVarTotal", "HeaderFontBold", True)
	
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DocSavedLocation","Visible", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GSTTOTAL", "Visible", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DOCID", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "SUBTOTAL", "Visible", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GRSTOTAL", "Visible", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "INVCDATE", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GssStatus", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VENDCODE", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "ID", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "PROCESSEDDATE","Visible", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DOWNLOADED_DATE", "Visible", True)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "NOTES", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "RejectReason", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VARIANCE", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "POHEAD", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvVarTotal", "Visible", False)
	
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "ID", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GssStatus", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DOCID", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "RejectReason", "AllowShowHide", False)
	
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "ID", "Caption", "ID")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "POHEAD", "Caption", "PO")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VendName","Caption","Vendor")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvcNumb","Caption","Invoice")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DOWNLOADED_DATE", "Caption", "Received")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "NOTES", "Caption", "Notes")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VENDCODE", "Caption", "Vendor ID")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GSTTOTAL", "Caption", "Tax")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "SUBTOTAL", "Caption", "Subtotal")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GRSTOTAL", "Caption", "Total")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "INVCDATE", "Caption", "Invoice Date")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DocSavedLocation", "Caption", "Document")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GssStatus", "Caption", "Status")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "PROCESSEDDATE", "Caption", "Processed")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "RejectReason", "Caption", "Reject Reason")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VARIANCE", "Caption", "Variance")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "POHEAD", "Caption", "PO")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvVarTotal", "Caption", "Total + Variance")
	
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "DOWNLOADED_DATE", "DisplayCustomDateTime", "d")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "PROCESSEDDATE", "DisplayCustomDateTime", "d")
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "INVCDATE", "DisplayCustomDateTime", "d")
	
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GSTTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "SUBTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "GRSTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "VARIANCE", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcApproved.SetColumnProperty("gvAPInvApproved", "InvVarTotal", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	
	GUI.frmAPAutomationIndex.gsgcApproved.MainView("gvAPInvApproved")
	
	'saved
	GUI.frmAPAutomationIndex.gsgcSaved.AddGridviewFromDatatable("gvAPInvSaved","dtAPInvSaved")
	
	GUI.frmAPAutomationIndex.gsgcSaved.SetGridviewProperty("gvApInvSaved", V.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetGridviewProperty("gvApInvSaved", V.Enum.GridViewPropertyNames!Editable, False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetGridviewProperty("gvApInvSaved", V.Enum.GridViewPropertyNames!ReadOnly, True)
	
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "ID", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "POHEAD", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "VendName","HeaderFontBold",True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "InvcNumb","HeaderFontBold",True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "DOWNLOADED_DATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "NOTES", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "VENDCODE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "GSTTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "SUBTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "GRSTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "INVCDATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "DocSavedLocation", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "GssStatus", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "PROCESSEDDATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "POHEAD", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "RejectReason", "HeaderFontBold", True)
	
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "DocSavedLocation","Visible", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "GSTTOTAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "DOCID", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "SUBTOTAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "GRSTOTAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "INVCDATE", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "GssStatus", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "VENDCODE", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "ID", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "PROCESSEDDATE","Visible", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "DOWNLOADED_DATE", "Visible", True)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "NOTES", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "POHEAD", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "RejectReason", "Visible", False)
	
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "ID", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "GssStatus", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "DOCID", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "RejectReason", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "PROCESSEDDATE", "AllowShowHide", False)
	
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "ID", "Caption", "ID")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "POHEAD", "Caption", "PO")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "VendName","Caption","Vendor")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "InvcNumb","Caption","Invoice")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "DOWNLOADED_DATE", "Caption", "Received")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "NOTES", "Caption", "Notes")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "VENDCODE", "Caption", "Vendor ID")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "GSTTOTAL", "Caption", "Tax")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "SUBTOTAL", "Caption", "Subtotal")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "GRSTOTAL", "Caption", "Total")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "INVCDATE", "Caption", "Invoice Date")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "DocSavedLocation", "Caption", "Document")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "GssStatus", "Caption", "Status")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "PROCESSEDDATE", "Caption", "Processed")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "POHEAD", "Caption", "PO")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "RejectReason", "Caption", "Reject Reason")
	
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "DOWNLOADED_DATE", "DisplayCustomDateTime", "d")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "PROCESSEDDATE", "DisplayCustomDateTime", "d")
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "INVCDATE", "DisplayCustomDateTime", "d")
	
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "GSTTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "SUBTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcSaved.SetColumnProperty("gvApInvSaved", "GRSTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	
	GUI.frmAPAutomationIndex.gsgcSaved.MainView("gvAPInvSaved")
	
	'Tab Invoice Processed
	GUI.frmAPAutomationIndex.gsgcProcessed.AddGridviewFromDatatable("gvAPInvProcessed","dtAPInvProcessed")
	
	GUI.frmAPAutomationIndex.gsgcProcessed.SetGridviewProperty("gvApInvProcessed", V.Enum.GridViewPropertyNames!SuppressNothingDates, True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetGridviewProperty("gvApInvProcessed", V.Enum.GridViewPropertyNames!Editable, False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetGridviewProperty("gvApInvProcessed", V.Enum.GridViewPropertyNames!ReadOnly, True)
	
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "ID", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "POHEAD", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "VendName","HeaderFontBold",True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "InvcNumb","HeaderFontBold",True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "DOWNLOADED_DATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "NOTES", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "VENDCODE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "GSTTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "SUBTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "GRSTOTAL", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "INVCDATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "DocSavedLocation", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "GssStatus", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "PROCESSEDDATE", "HeaderFontBold", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "POHEAD", "HeaderFontBold", True)
	
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "DocSavedLocation","Visible", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "GSTTOTAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "DOCID", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "SUBTOTAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "GRSTOTAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "INVCDATE", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "GssStatus", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "VENDCODE", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "ID", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "PROCESSEDDATE","Visible", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "DOWNLOADED_DATE", "Visible", True)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "NOTES", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "POHEAD", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "RejectReason", "Visible", False)
	
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "ID", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "GssStatus", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "DOCID", "AllowShowHide", False)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "RejectReason", "AllowShowHide", False)
	
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "ID", "Caption", "ID")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "POHEAD", "Caption", "PO")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "VendName","Caption","Vendor")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "InvcNumb","Caption","Invoice")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "DOWNLOADED_DATE", "Caption", "Received")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "NOTES", "Caption", "Notes")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "VENDCODE", "Caption", "Vendor ID")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "GSTTOTAL", "Caption", "Tax")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "SUBTOTAL", "Caption", "Subtotal")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "GRSTOTAL", "Caption", "Total")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "INVCDATE", "Caption", "Invoice Date")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "DocSavedLocation", "Caption", "Document")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "GssStatus", "Caption", "Status")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "PROCESSEDDATE", "Caption", "Processed")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "POHEAD", "Caption", "PO")
	
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "DOWNLOADED_DATE", "DisplayCustomDateTime", "d")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "PROCESSEDDATE", "DisplayCustomDateTime", "d")
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "INVCDATE", "DisplayCustomDateTime", "d")
	
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "GSTTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "SUBTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcProcessed.SetColumnProperty("gvApInvProcessed", "GRSTOTAL", "DisplayCustomNumeric", V.Global.sMoneyFormat)
	
	GUI.frmAPAutomationIndex.gsgcProcessed.MainView("gvAPInvProcessed")
	
	'Mid Section---------------------------------------------------------------------------------------------------------------------------------------
	'Receivers
	GUI.frmAPAutomationIndex.gsgcRecLineItems.AddGridviewFromDatatable("gvRecLines","dtRecLines")
	
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetGridviewProperty("gvRecLines", "AllowDeleteRows",True)
	
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PURCHASE_ORDER", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED_ORIGINAL", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "VAT_RULE", "Visible", False)
	
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine", "VisibleIndex","0")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine", "Caption", "Select")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SelectLine","MinWidth","75")
	
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "Part", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "Part", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "Part", "Caption", "Part")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "Part","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "Part","MinWidth","75")
	
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED", "Caption", "Qty")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "QTY_RECEIVED","MinWidth","75")
	
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE", "Caption", "PO Line's")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "PO_LINE","MinWidth","75")
	
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT", "AllowEdit", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT", "Readonly", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT", "Caption", "Receipt Amt.")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT","MinWidth","75")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVED_AMT","DisplayCustomNumeric",V.Global.sMoneyFormat)
	
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT", "Caption", "Actual Amt.")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT","MinWidth","75")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "ACTUAL_AMT","DisplayCustomNumeric",V.Global.sMoneyFormat)
	
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GL_ACCOUNT", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GL_ACCOUNT", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GL_ACCOUNT", "Caption", "GL Account")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GL_ACCOUNT","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "GL_ACCOUNT","MinWidth","75")
	
	F.ODBC.Connection!Con.OpenCompanyConnection
	F.ODBC.Connection!Con.ExecuteAndReturn("select GL_ACCOUNT from V_GL_MASTER order by GL_ACCOUNT", V.Local.sRet)
	F.ODBC.Connection!Con.Close
	F.Intrinsic.Control.If(V.Local.sRet.Trim, !=, "")
		F.Intrinsic.String.Replace(V.Local.sRet, "#$#", "*!*", V.Local.sRet)
		F.Intrinsic.String.Build("*!*{0}", V.Local.sRet, V.Local.sRet)
		GUI.frmAPAutomationIndex.gsgcRecLineItems.ColumnEdit("gvRecLines", "GL_ACCOUNT", "DropDownList", V.Local.sRet)
	F.Intrinsic.Control.EndIf
	
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "JOB", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "JOB", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "JOB", "Caption", "Job")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "JOB","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "JOB","MinWidth","75")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SUFFIX", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SUFFIX", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SUFFIX", "Caption", "Suffix")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SUFFIX","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SUFFIX","MinWidth","75")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SEQ", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SEQ", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SEQ", "Caption", "Seq.")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SEQ","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "SEQ","MinWidth","75")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION", "Visible", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION", "Caption", "Location")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "LOCATION","MinWidth","75")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE", "Visible", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE", "Caption", "Taxable")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAXABLE","MinWidth","75")
	
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAX_CODE", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAX_CODE", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAX_CODE", "Caption", "Tax Code")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAX_CODE","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "TAX_CODE","MinWidth","75")
	
	F.ODBC.Connection!Con.OpenCompanyConnection
	F.ODBC.Connection!Con.ExecuteAndReturn("select RTRIM(ZONE) + RTRIM(AUTH) from V_AR_TAX_TABLES order by ZONE, AUTH", V.Local.sRet)
	F.ODBC.Connection!Con.Close
	F.Intrinsic.Control.If(V.Local.sRet.Trim, !=, "")
		F.Intrinsic.String.Replace(V.Local.sRet, "#$#", "*!*", V.Local.sRet)
		F.Intrinsic.String.Build("*!*{0}", V.Local.sRet, V.Local.sRet)
		GUI.frmAPAutomationIndex.gsgcRecLineItems.ColumnEdit("gvRecLines", "TAX_CODE", "DropDownList", V.Local.sRet)
	F.Intrinsic.Control.EndIf
	
	'Selected, Part, Qty, Line, Ext Cost, Gl Account, Job, Suffix, Seq, Location, Taxable, Tax Code, Receiver
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVER_NO", "AllowEdit", True)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVER_NO", "Readonly", False)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVER_NO", "Caption", "Receiver")
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVER_NO","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcRecLineItems.SetColumnProperty("gvRecLines", "RECEIVER_NO","MinWidth","75")
	
	GUI.frmAPAutomationIndex.gsgcRecLineItems.MainView("gvRecLines")
	
	'bottom seaction
	F.Intrinsic.Control.CallSub(setPropertiesPOLines)
	F.Intrinsic.Control.CallSub(setPropertiesAPInvoices)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.setProperties.End

Program.Sub.setPropertiesAPInvoices.Start
F.Intrinsic.Control.Try
	
	GUI.frmAPAutomationIndex.gsgcAPInvoices.visible(false)
	GUI.frmAPAutomationIndex.gsgcAPInvoices.AddGridviewFromDatatable("gvAPInvoices","dtAPInvoices")
	
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetGridViewProperty("gvAPInvoices","OptionsViewShowGroupPanel",True)
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetGridviewProperty("gvAPInvoices","OptionsFindAlwaysVisible",True)
	
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "AMT_INVOICE", "Caption", "Cost")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "AMT_INVOICE","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "AMT_INVOICE","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "AMT_INVOICE","DisplayCustomNumeric",V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "AMT_INVOICE","MinWidth","75")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "AMT_INVOICE","AllowEdit","False")
	
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "INVOICE","Caption","Invoice")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "INVOICE","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "INVOICE","ReadOnly","True")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "INVOICE","AllowEdit","False")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "INVOICE","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "INVOICE","MinWidth","75")
	
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "VENDOR","Caption","Vendor")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "VENDOR","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "VENDOR","ReadOnly","True")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "VENDOR","AllowEdit","False")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "VENDOR","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "VENDOR","MinWidth","75")
	
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","Caption","Purchase Order")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","CellForeColor",V.Color.Blue)
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","CellBackColor","LightYellow")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","ReadOnly","True")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","AllowEdit","False")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "PURCHASE_ORDER","MinWidth","75")
	
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","Caption","Date Invoice")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","ReadOnly","True")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","AllowEdit","False")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","MinWidth","120")
	GUI.frmAPAutomationIndex.gsgcAPInvoices.SetColumnProperty("gvAPInvoices", "DATE_INVOICE","Displaycustomdatetime","d")
	
	GUI.frmAPAutomationIndex.gsgcAPInvoices.visible(true)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.setPropertiesAPInvoices.End

Program.Sub.setPropertiesPOLines.Start
F.Intrinsic.Control.Try
	
	'bottom seaction
	GUI.frmAPAutomationIndex.gsgcPOLines.visible(false)
	GUI.frmAPAutomationIndex.gsgcPOLines.AddGridviewFromDatatable("gvPOLines","dtPOSelLines")
	
	GUI.frmAPAutomationIndex.gsgcPOLines.SetGridViewProperty("gvPOLines","OptionsViewShowGroupPanel",True)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetGridviewProperty("gvPOLines","OptionsFindAlwaysVisible",True)
	
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "Vendor", "Visible", "False")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "COST", "Caption", "Cost")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "COST","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "COST","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "COST","DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "COST","MinWidth","75")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "COST","AllowEdit","False")
	
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","Caption","Purchase Order")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","CellForeColor",V.Color.Blue)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","CellBackColor","LightYellow")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","ReadOnly","True")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","AllowEdit","False")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PURCHASE_ORDER","MinWidth","75")
	
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO", "Caption", "Record #")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","CellForeColor",V.Color.Blue)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","CellBackColor","LightYellow")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","ReadOnly","True")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","AllowEdit","False")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "RECORD_NO","MinWidth","75")
	
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "DESCRIPTION", "Caption", "Description")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "DESCRIPTION","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "DESCRIPTION","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "DESCRIPTION","MinWidth","200")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "DESCRIPTION","AllowEdit","False")
	
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "QTY_Order", "Caption", "Quantity")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "QTY_Order","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "QTY_Order","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "QTY_Order","MinWidth","75")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "QTY_Order","AllowEdit","False")
	
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "EXTENSION", "Caption", "Extension")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "EXTENSION","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "EXTENSION","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "EXTENSION","DisplayCustomNumeric", V.Global.sMoneyFormat)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "EXTENSION","MinWidth","75")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "EXTENSION", "AllowEdit", False)
	
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "UM_PURCHASING", "Caption", "Unit Measure")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "UM_PURCHASING","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "UM_PURCHASING","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "UM_PURCHASING","MinWidth","75")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "UM_PURCHASING","AllowEdit","False")
	
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART", "Caption", "Part")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","HeaderFontBold",true)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","HeaderHAlignment","Center")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","ReadOnly","True")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","AllowEdit","False")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","CellForeColor",V.Color.Blue)
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","CellBackColor","LightYellow")
	GUI.frmAPAutomationIndex.gsgcPOLines.SetColumnProperty("gvPOLines", "PART","MinWidth","75")
	
	GUI.frmAPAutomationIndex.gsgcPOLines.visible(true)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.setPropertiesPOLines.End

Program.Sub.GetBranch.Start
'returns BRANCH

F.Intrinsic.Control.Try

V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)
V.Local.bBranch.Declare(Boolean)

F.Global.General.ReadOption(140004, 0, False, 1, V.Local.bBranch)
F.Intrinsic.Control.If(V.Local.bBranch.Not)
	V.Local.sRet.Set("NA")
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("select RTRIM(BRANCH_ID) from V_ACCTG_BRANCH where CO_CODE = '{0}'", V.Caller.CompanyCode, V.Local.sSQL)

	F.ODBC.Connection!Con.OpenCompanyConnection
	F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL, V.Local.sRet)
	F.ODBC.Connection!Con.Close
	
	'if no branch is set up, we use NA
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		V.Local.sRet.Set("NA")
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Local.sRet.Trim, =, "")
			V.Local.sRet.Set("NA")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.AddRV("BRANCH", V.Local.sRet)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.GetBranch.End

Program.Sub.LoadContextMenu.Start
F.Intrinsic.Control.Try

GUI.frmAPAutomationIndex..ContextMenuCreate("ctxApInvoice_gsgcAPInvoices")
GUI.frmAPAutomationIndex..ContextMenuAddItem("ctxApInvoice_gsgcAPInvoices", "Export", 0, "Export")
GUI.frmAPAutomationIndex..ContextMenuSetItemEventHandler("ctxApInvoice_gsgcAPInvoices", "Export", "ctxExport_Click")
GUI.frmAPAutomationIndex.gsgcAPInvoices.ContextMenuAttach("ctxApInvoice_gsgcAPInvoices")

GUI.frmAPAutomationIndex..ContextMenuCreate("ctxApInvoice_gsgcApproved")
GUI.frmAPAutomationIndex..ContextMenuAddItem("ctxApInvoice_gsgcApproved", "Export", 0, "Export")
GUI.frmAPAutomationIndex..ContextMenuSetItemEventHandler("ctxApInvoice_gsgcApproved", "Export", "ctxExport_Click")
GUI.frmAPAutomationIndex.gsgcApproved.ContextMenuAttach("ctxApInvoice_gsgcApproved")

GUI.frmAPAutomationIndex..ContextMenuCreate("ctxApInvoice_gsgcPOLines")
GUI.frmAPAutomationIndex..ContextMenuAddItem("ctxApInvoice_gsgcPOLines", "Export", 0, "Export")
GUI.frmAPAutomationIndex..ContextMenuSetItemEventHandler("ctxApInvoice_gsgcPOLines", "Export", "ctxExport_Click")
GUI.frmAPAutomationIndex.gsgcPOLines.ContextMenuAttach("ctxApInvoice_gsgcPOLines")

GUI.frmAPAutomationIndex..ContextMenuCreate("ctxApInvoice_gsgcProcessed")
GUI.frmAPAutomationIndex..ContextMenuAddItem("ctxApInvoice_gsgcProcessed", "Export", 0, "Export")
GUI.frmAPAutomationIndex..ContextMenuSetItemEventHandler("ctxApInvoice_gsgcProcessed", "Export", "ctxExport_Click")
GUI.frmAPAutomationIndex.gsgcProcessed.ContextMenuAttach("ctxApInvoice_gsgcProcessed")

GUI.frmAPAutomationIndex..ContextMenuCreate("ctxApInvoice_gsgcQueue")
GUI.frmAPAutomationIndex..ContextMenuAddItem("ctxApInvoice_gsgcQueue", "Export", 0, "Export")
GUI.frmAPAutomationIndex..ContextMenuSetItemEventHandler("ctxApInvoice_gsgcQueue", "Export", "ctxExport_Click")
GUI.frmAPAutomationIndex.gsgcQueue.ContextMenuAttach("ctxApInvoice_gsgcQueue")

GUI.frmAPAutomationIndex..ContextMenuCreate("ctxApInvoice_gsgcRecLineItems")
GUI.frmAPAutomationIndex..ContextMenuAddItem("ctxApInvoice_gsgcRecLineItems", "SelectAll", 0, "Select All")
GUI.frmAPAutomationIndex..ContextMenuSetItemEventHandler("ctxApInvoice_gsgcRecLineItems", "SelectAll", "ctxExport_SelectAll")
GUI.frmAPAutomationIndex..ContextMenuAddItem("ctxApInvoice_gsgcRecLineItems", "Export", 0, "Export")
GUI.frmAPAutomationIndex..ContextMenuSetItemEventHandler("ctxApInvoice_gsgcRecLineItems", "Export", "ctxExport_Click")
GUI.frmAPAutomationIndex.gsgcRecLineItems.ContextMenuAttach("ctxApInvoice_gsgcRecLineItems")

GUI.frmAPAutomationIndex..ContextMenuCreate("ctxApInvoice_gsgcReject")
GUI.frmAPAutomationIndex..ContextMenuAddItem("ctxApInvoice_gsgcReject", "Export", 0, "Export")
GUI.frmAPAutomationIndex..ContextMenuSetItemEventHandler("ctxApInvoice_gsgcReject", "Export", "ctxExport_Click")
GUI.frmAPAutomationIndex.gsgcReject.ContextMenuAttach("ctxApInvoice_gsgcReject")

GUI.frmAPAutomationIndex..ContextMenuCreate("ctxApInvoice_gsgcSaved")
GUI.frmAPAutomationIndex..ContextMenuAddItem("ctxApInvoice_gsgcSaved", "Export", 0, "Export")
GUI.frmAPAutomationIndex..ContextMenuSetItemEventHandler("ctxApInvoice_gsgcSaved", "Export", "ctxExport_Click")
GUI.frmAPAutomationIndex.gsgcSaved.ContextMenuAttach("ctxApInvoice_gsgcSaved")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.LoadContextMenu.End

Program.Sub.ctxExport_SelectAll.Start
F.Intrinsic.Control.Try

F.Data.DataTable.SetValue("dtRecLines", -1, "SelectLine", True)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.ctxExport_SelectAll.End

Program.Sub.ctxExport_Click.Start
F.Intrinsic.Control.Try

V.Local.sName.Declare(String)
V.Local.sGridControl.Declare(String)

F.Intrinsic.String.Split(V.Args.MenuName, "_", V.Local.sName)
V.Local.sGridControl.Set(V.Local.sName(1))
V.Local.sName.Redim(0, 0)

F.Intrinsic.Control.If(V.Local.sGridControl.Trim, !=, "")
	F.Intrinsic.String.Build("GCG_6861_{0}", V.Local.sGridControl, V.Local.sName)
	F.Intrinsic.Control.CallSub(Export, "Form", "frmAPAutomationIndex", "GridControl", V.Local.sGridControl, "FileName", V.Local.sName)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.ctxExport_Click.End

Program.Sub.lblAPInvDtl_DblClick.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Caller.User, =, "SUPERVSR")
	Function.Intrinsic.Debug.InvokeDebugger
	Function.Intrinsic.Debug.Stop
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.lblAPInvDtl_DblClick.End

Program.Sub.SplitContainer1_SplitterMoved.Start
F.Intrinsic.Control.Try

V.Local.iMin.Declare(Long)

F.Intrinsic.Math.Add(V.Screen.frmAPAutomationIndex!cmdEAddLine.CurrentX, V.Screen.frmAPAutomationIndex!cmdEAddLine.Width, 20, V.Local.iMin)

F.Intrinsic.Control.If(V.Screen.frmAPAutomationIndex!SplitContainer1.SplitterPosition, <=, V.Local.iMin)
	GUI.frmAPAutomationIndex.SplitContainer1.SplitterPosition(V.Local.iMin)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.SplitContainer1_SplitterMoved.End

Program.Sub.gsWebBrowser_UrlChanged.Start
F.Intrinsic.Control.Try

F.Intrinsic.Math.Add(V.Global.iURLCounter, 1, V.Global.iURLCounter)
F.Intrinsic.Control.If(V.Global.iURLCounter, >=, 3)
	F.Intrinsic.Control.CallSub(FormLearn_Unload)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.gsWebBrowser_UrlChanged.End

Program.Sub.loadLookups.Start
F.Intrinsic.Control.Try

	'GL master
	F.Intrinsic.Control.If(V.DataTable.dtGLMast.Exists)
		F.Data.DataTable.Close("dtGLMast")
	F.Intrinsic.Control.EndIf
	F.Data.Datatable.CreateFromSQL("dtGLMast","con6861","SELECT GL_ACCOUNT AS 'Account', DESCR as 'Description' FROM V_GL_MASTER where inactive_date='1900-01-01' order by GL_ACCOUNT",true)
	GUI.frmAPAutomationIndex.lookupGL.DataTableBasis("dtGLMast")
	GUI.frmAPAutomationIndex.lookupGL.show

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.loadLookups.End

Program.Sub.lookupGL_SelectionMade.Start
F.Intrinsic.Control.Try

GUI.frmAPAutomationIndex.txtEGLAccount.Text(V.DataTable.lookupGL_Result(0).ACCOUNT!FIELDVALTRIM)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.lookupGL_SelectionMade.End

Program.Sub.txtSupplierName_LostFocus.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.CallSub(checkXrefSuppPORec)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage)
F.Intrinsic.Control.EndTry
Program.Sub.txtSupplierName_LostFocus.End

Program.Sub.Comments.Start
${$5$}$20.1.8693.27812$}$0
${$6$}$rseddon$}$20240228091636246$}$DkKb6sybY9hE3N0enyRwKJuHSlMGTgRbkwdKLri347QbTeVkFkEc2+46XQ3MqxxtjIEfevK80uI=
Program.Sub.Comments.End